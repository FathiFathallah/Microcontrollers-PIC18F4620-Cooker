

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 08 15:49:03 2022

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           ; Version 2.05
    77                           ; Generated 20/12/2018 GMT
    78                           ; 
    79                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F4620 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     
   111                           	psect	idataBANK1
   112  004654                     __pidataBANK1:
   113                           	opt callstack 0
   114                           
   115                           ;initializer for _LCD_INIT_STRING
   116  004654  28                 	db	40
   117  004655  0C                 	db	12
   118  004656  01                 	db	1
   119  004657  06                 	db	6
   120                           
   121                           ;initializer for _H
   122  004658  0001               	dw	1
   123  0000                     _ADRESL	set	4035
   124  0000                     _ADRESH	set	4036
   125  0000                     _ADCON2	set	4032
   126  0000                     _ADCON0bits	set	4034
   127  0000                     _PORTEbits	set	3972
   128  0000                     _PORTBbits	set	3969
   129  0000                     _PORTB	set	3969
   130  0000                     _IPR2	set	4002
   131  0000                     _PIR2	set	4001
   132  0000                     _PIE2	set	4000
   133  0000                     _IPR1	set	3999
   134  0000                     _PIR1	set	3998
   135  0000                     _PIE1	set	3997
   136  0000                     _INTCON3	set	4080
   137  0000                     _INTCON2bits	set	4081
   138  0000                     _INTCON2	set	4081
   139  0000                     _INTCON	set	4082
   140  0000                     _RCONbits	set	4048
   141  0000                     _T0CON	set	4053
   142  0000                     _TRISE	set	3990
   143  0000                     _TRISD	set	3989
   144  0000                     _TRISA	set	3986
   145  0000                     _PORTC	set	3970
   146  0000                     _TRISC	set	3988
   147  0000                     _TRISB	set	3987
   148  0000                     _ADCON1	set	4033
   149  0000                     _ADCON0	set	4034
   150  0000                     _INTCON3bits	set	4080
   151  0000                     _T0CONbits	set	4053
   152  0000                     _INTCONbits	set	4082
   153  0000                     _TMR3L	set	4018
   154  0000                     _TMR3H	set	4019
   155  0000                     _PORTCbits	set	3970
   156                           
   157                           	psect	smallconst
   158  001000                     __psmallconst:
   159                           	opt callstack 0
   160  001000  00                 	db	0
   161  001001                     STR_10:
   162                           
   163                           ; BSR set to: 1
   164  001001  54                 	db	84	;'T'
   165  001002  69                 	db	105	;'i'
   166  001003  6D                 	db	109	;'m'
   167  001004  65                 	db	101	;'e'
   168  001005  3A                 	db	58	;':'
   169  001006  20                 	db	32
   170  001007  25                 	db	37
   171  001008  2E                 	db	46
   172  001009  32                 	db	50	;'2'
   173  00100A  64                 	db	100	;'d'
   174  00100B  3A                 	db	58	;':'
   175  00100C  25                 	db	37
   176  00100D  2E                 	db	46
   177  00100E  32                 	db	50	;'2'
   178  00100F  64                 	db	100	;'d'
   179  001010  3A                 	db	58	;':'
   180  001011  25                 	db	37
   181  001012  2E                 	db	46
   182  001013  32                 	db	50	;'2'
   183  001014  64                 	db	100	;'d'
   184  001015  00                 	db	0
   185  001016                     STR_2:
   186                           
   187                           ; BSR set to: 1
   188  001016  31                 	db	49	;'1'
   189  001017  30                 	db	48	;'0'
   190  001018  53                 	db	83	;'S'
   191  001019  65                 	db	101	;'e'
   192  00101A  63                 	db	99	;'c'
   193  00101B  20                 	db	32
   194  00101C  20                 	db	32
   195  00101D  20                 	db	32
   196  00101E  20                 	db	32
   197  00101F  20                 	db	32
   198  001020  20                 	db	32
   199  001021  20                 	db	32
   200  001022  20                 	db	32
   201  001023  20                 	db	32
   202  001024  20                 	db	32
   203  001025  00                 	db	0
   204  001026                     STR_3:
   205                           
   206                           ; BSR set to: 1
   207  001026  4D                 	db	77	;'M'
   208  001027  69                 	db	105	;'i'
   209  001028  6E                 	db	110	;'n'
   210  001029  20                 	db	32
   211  00102A  20                 	db	32
   212  00102B  20                 	db	32
   213  00102C  20                 	db	32
   214  00102D  20                 	db	32
   215  00102E  20                 	db	32
   216  00102F  20                 	db	32
   217  001030  20                 	db	32
   218  001031  20                 	db	32
   219  001032  20                 	db	32
   220  001033  00                 	db	0
   221  001034                     STR_4:
   222                           
   223                           ; BSR set to: 1
   224  001034  31                 	db	49	;'1'
   225  001035  30                 	db	48	;'0'
   226  001036  4D                 	db	77	;'M'
   227  001037  69                 	db	105	;'i'
   228  001038  6E                 	db	110	;'n'
   229  001039  20                 	db	32
   230  00103A  20                 	db	32
   231  00103B  20                 	db	32
   232  00103C  20                 	db	32
   233  00103D  20                 	db	32
   234  00103E  20                 	db	32
   235  00103F  00                 	db	0
   236  001040                     STR_12:
   237                           
   238                           ; BSR set to: 1
   239  001040  53                 	db	83	;'S'
   240  001041  50                 	db	80	;'P'
   241  001042  3A                 	db	58	;':'
   242  001043  25                 	db	37
   243  001044  35                 	db	53	;'5'
   244  001045  2E                 	db	46
   245  001046  31                 	db	49	;'1'
   246  001047  66                 	db	102	;'f'
   247  001048  43                 	db	67	;'C'
   248  001049  20                 	db	32
   249  00104A  20                 	db	32
   250  00104B  00                 	db	0
   251  00104C                     STR_11:
   252                           
   253                           ; BSR set to: 1
   254  00104C  43                 	db	67	;'C'
   255  00104D  54                 	db	84	;'T'
   256  00104E  3A                 	db	58	;':'
   257  00104F  25                 	db	37
   258  001050  35                 	db	53	;'5'
   259  001051  2E                 	db	46
   260  001052  31                 	db	49	;'1'
   261  001053  66                 	db	102	;'f'
   262  001054  43                 	db	67	;'C'
   263  001055  20                 	db	32
   264  001056  20                 	db	32
   265  001057  00                 	db	0
   266  001058                     STR_5:
   267                           
   268                           ; BSR set to: 1
   269  001058  48                 	db	72	;'H'
   270  001059  52                 	db	82	;'R'
   271  00105A  20                 	db	32
   272  00105B  20                 	db	32
   273  00105C  20                 	db	32
   274  00105D  20                 	db	32
   275  00105E  20                 	db	32
   276  00105F  20                 	db	32
   277  001060  20                 	db	32
   278  001061  20                 	db	32
   279  001062  00                 	db	0
   280  001063                     STR_9:
   281                           
   282                           ; BSR set to: 1
   283  001063  43                 	db	67	;'C'
   284  001064  4B                 	db	75	;'K'
   285  001065  3A                 	db	58	;':'
   286  001066  4F                 	db	79	;'O'
   287  001067  46                 	db	70	;'F'
   288  001068  46                 	db	70	;'F'
   289  001069  00                 	db	0
   290  00106A                     STR_7:
   291                           
   292                           ; BSR set to: 1
   293  00106A  48                 	db	72	;'H'
   294  00106B  54                 	db	84	;'T'
   295  00106C  3A                 	db	58	;':'
   296  00106D  4F                 	db	79	;'O'
   297  00106E  46                 	db	70	;'F'
   298  00106F  46                 	db	70	;'F'
   299  001070  00                 	db	0
   300  001071                     STR_8:
   301                           
   302                           ; BSR set to: 1
   303  001071  43                 	db	67	;'C'
   304  001072  4B                 	db	75	;'K'
   305  001073  3A                 	db	58	;':'
   306  001074  20                 	db	32
   307  001075  4F                 	db	79	;'O'
   308  001076  4E                 	db	78	;'N'
   309  001077  00                 	db	0
   310  001078                     STR_6:
   311                           
   312                           ; BSR set to: 1
   313  001078  48                 	db	72	;'H'
   314  001079  54                 	db	84	;'T'
   315  00107A  3A                 	db	58	;':'
   316  00107B  20                 	db	32
   317  00107C  4F                 	db	79	;'O'
   318  00107D  4E                 	db	78	;'N'
   319  00107E  00                 	db	0
   320  00107F                     STR_14:
   321                           
   322                           ; BSR set to: 1
   323  00107F  49                 	db	73	;'I'
   324  001080  4E                 	db	78	;'N'
   325  001081  46                 	db	70	;'F'
   326  001082  00                 	db	0
   327  001083                     STR_18:
   328                           
   329                           ; BSR set to: 1
   330  001083  4E                 	db	78	;'N'
   331  001084  41                 	db	65	;'A'
   332  001085  4E                 	db	78	;'N'
   333  001086  00                 	db	0
   334  001087                     STR_15:
   335                           
   336                           ; BSR set to: 1
   337  001087  69                 	db	105	;'i'
   338  001088  6E                 	db	110	;'n'
   339  001089  66                 	db	102	;'f'
   340  00108A  00                 	db	0
   341  00108B                     STR_19:
   342                           
   343                           ; BSR set to: 1
   344  00108B  6E                 	db	110	;'n'
   345  00108C  61                 	db	97	;'a'
   346  00108D  6E                 	db	110	;'n'
   347  00108E  00                 	db	0
   348  00108F                     STR_13:
   349                           
   350                           ; BSR set to: 1
   351  00108F  4D                 	db	77	;'M'
   352  001090  44                 	db	68	;'D'
   353  001091  3A                 	db	58	;':'
   354  001092  00                 	db	0
   355  001093                     STR_22:
   356                           
   357                           ; BSR set to: 1
   358  001093  6C                 	db	108	;'l'
   359  001094  66                 	db	102	;'f'
   360  001095  00                 	db	0
   361  0000                     
   362                           ; #config settings
   363  001096  00                 	db	0	; dummy byte at the end
   364  0000                     
   365                           	psect	cinit
   366  004112                     __pcinit:
   367                           	opt callstack 0
   368  004112                     start_initialization:
   369                           	opt callstack 0
   370  004112                     __initialization:
   371                           	opt callstack 0
   372                           
   373                           ; Initialize objects allocated to BANK1 (6 bytes)
   374                           ; load TBLPTR registers with __pidataBANK1
   375  004112  0E54               	movlw	low __pidataBANK1
   376  004114  6EF6               	movwf	tblptrl,c
   377  004116  0E46               	movlw	high __pidataBANK1
   378  004118  6EF7               	movwf	tblptrh,c
   379  00411A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   380  00411C  6EF8               	movwf	tblptru,c
   381  00411E  EE01  F0F4         	lfsr	0,__pdataBANK1
   382  004122  EE10 F006          	lfsr	1,6
   383  004126                     copy_data0:
   384  004126  0009               	tblrd		*+
   385  004128  CFF5 FFEE          	movff	tablat,postinc0
   386  00412C  50E5               	movf	postdec1,w,c
   387  00412E  50E1               	movf	fsr1l,w,c
   388  004130  E1FA               	bnz	copy_data0
   389                           
   390                           ; Clear objects allocated to BANK1 (94 bytes)
   391  004132  EE01  F096         	lfsr	0,__pbssBANK1
   392  004136  0E5E               	movlw	94
   393  004138                     clear_0:
   394  004138  6AEE               	clrf	postinc0,c
   395  00413A  06E8               	decf	wreg,f,c
   396  00413C  E1FD               	bnz	clear_0
   397                           
   398                           ; Clear objects allocated to BANK0 (16 bytes)
   399  00413E  EE00  F0EA         	lfsr	0,__pbssBANK0
   400  004142  0E10               	movlw	16
   401  004144                     clear_1:
   402  004144  6AEE               	clrf	postinc0,c
   403  004146  06E8               	decf	wreg,f,c
   404  004148  E1FD               	bnz	clear_1
   405                           
   406                           ; Clear objects allocated to COMRAM (6 bytes)
   407  00414A  6A77               	clrf	(__pbssCOMRAM+5)& (0+255),c
   408  00414C  6A76               	clrf	(__pbssCOMRAM+4)& (0+255),c
   409  00414E  6A75               	clrf	(__pbssCOMRAM+3)& (0+255),c
   410  004150  6A74               	clrf	(__pbssCOMRAM+2)& (0+255),c
   411  004152  6A73               	clrf	(__pbssCOMRAM+1)& (0+255),c
   412  004154  6A72               	clrf	__pbssCOMRAM& (0+255),c
   413  004156                     end_of_initialization:
   414                           	opt callstack 0
   415  004156                     __end_of__initialization:
   416                           	opt callstack 0
   417  004156  9078               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   418  004158  9278               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   419  00415A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   420  00415C  6EF8               	movwf	tblptru,c
   421  00415E  0100               	movlb	0
   422  004160  EF0A  F00D         	goto	_main	;jump to C main() function
   423                           
   424                           	psect	bssCOMRAM
   425  000072                     __pbssCOMRAM:
   426                           	opt callstack 0
   427  000072                     _sec:
   428                           	opt callstack 0
   429  000072                     	ds	2
   430  000074                     _min:
   431                           	opt callstack 0
   432  000074                     	ds	2
   433  000076                     _hours:
   434                           	opt callstack 0
   435  000076                     	ds	2
   436                           
   437                           	psect	bssBANK0
   438  0000EA                     __pbssBANK0:
   439                           	opt callstack 0
   440  0000EA                     floorf@F524:
   441                           	opt callstack 0
   442  0000EA                     	ds	4
   443  0000EE                     ___fpclassifyf@F463:
   444                           	opt callstack 0
   445  0000EE                     	ds	4
   446  0000F2                     _nout:
   447                           	opt callstack 0
   448  0000F2                     	ds	2
   449  0000F4                     _width:
   450                           	opt callstack 0
   451  0000F4                     	ds	2
   452  0000F6                     _prec:
   453                           	opt callstack 0
   454  0000F6                     	ds	2
   455  0000F8                     _flags:
   456                           	opt callstack 0
   457  0000F8                     	ds	2
   458                           
   459                           	psect	bssBANK1
   460  000196                     __pbssBANK1:
   461                           	opt callstack 0
   462  000196                     _Temp:
   463                           	opt callstack 0
   464  000196                     	ds	4
   465  00019A                     _SP:
   466                           	opt callstack 0
   467  00019A                     	ds	4
   468  00019E                     _mode:
   469                           	opt callstack 0
   470  00019E                     	ds	2
   471  0001A0                     _cooker:
   472                           	opt callstack 0
   473  0001A0                     	ds	2
   474  0001A2                     _heater:
   475                           	opt callstack 0
   476  0001A2                     	ds	2
   477  0001A4                     _dbuf:
   478                           	opt callstack 0
   479  0001A4                     	ds	80
   480                           
   481                           	psect	dataBANK1
   482  0001F4                     __pdataBANK1:
   483                           	opt callstack 0
   484  0001F4                     _LCD_INIT_STRING:
   485                           	opt callstack 0
   486  0001F4                     	ds	4
   487  0001F8                     _H:
   488                           	opt callstack 0
   489  0001F8                     	ds	2
   490                           
   491                           	psect	cstackBANK1
   492  000100                     __pcstackBANK1:
   493                           	opt callstack 0
   494  000100                     	ds	2
   495  000102                     sprintf@ap:
   496                           	opt callstack 0
   497                           
   498                           ; 2 bytes @ 0x2
   499  000102                     	ds	2
   500  000104                     sprintf@f:
   501                           	opt callstack 0
   502                           
   503                           ; 6 bytes @ 0x4
   504  000104                     	ds	6
   505  00010A                     display@LCDP:
   506                           	opt callstack 0
   507                           
   508                           ; 64 bytes @ 0xA
   509  00010A                     	ds	64
   510  00014A                     display@LCD:
   511                           	opt callstack 0
   512                           
   513                           ; 64 bytes @ 0x4A
   514  00014A                     	ds	64
   515  00018A                     display@HT:
   516                           	opt callstack 0
   517                           
   518                           ; 6 bytes @ 0x8A
   519  00018A                     	ds	6
   520  000190                     display@CK:
   521                           	opt callstack 0
   522                           
   523                           ; 6 bytes @ 0x90
   524  000190                     	ds	6
   525                           
   526                           	psect	cstackBANK0
   527  000080                     __pcstackBANK0:
   528                           	opt callstack 0
   529  000080                     efgtoa@ou:
   530                           	opt callstack 0
   531                           
   532                           ; 4 bytes @ 0x0
   533  000080                     	ds	4
   534  000084                     _efgtoa$918:
   535                           	opt callstack 0
   536                           
   537                           ; 2 bytes @ 0x4
   538  000084                     	ds	2
   539  000086                     _efgtoa$919:
   540                           	opt callstack 0
   541                           
   542                           ; 2 bytes @ 0x6
   543  000086                     	ds	2
   544  000088                     _efgtoa$923:
   545                           	opt callstack 0
   546                           
   547                           ; 2 bytes @ 0x8
   548  000088                     	ds	2
   549  00008A                     _efgtoa$927:
   550                           	opt callstack 0
   551                           
   552                           ; 2 bytes @ 0xA
   553  00008A                     	ds	2
   554  00008C                     _efgtoa$928:
   555                           	opt callstack 0
   556                           
   557                           ; 2 bytes @ 0xC
   558  00008C                     	ds	2
   559  00008E                     _efgtoa$929:
   560                           	opt callstack 0
   561                           
   562                           ; 2 bytes @ 0xE
   563  00008E                     	ds	2
   564  000090                     efgtoa@t:
   565                           	opt callstack 0
   566                           
   567                           ; 2 bytes @ 0x10
   568  000090                     	ds	2
   569  000092                     efgtoa@pp:
   570                           	opt callstack 0
   571                           
   572                           ; 2 bytes @ 0x12
   573  000092                     	ds	2
   574  000094                     efgtoa@m:
   575                           	opt callstack 0
   576                           
   577                           ; 2 bytes @ 0x14
   578  000094                     	ds	2
   579  000096                     efgtoa@ne:
   580                           	opt callstack 0
   581                           
   582                           ; 2 bytes @ 0x16
   583  000096                     	ds	2
   584  000098                     efgtoa@d:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0x18
   588  000098                     	ds	2
   589  00009A                     efgtoa@sign:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x1A
   593  00009A                     	ds	2
   594  00009C                     efgtoa@p:
   595                           	opt callstack 0
   596                           
   597                           ; 2 bytes @ 0x1C
   598  00009C                     	ds	2
   599  00009E                     efgtoa@nmode:
   600                           	opt callstack 0
   601                           
   602                           ; 1 bytes @ 0x1E
   603  00009E                     	ds	1
   604  00009F                     efgtoa@w:
   605                           	opt callstack 0
   606                           
   607                           ; 2 bytes @ 0x1F
   608  00009F                     	ds	2
   609  0000A1                     efgtoa@mode:
   610                           	opt callstack 0
   611                           
   612                           ; 1 bytes @ 0x21
   613  0000A1                     	ds	1
   614  0000A2                     efgtoa@h:
   615                           	opt callstack 0
   616                           
   617                           ; 4 bytes @ 0x22
   618  0000A2                     	ds	4
   619  0000A6                     efgtoa@l:
   620                           	opt callstack 0
   621                           
   622                           ; 4 bytes @ 0x26
   623  0000A6                     	ds	4
   624  0000AA                     efgtoa@i:
   625                           	opt callstack 0
   626                           
   627                           ; 2 bytes @ 0x2A
   628  0000AA                     	ds	2
   629  0000AC                     efgtoa@g:
   630                           	opt callstack 0
   631                           
   632                           ; 4 bytes @ 0x2C
   633  0000AC                     	ds	4
   634  0000B0                     efgtoa@e:
   635                           	opt callstack 0
   636                           
   637                           ; 2 bytes @ 0x30
   638  0000B0                     	ds	2
   639  0000B2                     efgtoa@n:
   640                           	opt callstack 0
   641                           
   642                           ; 2 bytes @ 0x32
   643  0000B2                     	ds	2
   644  0000B4                     efgtoa@u:
   645                           	opt callstack 0
   646                           
   647                           ; 4 bytes @ 0x34
   648  0000B4                     	ds	4
   649  0000B8                     ?_vfpfcnvrt:
   650                           	opt callstack 0
   651  0000B8                     vfpfcnvrt@fp:
   652                           	opt callstack 0
   653                           
   654                           ; 2 bytes @ 0x38
   655  0000B8                     	ds	2
   656  0000BA                     vfpfcnvrt@fmt:
   657                           	opt callstack 0
   658                           
   659                           ; 2 bytes @ 0x3A
   660  0000BA                     	ds	2
   661  0000BC                     vfpfcnvrt@ap:
   662                           	opt callstack 0
   663                           
   664                           ; 2 bytes @ 0x3C
   665  0000BC                     	ds	2
   666  0000BE                     ??_vfpfcnvrt:
   667                           
   668                           ; 1 bytes @ 0x3E
   669  0000BE                     	ds	4
   670  0000C2                     vfpfcnvrt@ll:
   671                           	opt callstack 0
   672                           
   673                           ; 8 bytes @ 0x42
   674  0000C2                     	ds	8
   675  0000CA                     _vfpfcnvrt$943:
   676                           	opt callstack 0
   677                           
   678                           ; 2 bytes @ 0x4A
   679  0000CA                     	ds	2
   680  0000CC                     _vfpfcnvrt$944:
   681                           	opt callstack 0
   682                           
   683                           ; 2 bytes @ 0x4C
   684  0000CC                     	ds	2
   685  0000CE                     _vfpfcnvrt$949:
   686                           	opt callstack 0
   687                           
   688                           ; 2 bytes @ 0x4E
   689  0000CE                     	ds	2
   690  0000D0                     vfpfcnvrt@f:
   691                           	opt callstack 0
   692                           
   693                           ; 4 bytes @ 0x50
   694  0000D0                     	ds	4
   695  0000D4                     vfpfcnvrt@ct:
   696                           	opt callstack 0
   697                           
   698                           ; 3 bytes @ 0x54
   699  0000D4                     	ds	3
   700  0000D7                     vfpfcnvrt@c:
   701                           	opt callstack 0
   702                           
   703                           ; 1 bytes @ 0x57
   704  0000D7                     	ds	1
   705  0000D8                     ?_vfprintf:
   706                           	opt callstack 0
   707  0000D8                     vfprintf@fp:
   708                           	opt callstack 0
   709                           
   710                           ; 2 bytes @ 0x58
   711  0000D8                     	ds	2
   712  0000DA                     vfprintf@fmt:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0x5A
   716  0000DA                     	ds	2
   717  0000DC                     vfprintf@ap:
   718                           	opt callstack 0
   719                           
   720                           ; 2 bytes @ 0x5C
   721  0000DC                     	ds	2
   722  0000DE                     ?_sprintf:
   723                           	opt callstack 0
   724  0000DE                     sprintf@s:
   725                           	opt callstack 0
   726                           
   727                           ; 2 bytes @ 0x5E
   728  0000DE                     	ds	2
   729  0000E0                     sprintf@fmt:
   730                           	opt callstack 0
   731                           
   732                           ; 2 bytes @ 0x60
   733  0000E0                     	ds	8
   734  0000E8                     ??_display:
   735                           
   736                           ; 1 bytes @ 0x68
   737  0000E8                     	ds	2
   738                           
   739                           	psect	cstackCOMRAM
   740  000001                     __pcstackCOMRAM:
   741                           	opt callstack 0
   742  000001                     ??_EXT_Int1_isr:
   743  000001                     i2delay_ms@n:
   744                           	opt callstack 0
   745                           
   746                           ; 2 bytes @ 0x0
   747  000001                     	ds	2
   748  000003                     i2delay_ms@i:
   749                           	opt callstack 0
   750                           
   751                           ; 2 bytes @ 0x2
   752  000003                     	ds	2
   753  000005                     buzzerON@i:
   754                           	opt callstack 0
   755                           
   756                           ; 2 bytes @ 0x4
   757  000005                     	ds	2
   758  000007                     ??_delay_cycles:
   759  000007                     ?_strlen:
   760                           	opt callstack 0
   761  000007                     ?___fpclassifyf:
   762                           	opt callstack 0
   763  000007                     ?_isupper:
   764                           	opt callstack 0
   765  000007                     ?_isdigit:
   766                           	opt callstack 0
   767  000007                     ?_strncmp:
   768                           	opt callstack 0
   769  000007                     ?_isspace:
   770                           	opt callstack 0
   771  000007                     ?_read_adc_raw_no_lib:
   772                           	opt callstack 0
   773  000007                     ?___wmul:
   774                           	opt callstack 0
   775  000007                     ?___awdiv:
   776                           	opt callstack 0
   777  000007                     ?___awmod:
   778                           	opt callstack 0
   779  000007                     ?___fladd:
   780                           	opt callstack 0
   781  000007                     ?___flneg:
   782                           	opt callstack 0
   783  000007                     ?___fltol:
   784                           	opt callstack 0
   785  000007                     ?___aodiv:
   786                           	opt callstack 0
   787  000007                     ?___aomod:
   788                           	opt callstack 0
   789  000007                     delay_ms@n:
   790                           	opt callstack 0
   791  000007                     ___wmul@multiplier:
   792                           	opt callstack 0
   793  000007                     ___awdiv@dividend:
   794                           	opt callstack 0
   795  000007                     ___awmod@dividend:
   796                           	opt callstack 0
   797  000007                     isdigit@c:
   798                           	opt callstack 0
   799  000007                     isspace@c:
   800                           	opt callstack 0
   801  000007                     isupper@c:
   802                           	opt callstack 0
   803  000007                     fputc@c:
   804                           	opt callstack 0
   805  000007                     strcpy@dest:
   806                           	opt callstack 0
   807  000007                     strlen@s:
   808                           	opt callstack 0
   809  000007                     strncmp@_l:
   810                           	opt callstack 0
   811  000007                     ___fleq@ff1:
   812                           	opt callstack 0
   813  000007                     ___flneg@f1:
   814                           	opt callstack 0
   815  000007                     ___fltol@f1:
   816                           	opt callstack 0
   817  000007                     ___fladd@b:
   818                           	opt callstack 0
   819  000007                     ___fpclassifyf@x:
   820                           	opt callstack 0
   821  000007                     ___aodiv@dividend:
   822                           	opt callstack 0
   823  000007                     ___aomod@dividend:
   824                           	opt callstack 0
   825                           
   826                           ; 8 bytes @ 0x6
   827  000007                     	ds	2
   828  000009                     ??_isupper:
   829  000009                     ??_isdigit:
   830  000009                     ??_isspace:
   831  000009                     ??_read_adc_raw_no_lib:
   832  000009                     delay_ms@i:
   833                           	opt callstack 0
   834  000009                     ___wmul@multiplicand:
   835                           	opt callstack 0
   836  000009                     ___awdiv@divisor:
   837                           	opt callstack 0
   838  000009                     ___awmod@divisor:
   839                           	opt callstack 0
   840  000009                     fputc@fp:
   841                           	opt callstack 0
   842  000009                     strcpy@src:
   843                           	opt callstack 0
   844  000009                     strlen@a:
   845                           	opt callstack 0
   846  000009                     strncmp@_r:
   847                           	opt callstack 0
   848                           
   849                           ; 2 bytes @ 0x8
   850  000009                     	ds	1
   851  00000A                     delay_cycles@n:
   852                           	opt callstack 0
   853                           
   854                           ; 1 bytes @ 0x9
   855  00000A                     	ds	1
   856  00000B                     ??_fputc:
   857  00000B                     ??___fpclassifyf:
   858  00000B                     ??_strcpy:
   859  00000B                     ??___fltol:
   860  00000B                     ___awdiv@counter:
   861                           	opt callstack 0
   862  00000B                     ___awmod@counter:
   863                           	opt callstack 0
   864  00000B                     delay_cycles@x:
   865                           	opt callstack 0
   866  00000B                     read_adc_raw_no_lib@raw_value:
   867                           	opt callstack 0
   868  00000B                     ___wmul@product:
   869                           	opt callstack 0
   870  00000B                     strncmp@n:
   871                           	opt callstack 0
   872  00000B                     ___fleq@ff2:
   873                           	opt callstack 0
   874  00000B                     ___fladd@a:
   875                           	opt callstack 0
   876                           
   877                           ; 4 bytes @ 0xA
   878  00000B                     	ds	1
   879  00000C                     ___awdiv@sign:
   880                           	opt callstack 0
   881  00000C                     ___awmod@sign:
   882                           	opt callstack 0
   883                           
   884                           ; 1 bytes @ 0xB
   885  00000C                     	ds	1
   886  00000D                     ??_strncmp:
   887  00000D                     ??_lcd_send_nibble:
   888  00000D                     ?_tolower:
   889                           	opt callstack 0
   890  00000D                     ?___xxtofl:
   891                           	opt callstack 0
   892  00000D                     read_adc_raw_no_lib@channel:
   893                           	opt callstack 0
   894  00000D                     _isspace$1453:
   895                           	opt callstack 0
   896  00000D                     ___awdiv@quotient:
   897                           	opt callstack 0
   898  00000D                     strcpy@s:
   899                           	opt callstack 0
   900  00000D                     tolower@c:
   901                           	opt callstack 0
   902  00000D                     ___xxtofl@val:
   903                           	opt callstack 0
   904                           
   905                           ; 4 bytes @ 0xC
   906  00000D                     	ds	1
   907  00000E                     ?_atoi:
   908                           	opt callstack 0
   909  00000E                     lcd_send_nibble@n:
   910                           	opt callstack 0
   911  00000E                     atoi@s:
   912                           	opt callstack 0
   913  00000E                     strncmp@l:
   914                           	opt callstack 0
   915                           
   916                           ; 2 bytes @ 0xD
   917  00000E                     	ds	1
   918  00000F                     ??_tolower:
   919  00000F                     ??___fladd:
   920  00000F                     ??___fleq:
   921  00000F                     lcd_send_byte@n:
   922                           	opt callstack 0
   923  00000F                     ___fltol@sign1:
   924                           	opt callstack 0
   925  00000F                     ___fpclassifyf@e:
   926                           	opt callstack 0
   927  00000F                     strcpy@d:
   928                           	opt callstack 0
   929  00000F                     ___aodiv@divisor:
   930                           	opt callstack 0
   931  00000F                     ___aomod@divisor:
   932                           	opt callstack 0
   933                           
   934                           ; 8 bytes @ 0xE
   935  00000F                     	ds	1
   936  000010                     ??_atoi:
   937  000010                     lcd_send_byte@cm_data:
   938                           	opt callstack 0
   939  000010                     ___fltol@exp1:
   940                           	opt callstack 0
   941  000010                     fputs@s:
   942                           	opt callstack 0
   943  000010                     strncmp@r:
   944                           	opt callstack 0
   945                           
   946                           ; 2 bytes @ 0xF
   947  000010                     	ds	1
   948  000011                     ??___xxtofl:
   949  000011                     lcd_init@i:
   950                           	opt callstack 0
   951  000011                     lcd_gotoxy@y:
   952                           	opt callstack 0
   953  000011                     ___fpclassifyf@u:
   954                           	opt callstack 0
   955                           
   956                           ; 4 bytes @ 0x10
   957  000011                     	ds	1
   958  000012                     ??_lcd_gotoxy:
   959  000012                     fputs@fp:
   960                           	opt callstack 0
   961                           
   962                           ; 2 bytes @ 0x11
   963  000012                     	ds	1
   964  000013                     ___fladd@signs:
   965                           	opt callstack 0
   966  000013                     _tolower$1538:
   967                           	opt callstack 0
   968                           
   969                           ; 2 bytes @ 0x12
   970  000013                     	ds	1
   971  000014                     lcd_gotoxy@x:
   972                           	opt callstack 0
   973  000014                     ___fladd@aexp:
   974                           	opt callstack 0
   975  000014                     fputs@c:
   976                           	opt callstack 0
   977  000014                     atoi@neg:
   978                           	opt callstack 0
   979                           
   980                           ; 2 bytes @ 0x13
   981  000014                     	ds	1
   982  000015                     lcd_gotoxy@address:
   983                           	opt callstack 0
   984  000015                     ___fladd@bexp:
   985                           	opt callstack 0
   986  000015                     ___xxtofl@sign:
   987                           	opt callstack 0
   988  000015                     fputs@i:
   989                           	opt callstack 0
   990                           
   991                           ; 2 bytes @ 0x14
   992  000015                     	ds	1
   993  000016                     ??_lcd_putc:
   994  000016                     ___fladd@grs:
   995                           	opt callstack 0
   996  000016                     ___xxtofl@exp:
   997                           	opt callstack 0
   998  000016                     _atoi$1422:
   999                           	opt callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x15
  1002  000016                     	ds	1
  1003  000017                     ?_pad:
  1004                           	opt callstack 0
  1005  000017                     ___aodiv@counter:
  1006                           	opt callstack 0
  1007  000017                     ___aomod@counter:
  1008                           	opt callstack 0
  1009  000017                     pad@fp:
  1010                           	opt callstack 0
  1011  000017                     ___xxtofl@arg:
  1012                           	opt callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x16
  1015  000017                     	ds	1
  1016  000018                     lcd_putc@c:
  1017                           	opt callstack 0
  1018  000018                     ___aodiv@sign:
  1019                           	opt callstack 0
  1020  000018                     ___aomod@sign:
  1021                           	opt callstack 0
  1022  000018                     _atoi$1424:
  1023                           	opt callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x17
  1026  000018                     	ds	1
  1027  000019                     ?_abs:
  1028                           	opt callstack 0
  1029  000019                     lcd_puts@s:
  1030                           	opt callstack 0
  1031  000019                     pad@buf:
  1032                           	opt callstack 0
  1033  000019                     abs@a:
  1034                           	opt callstack 0
  1035  000019                     ___aodiv@quotient:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 8 bytes @ 0x18
  1039  000019                     	ds	1
  1040  00001A                     _atoi$1423:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 1 bytes @ 0x19
  1044  00001A                     	ds	1
  1045  00001B                     ??_abs:
  1046  00001B                     ?___fldiv:
  1047                           	opt callstack 0
  1048  00001B                     pad@p:
  1049                           	opt callstack 0
  1050  00001B                     atoi@n:
  1051                           	opt callstack 0
  1052  00001B                     ___fldiv@b:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x1A
  1056  00001B                     	ds	2
  1057  00001D                     ??_pad:
  1058                           
  1059                           ; 1 bytes @ 0x1C
  1060  00001D                     	ds	1
  1061  00001E                     pad@i:
  1062                           	opt callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x1D
  1065  00001E                     	ds	1
  1066  00001F                     ___fldiv@a:
  1067                           	opt callstack 0
  1068                           
  1069                           ; 4 bytes @ 0x1E
  1070  00001F                     	ds	1
  1071  000020                     pad@w:
  1072                           	opt callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x1F
  1075  000020                     	ds	2
  1076  000022                     ?_dtoa:
  1077                           	opt callstack 0
  1078  000022                     dtoa@fp:
  1079                           	opt callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x21
  1082  000022                     	ds	1
  1083  000023                     ??___fldiv:
  1084                           
  1085                           ; 1 bytes @ 0x22
  1086  000023                     	ds	1
  1087  000024                     dtoa@d:
  1088                           	opt callstack 0
  1089                           
  1090                           ; 8 bytes @ 0x23
  1091  000024                     	ds	3
  1092  000027                     ___fldiv@rem:
  1093                           	opt callstack 0
  1094                           
  1095                           ; 4 bytes @ 0x26
  1096  000027                     	ds	4
  1097  00002B                     ___fldiv@sign:
  1098                           	opt callstack 0
  1099                           
  1100                           ; 1 bytes @ 0x2A
  1101  00002B                     	ds	1
  1102  00002C                     ??_dtoa:
  1103  00002C                     ___fldiv@new_exp:
  1104                           	opt callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x2B
  1107  00002C                     	ds	2
  1108  00002E                     ___fldiv@grs:
  1109                           	opt callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x2D
  1112  00002E                     	ds	4
  1113  000032                     ___fldiv@bexp:
  1114                           	opt callstack 0
  1115                           
  1116                           ; 1 bytes @ 0x31
  1117  000032                     	ds	1
  1118  000033                     ___fldiv@aexp:
  1119                           	opt callstack 0
  1120                           
  1121                           ; 1 bytes @ 0x32
  1122  000033                     	ds	1
  1123  000034                     ?_read_adc_voltage:
  1124                           	opt callstack 0
  1125  000034                     ?_floorf:
  1126                           	opt callstack 0
  1127  000034                     _dtoa$894:
  1128                           	opt callstack 0
  1129  000034                     floorf@x:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 4 bytes @ 0x33
  1133  000034                     	ds	2
  1134  000036                     dtoa@p:
  1135                           	opt callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x35
  1138  000036                     	ds	2
  1139  000038                     ??_floorf:
  1140  000038                     dtoa@w:
  1141                           	opt callstack 0
  1142  000038                     read_adc_voltage@voltage:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 4 bytes @ 0x37
  1146  000038                     	ds	2
  1147  00003A                     dtoa@s:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x39
  1151  00003A                     	ds	2
  1152  00003C                     read_adc_voltage@channel:
  1153                           	opt callstack 0
  1154  00003C                     dtoa@n:
  1155                           	opt callstack 0
  1156                           
  1157                           ; 8 bytes @ 0x3B
  1158  00003C                     	ds	1
  1159  00003D                     read_adc_voltage@raw_value:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x3C
  1163  00003D                     	ds	1
  1164  00003E                     floorf@m:
  1165                           	opt callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x3D
  1168  00003E                     	ds	1
  1169  00003F                     ?___flmul:
  1170                           	opt callstack 0
  1171  00003F                     ___flmul@b:
  1172                           	opt callstack 0
  1173                           
  1174                           ; 4 bytes @ 0x3E
  1175  00003F                     	ds	3
  1176  000042                     floorf@e:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x41
  1180  000042                     	ds	1
  1181  000043                     ___flmul@a:
  1182                           	opt callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x42
  1185  000043                     	ds	1
  1186  000044                     dtoa@i:
  1187                           	opt callstack 0
  1188  000044                     floorf@u:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 4 bytes @ 0x43
  1192  000044                     	ds	3
  1193  000047                     ??___flmul:
  1194                           
  1195                           ; 1 bytes @ 0x46
  1196  000047                     	ds	4
  1197  00004B                     ___flmul@sign:
  1198                           	opt callstack 0
  1199                           
  1200                           ; 1 bytes @ 0x4A
  1201  00004B                     	ds	1
  1202  00004C                     ___flmul@aexp:
  1203                           	opt callstack 0
  1204                           
  1205                           ; 1 bytes @ 0x4B
  1206  00004C                     	ds	1
  1207  00004D                     ___flmul@grs:
  1208                           	opt callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x4C
  1211  00004D                     	ds	4
  1212  000051                     ___flmul@bexp:
  1213                           	opt callstack 0
  1214                           
  1215                           ; 1 bytes @ 0x50
  1216  000051                     	ds	1
  1217  000052                     ___flmul@prod:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x51
  1221  000052                     	ds	4
  1222  000056                     ___flmul@temp:
  1223                           	opt callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x55
  1226  000056                     	ds	2
  1227  000058                     ?___flsub:
  1228                           	opt callstack 0
  1229  000058                     ___flge@ff1:
  1230                           	opt callstack 0
  1231  000058                     ___flsub@b:
  1232                           	opt callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x57
  1235  000058                     	ds	4
  1236  00005C                     ___flge@ff2:
  1237                           	opt callstack 0
  1238  00005C                     ___flsub@a:
  1239                           	opt callstack 0
  1240                           
  1241                           ; 4 bytes @ 0x5B
  1242  00005C                     	ds	4
  1243  000060                     ??___flge:
  1244                           
  1245                           ; 1 bytes @ 0x5F
  1246  000060                     	ds	4
  1247  000064                     ?_efgtoa:
  1248                           	opt callstack 0
  1249  000064                     efgtoa@fp:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x63
  1253  000064                     	ds	2
  1254  000066                     efgtoa@f:
  1255                           	opt callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x65
  1258  000066                     	ds	4
  1259  00006A                     efgtoa@c:
  1260                           	opt callstack 0
  1261                           
  1262                           ; 1 bytes @ 0x69
  1263  00006A                     	ds	1
  1264  00006B                     ??_efgtoa:
  1265                           
  1266                           ; 1 bytes @ 0x6A
  1267  00006B                     	ds	5
  1268  000070                     vfprintf@cfmt:
  1269                           	opt callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x6F
  1272  000070                     	ds	2
  1273  000072                     
  1274                           ; 1 bytes @ 0x71
  1275 ;;
  1276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1277 ;;
  1278 ;; *************** function _main *****************
  1279 ;; Defined at:
  1280 ;;		line 232 in file "Cooker.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;Total ram usage:        0 bytes
  1299 ;; Hardware stack levels required when called:   13
  1300 ;; This function calls:
  1301 ;;		___fladd
  1302 ;;		___flge
  1303 ;;		___flmul
  1304 ;;		_delay_ms
  1305 ;;		_display
  1306 ;;		_init_adc_no_lib
  1307 ;;		_lcd_init
  1308 ;;		_lcd_send_byte
  1309 ;;		_read_adc_voltage
  1310 ;;		_setupPorts
  1311 ;; This function is called by:
  1312 ;;		Startup code after reset
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text0
  1317  001A14                     __ptext0:
  1318                           	opt callstack 0
  1319  001A14                     _main:
  1320                           	opt callstack 18
  1321                           
  1322                           ;Cooker.c: 233:     setupPorts();
  1323                           
  1324                           ;incstack = 0
  1325  001A14  ECF4  F022         	call	_setupPorts	;wreg free
  1326                           
  1327                           ;Cooker.c: 234:     init_adc_no_lib();
  1328  001A18  EC1F  F023         	call	_init_adc_no_lib	;wreg free
  1329                           
  1330                           ;Cooker.c: 237:     T0CON = 0;
  1331  001A1C  0E00               	movlw	0
  1332  001A1E  6ED5               	movwf	4053,c	;volatile
  1333                           
  1334                           ;Cooker.c: 238:     T0CONbits.TMR0ON = 0;
  1335  001A20  9ED5               	bcf	4053,7,c	;volatile
  1336                           
  1337                           ;Cooker.c: 239:     T0CONbits.T08BIT = 0;
  1338  001A22  9CD5               	bcf	4053,6,c	;volatile
  1339                           
  1340                           ;Cooker.c: 240:     T0CONbits.T0CS = 0;
  1341  001A24  9AD5               	bcf	4053,5,c	;volatile
  1342                           
  1343                           ;Cooker.c: 241:     T0CONbits.T0SE = 0;
  1344  001A26  98D5               	bcf	4053,4,c	;volatile
  1345                           
  1346                           ;Cooker.c: 242:     T0CONbits.PSA = 0;
  1347  001A28  96D5               	bcf	4053,3,c	;volatile
  1348                           
  1349                           ;Cooker.c: 243:     T0CONbits.T0PS2 = 0;
  1350  001A2A  94D5               	bcf	4053,2,c	;volatile
  1351                           
  1352                           ;Cooker.c: 244:     T0CONbits.T0PS1 = 1;
  1353  001A2C  82D5               	bsf	4053,1,c	;volatile
  1354                           
  1355                           ;Cooker.c: 245:     T0CONbits.T0PS0 = 1;
  1356  001A2E  80D5               	bsf	4053,0,c	;volatile
  1357                           
  1358                           ;Cooker.c: 249:     RCONbits.IPEN = 0;
  1359  001A30  9ED0               	bcf	4048,7,c	;volatile
  1360                           
  1361                           ;Cooker.c: 251:     INTCON = 0;
  1362  001A32  0E00               	movlw	0
  1363  001A34  6EF2               	movwf	4082,c	;volatile
  1364                           
  1365                           ;Cooker.c: 252:     INTCONbits.INT0IE = 1;
  1366  001A36  88F2               	bsf	4082,4,c	;volatile
  1367                           
  1368                           ;Cooker.c: 253:     INTCONbits.TMR0IE = 1;
  1369  001A38  8AF2               	bsf	4082,5,c	;volatile
  1370                           
  1371                           ;Cooker.c: 254:     INTCONbits.GIEH = 1;
  1372  001A3A  8EF2               	bsf	4082,7,c	;volatile
  1373                           
  1374                           ;Cooker.c: 255:     INTCONbits.GIEL = 1;
  1375  001A3C  8CF2               	bsf	4082,6,c	;volatile
  1376                           
  1377                           ;Cooker.c: 257:     INTCON2 = 0;
  1378  001A3E  0E00               	movlw	0
  1379  001A40  6EF1               	movwf	4081,c	;volatile
  1380                           
  1381                           ;Cooker.c: 258:     INTCON2bits.INTEDG0 = 1;
  1382  001A42  8CF1               	bsf	4081,6,c	;volatile
  1383                           
  1384                           ;Cooker.c: 259:     INTCON2bits.INTEDG1 = 1;
  1385  001A44  8AF1               	bsf	4081,5,c	;volatile
  1386                           
  1387                           ;Cooker.c: 260:     INTCON2bits.INTEDG2 = 1;
  1388  001A46  88F1               	bsf	4081,4,c	;volatile
  1389                           
  1390                           ;Cooker.c: 262:     INTCON3 = 0;
  1391  001A48  0E00               	movlw	0
  1392  001A4A  6EF0               	movwf	4080,c	;volatile
  1393                           
  1394                           ;Cooker.c: 263:     INTCON3bits.INT1IE = 1;
  1395  001A4C  86F0               	bsf	4080,3,c	;volatile
  1396                           
  1397                           ;Cooker.c: 264:     INTCON3bits.INT2IE = 1;
  1398  001A4E  88F0               	bsf	4080,4,c	;volatile
  1399                           
  1400                           ;Cooker.c: 267:     PIE1 = 0;
  1401  001A50  0E00               	movlw	0
  1402  001A52  6E9D               	movwf	3997,c	;volatile
  1403                           
  1404                           ;Cooker.c: 268:     PIR1 = 0;
  1405  001A54  0E00               	movlw	0
  1406  001A56  6E9E               	movwf	3998,c	;volatile
  1407                           
  1408                           ;Cooker.c: 269:     IPR1 = 0;
  1409  001A58  0E00               	movlw	0
  1410  001A5A  6E9F               	movwf	3999,c	;volatile
  1411                           
  1412                           ;Cooker.c: 270:     PIE2 = 0;
  1413  001A5C  0E00               	movlw	0
  1414  001A5E  6EA0               	movwf	4000,c	;volatile
  1415                           
  1416                           ;Cooker.c: 271:     PIE2 = 0;
  1417  001A60  0E00               	movlw	0
  1418  001A62  6EA0               	movwf	4000,c	;volatile
  1419                           
  1420                           ;Cooker.c: 272:     PIR2 = 0;
  1421  001A64  0E00               	movlw	0
  1422  001A66  6EA1               	movwf	4001,c	;volatile
  1423                           
  1424                           ;Cooker.c: 273:     IPR2 = 0;
  1425  001A68  0E00               	movlw	0
  1426  001A6A  6EA2               	movwf	4002,c	;volatile
  1427                           
  1428                           ;Cooker.c: 274:     PORTB = 0;
  1429  001A6C  0E00               	movlw	0
  1430  001A6E  6E81               	movwf	3969,c	;volatile
  1431                           
  1432                           ;Cooker.c: 279:     lcd_init();
  1433  001A70  ECDA  F020         	call	_lcd_init	;wreg free
  1434                           
  1435                           ;Cooker.c: 280:     lcd_send_byte(0, 1);
  1436  001A74  0E01               	movlw	1
  1437  001A76  6E0F               	movwf	lcd_send_byte@n,c
  1438  001A78  0E00               	movlw	0
  1439  001A7A  ECA5  F021         	call	_lcd_send_byte
  1440  001A7E                     l163:
  1441  001A7E  0004               	clrwdt		;# 
  1442                           
  1443                           ;Cooker.c: 284:         SP = (read_adc_voltage(0))*40.0;
  1444  001A80  0E00               	movlw	0
  1445  001A82  EC5C  F01F         	call	_read_adc_voltage
  1446  001A86  C034  F03F         	movff	?_read_adc_voltage,___flmul@b
  1447  001A8A  C035  F040         	movff	?_read_adc_voltage+1,___flmul@b+1
  1448  001A8E  C036  F041         	movff	?_read_adc_voltage+2,___flmul@b+2
  1449  001A92  C037  F042         	movff	?_read_adc_voltage+3,___flmul@b+3
  1450  001A96  0E00               	movlw	0
  1451  001A98  6E43               	movwf	___flmul@a,c
  1452  001A9A  0E00               	movlw	0
  1453  001A9C  6E44               	movwf	___flmul@a+1,c
  1454  001A9E  0E20               	movlw	32
  1455  001AA0  6E45               	movwf	___flmul@a+2,c
  1456  001AA2  0E42               	movlw	66
  1457  001AA4  6E46               	movwf	___flmul@a+3,c
  1458  001AA6  EC6B  F012         	call	___flmul	;wreg free
  1459  001AAA  C03F  F19A         	movff	?___flmul,_SP
  1460  001AAE  C040  F19B         	movff	?___flmul+1,_SP+1
  1461  001AB2  C041  F19C         	movff	?___flmul+2,_SP+2
  1462  001AB6  C042  F19D         	movff	?___flmul+3,_SP+3
  1463                           
  1464                           ;Cooker.c: 287:         Temp = (read_adc_voltage(2))*200.0;
  1465  001ABA  0E02               	movlw	2
  1466  001ABC  EC5C  F01F         	call	_read_adc_voltage
  1467  001AC0  C034  F03F         	movff	?_read_adc_voltage,___flmul@b
  1468  001AC4  C035  F040         	movff	?_read_adc_voltage+1,___flmul@b+1
  1469  001AC8  C036  F041         	movff	?_read_adc_voltage+2,___flmul@b+2
  1470  001ACC  C037  F042         	movff	?_read_adc_voltage+3,___flmul@b+3
  1471  001AD0  0E00               	movlw	0
  1472  001AD2  6E43               	movwf	___flmul@a,c
  1473  001AD4  0E00               	movlw	0
  1474  001AD6  6E44               	movwf	___flmul@a+1,c
  1475  001AD8  0E48               	movlw	72
  1476  001ADA  6E45               	movwf	___flmul@a+2,c
  1477  001ADC  0E43               	movlw	67
  1478  001ADE  6E46               	movwf	___flmul@a+3,c
  1479  001AE0  EC6B  F012         	call	___flmul	;wreg free
  1480  001AE4  C03F  F196         	movff	?___flmul,_Temp
  1481  001AE8  C040  F197         	movff	?___flmul+1,_Temp+1
  1482  001AEC  C041  F198         	movff	?___flmul+2,_Temp+2
  1483  001AF0  C042  F199         	movff	?___flmul+3,_Temp+3
  1484                           
  1485                           ;Cooker.c: 290:         if (!PORTBbits.RB3) {
  1486  001AF4  B681               	btfsc	3969,3,c	;volatile
  1487  001AF6  D0DF               	goto	l164
  1488                           
  1489                           ;Cooker.c: 291:             if (mode == 0 && hours < 5) {
  1490  001AF8  0101               	movlb	1	; () banked
  1491  001AFA  519E               	movf	_mode& (0+255),w,b
  1492  001AFC  119F               	iorwf	(_mode+1)& (0+255),w,b
  1493  001AFE  A4D8               	btfss	status,2,c
  1494  001B00  D028               	goto	l7158
  1495                           
  1496                           ; BSR set to: 1
  1497  001B02  BE77               	btfsc	_hours+1,7,c
  1498  001B04  D006               	goto	u9390
  1499  001B06  5077               	movf	_hours+1,w,c
  1500  001B08  E124               	bnz	l7158
  1501  001B0A  0E05               	movlw	5
  1502  001B0C  5C76               	subwf	_hours,w,c
  1503  001B0E  B0D8               	btfsc	status,0,c
  1504  001B10  D020               	goto	l7158
  1505  001B12                     u9390:
  1506                           
  1507                           ; BSR set to: 1
  1508                           ;Cooker.c: 292:                 if (sec <= 58)
  1509  001B12  BE73               	btfsc	_sec+1,7,c
  1510  001B14  D006               	goto	u9400
  1511  001B16  5073               	movf	_sec+1,w,c
  1512  001B18  E107               	bnz	l7148
  1513  001B1A  0E3B               	movlw	59
  1514  001B1C  5C72               	subwf	_sec,w,c
  1515  001B1E  B0D8               	btfsc	status,0,c
  1516  001B20  D003               	goto	l7148
  1517  001B22                     u9400:
  1518                           
  1519                           ; BSR set to: 1
  1520                           ;Cooker.c: 293:                     sec++;
  1521  001B22  4A72               	infsnz	_sec,f,c
  1522  001B24  2A73               	incf	_sec+1,f,c
  1523  001B26  D015               	goto	l7158
  1524  001B28                     l7148:
  1525                           
  1526                           ; BSR set to: 1
  1527                           ;Cooker.c: 295:                     sec = 0;
  1528  001B28  0E00               	movlw	0
  1529  001B2A  6E73               	movwf	_sec+1,c
  1530  001B2C  0E00               	movlw	0
  1531  001B2E  6E72               	movwf	_sec,c
  1532                           
  1533                           ; BSR set to: 1
  1534                           ;Cooker.c: 296:                     if (min <= 58)
  1535  001B30  BE75               	btfsc	_min+1,7,c
  1536  001B32  D006               	goto	u9410
  1537  001B34  5075               	movf	_min+1,w,c
  1538  001B36  E107               	bnz	l7154
  1539  001B38  0E3B               	movlw	59
  1540  001B3A  5C74               	subwf	_min,w,c
  1541  001B3C  B0D8               	btfsc	status,0,c
  1542  001B3E  D003               	goto	l7154
  1543  001B40                     u9410:
  1544                           
  1545                           ; BSR set to: 1
  1546                           ;Cooker.c: 297:                         min++;
  1547  001B40  4A74               	infsnz	_min,f,c
  1548  001B42  2A75               	incf	_min+1,f,c
  1549  001B44  D006               	goto	l7158
  1550  001B46                     l7154:
  1551                           
  1552                           ; BSR set to: 1
  1553                           ;Cooker.c: 299:                         min = 0;
  1554  001B46  0E00               	movlw	0
  1555  001B48  6E75               	movwf	_min+1,c
  1556  001B4A  0E00               	movlw	0
  1557  001B4C  6E74               	movwf	_min,c
  1558                           
  1559                           ; BSR set to: 1
  1560                           ;Cooker.c: 300:                         hours++;
  1561  001B4E  4A76               	infsnz	_hours,f,c
  1562  001B50  2A77               	incf	_hours+1,f,c
  1563  001B52                     l7158:
  1564                           
  1565                           ; BSR set to: 1
  1566                           ;Cooker.c: 304:             if (mode == 1 && hours < 5) {
  1567  001B52  059E               	decf	_mode& (0+255),w,b
  1568  001B54  119F               	iorwf	(_mode+1)& (0+255),w,b
  1569  001B56  A4D8               	btfss	status,2,c
  1570  001B58  D03B               	goto	l172
  1571                           
  1572                           ; BSR set to: 1
  1573  001B5A  BE77               	btfsc	_hours+1,7,c
  1574  001B5C  D006               	goto	u9430
  1575  001B5E  5077               	movf	_hours+1,w,c
  1576  001B60  E137               	bnz	l7178
  1577  001B62  0E05               	movlw	5
  1578  001B64  5C76               	subwf	_hours,w,c
  1579  001B66  B0D8               	btfsc	status,0,c
  1580  001B68  D033               	goto	l172
  1581  001B6A                     u9430:
  1582                           
  1583                           ; BSR set to: 1
  1584                           ;Cooker.c: 305:                 if (sec <= 49)
  1585  001B6A  BE73               	btfsc	_sec+1,7,c
  1586  001B6C  D006               	goto	u9440
  1587  001B6E  5073               	movf	_sec+1,w,c
  1588  001B70  E10B               	bnz	l7166
  1589  001B72  0E32               	movlw	50
  1590  001B74  5C72               	subwf	_sec,w,c
  1591  001B76  B0D8               	btfsc	status,0,c
  1592  001B78  D007               	goto	l7166
  1593  001B7A                     u9440:
  1594                           
  1595                           ; BSR set to: 1
  1596                           ;Cooker.c: 306:                     sec = sec + 10;
  1597  001B7A  0E0A               	movlw	10
  1598  001B7C  2472               	addwf	_sec,w,c
  1599  001B7E  6E72               	movwf	_sec,c
  1600  001B80  0E00               	movlw	0
  1601  001B82  2073               	addwfc	_sec+1,w,c
  1602  001B84  6E73               	movwf	_sec+1,c
  1603  001B86  D024               	goto	l172
  1604  001B88                     l7166:
  1605                           
  1606                           ; BSR set to: 1
  1607                           ;Cooker.c: 308:                     sec = sec + 10 - 60;
  1608  001B88  0ECE               	movlw	206
  1609  001B8A  2472               	addwf	_sec,w,c
  1610  001B8C  6E72               	movwf	_sec,c
  1611  001B8E  0EFF               	movlw	255
  1612  001B90  2073               	addwfc	_sec+1,w,c
  1613  001B92  6E73               	movwf	_sec+1,c
  1614                           
  1615                           ;Cooker.c: 309:                     if (min <= 58) {
  1616  001B94  BE75               	btfsc	_min+1,7,c
  1617  001B96  D006               	goto	u9450
  1618  001B98  5075               	movf	_min+1,w,c
  1619  001B9A  E107               	bnz	l7170
  1620  001B9C  0E3B               	movlw	59
  1621  001B9E  5C74               	subwf	_min,w,c
  1622  001BA0  B0D8               	btfsc	status,0,c
  1623  001BA2  D003               	goto	l7170
  1624  001BA4                     u9450:
  1625                           
  1626                           ; BSR set to: 1
  1627                           ;Cooker.c: 310:                         min++;
  1628  001BA4  4A74               	infsnz	_min,f,c
  1629  001BA6  2A75               	incf	_min+1,f,c
  1630                           
  1631                           ;Cooker.c: 311:                     }
  1632  001BA8  D013               	goto	l172
  1633  001BAA                     l7170:
  1634                           
  1635                           ; BSR set to: 1
  1636                           ;Cooker.c: 313:                         min = 0;
  1637  001BAA  0E00               	movlw	0
  1638  001BAC  6E75               	movwf	_min+1,c
  1639  001BAE  0E00               	movlw	0
  1640  001BB0  6E74               	movwf	_min,c
  1641                           
  1642                           ; BSR set to: 1
  1643                           ;Cooker.c: 314:                         hours++;
  1644  001BB2  4A76               	infsnz	_hours,f,c
  1645  001BB4  2A77               	incf	_hours+1,f,c
  1646                           
  1647                           ; BSR set to: 1
  1648                           ;Cooker.c: 315:                         if (hours == 5) {
  1649  001BB6  0E05               	movlw	5
  1650  001BB8  1876               	xorwf	_hours,w,c
  1651  001BBA  1077               	iorwf	_hours+1,w,c
  1652  001BBC  A4D8               	btfss	status,2,c
  1653  001BBE  D008               	goto	l172
  1654                           
  1655                           ; BSR set to: 1
  1656                           ;Cooker.c: 316:                             min = 0;
  1657  001BC0  0E00               	movlw	0
  1658  001BC2  6E75               	movwf	_min+1,c
  1659  001BC4  0E00               	movlw	0
  1660  001BC6  6E74               	movwf	_min,c
  1661                           
  1662                           ;Cooker.c: 317:                             sec = 0;
  1663  001BC8  0E00               	movlw	0
  1664  001BCA  6E73               	movwf	_sec+1,c
  1665  001BCC  0E00               	movlw	0
  1666  001BCE  6E72               	movwf	_sec,c
  1667  001BD0                     l172:
  1668  001BD0                     l7178:
  1669                           
  1670                           ; BSR set to: 1
  1671                           ;Cooker.c: 323:             if (mode == 2 && hours < 5) {
  1672  001BD0  0E02               	movlw	2
  1673  001BD2  199E               	xorwf	_mode& (0+255),w,b
  1674  001BD4  119F               	iorwf	(_mode+1)& (0+255),w,b
  1675  001BD6  A4D8               	btfss	status,2,c
  1676  001BD8  D019               	goto	l7190
  1677                           
  1678                           ; BSR set to: 1
  1679  001BDA  BE77               	btfsc	_hours+1,7,c
  1680  001BDC  D006               	goto	u9480
  1681  001BDE  5077               	movf	_hours+1,w,c
  1682  001BE0  E115               	bnz	l7190
  1683  001BE2  0E05               	movlw	5
  1684  001BE4  5C76               	subwf	_hours,w,c
  1685  001BE6  B0D8               	btfsc	status,0,c
  1686  001BE8  D011               	goto	l7190
  1687  001BEA                     u9480:
  1688                           
  1689                           ; BSR set to: 1
  1690                           ;Cooker.c: 324:                 if (min <= 58) {
  1691  001BEA  BE75               	btfsc	_min+1,7,c
  1692  001BEC  D006               	goto	u9490
  1693  001BEE  5075               	movf	_min+1,w,c
  1694  001BF0  E107               	bnz	l7186
  1695  001BF2  0E3B               	movlw	59
  1696  001BF4  5C74               	subwf	_min,w,c
  1697  001BF6  B0D8               	btfsc	status,0,c
  1698  001BF8  D003               	goto	l7186
  1699  001BFA                     u9490:
  1700                           
  1701                           ; BSR set to: 1
  1702                           ;Cooker.c: 325:                     min++;
  1703  001BFA  4A74               	infsnz	_min,f,c
  1704  001BFC  2A75               	incf	_min+1,f,c
  1705                           
  1706                           ;Cooker.c: 326:                 } else {
  1707  001BFE  D006               	goto	l7190
  1708  001C00                     l7186:
  1709                           
  1710                           ; BSR set to: 1
  1711                           ;Cooker.c: 327:                     min = 0;
  1712  001C00  0E00               	movlw	0
  1713  001C02  6E75               	movwf	_min+1,c
  1714  001C04  0E00               	movlw	0
  1715  001C06  6E74               	movwf	_min,c
  1716                           
  1717                           ; BSR set to: 1
  1718                           ;Cooker.c: 328:                     hours++;
  1719  001C08  4A76               	infsnz	_hours,f,c
  1720  001C0A  2A77               	incf	_hours+1,f,c
  1721  001C0C                     l7190:
  1722                           
  1723                           ; BSR set to: 1
  1724                           ;Cooker.c: 332:             if (mode == 3 && hours < 5) {
  1725  001C0C  0E03               	movlw	3
  1726  001C0E  199E               	xorwf	_mode& (0+255),w,b
  1727  001C10  119F               	iorwf	(_mode+1)& (0+255),w,b
  1728  001C12  A4D8               	btfss	status,2,c
  1729  001C14  D02D               	goto	l7206
  1730                           
  1731                           ; BSR set to: 1
  1732  001C16  BE77               	btfsc	_hours+1,7,c
  1733  001C18  D006               	goto	u9510
  1734  001C1A  5077               	movf	_hours+1,w,c
  1735  001C1C  E129               	bnz	l7206
  1736  001C1E  0E05               	movlw	5
  1737  001C20  5C76               	subwf	_hours,w,c
  1738  001C22  B0D8               	btfsc	status,0,c
  1739  001C24  D025               	goto	l7206
  1740  001C26                     u9510:
  1741                           
  1742                           ; BSR set to: 1
  1743                           ;Cooker.c: 333:                 if (min <= 49)
  1744  001C26  BE75               	btfsc	_min+1,7,c
  1745  001C28  D006               	goto	u9520
  1746  001C2A  5075               	movf	_min+1,w,c
  1747  001C2C  E10B               	bnz	l7198
  1748  001C2E  0E32               	movlw	50
  1749  001C30  5C74               	subwf	_min,w,c
  1750  001C32  B0D8               	btfsc	status,0,c
  1751  001C34  D007               	goto	l7198
  1752  001C36                     u9520:
  1753                           
  1754                           ; BSR set to: 1
  1755                           ;Cooker.c: 334:                     min = min + 10;
  1756  001C36  0E0A               	movlw	10
  1757  001C38  2474               	addwf	_min,w,c
  1758  001C3A  6E74               	movwf	_min,c
  1759  001C3C  0E00               	movlw	0
  1760  001C3E  2075               	addwfc	_min+1,w,c
  1761  001C40  6E75               	movwf	_min+1,c
  1762  001C42  D032               	goto	l7218
  1763  001C44                     l7198:
  1764                           
  1765                           ; BSR set to: 1
  1766                           ;Cooker.c: 336:                     min = min + 10 - 60;
  1767  001C44  0ECE               	movlw	206
  1768  001C46  2474               	addwf	_min,w,c
  1769  001C48  6E74               	movwf	_min,c
  1770  001C4A  0EFF               	movlw	255
  1771  001C4C  2075               	addwfc	_min+1,w,c
  1772  001C4E  6E75               	movwf	_min+1,c
  1773                           
  1774                           ;Cooker.c: 337:                     if (hours < 5) {
  1775  001C50  BE77               	btfsc	_hours+1,7,c
  1776  001C52  D006               	goto	u9530
  1777  001C54  5077               	movf	_hours+1,w,c
  1778  001C56  E106               	bnz	l7202
  1779  001C58  0E05               	movlw	5
  1780  001C5A  5C76               	subwf	_hours,w,c
  1781  001C5C  B0D8               	btfsc	status,0,c
  1782  001C5E  D002               	goto	l7202
  1783  001C60                     u9530:
  1784                           
  1785                           ; BSR set to: 1
  1786                           ;Cooker.c: 338:                         hours++;
  1787  001C60  4A76               	infsnz	_hours,f,c
  1788  001C62  2A77               	incf	_hours+1,f,c
  1789  001C64                     l7202:
  1790                           
  1791                           ; BSR set to: 1
  1792                           ;Cooker.c: 340:                     if (hours == 5) {
  1793  001C64  0E05               	movlw	5
  1794  001C66  1876               	xorwf	_hours,w,c
  1795  001C68  1077               	iorwf	_hours+1,w,c
  1796  001C6A  A4D8               	btfss	status,2,c
  1797  001C6C  D01D               	goto	l7218
  1798  001C6E  D115               	goto	L1
  1799  001C70                     l7206:
  1800                           
  1801                           ; BSR set to: 1
  1802  001C70  0E04               	movlw	4
  1803  001C72  199E               	xorwf	_mode& (0+255),w,b
  1804  001C74  119F               	iorwf	(_mode+1)& (0+255),w,b
  1805  001C76  A4D8               	btfss	status,2,c
  1806  001C78  D017               	goto	l7218
  1807                           
  1808                           ; BSR set to: 1
  1809  001C7A  BE77               	btfsc	_hours+1,7,c
  1810  001C7C  D006               	goto	u9560
  1811  001C7E  5077               	movf	_hours+1,w,c
  1812  001C80  E113               	bnz	l7218
  1813  001C82  0E05               	movlw	5
  1814  001C84  5C76               	subwf	_hours,w,c
  1815  001C86  B0D8               	btfsc	status,0,c
  1816  001C88  D00F               	goto	l7218
  1817  001C8A                     u9560:
  1818                           
  1819                           ; BSR set to: 1
  1820                           ;Cooker.c: 348:                 if (hours < 5) {
  1821  001C8A  BE77               	btfsc	_hours+1,7,c
  1822  001C8C  D006               	goto	u9570
  1823  001C8E  5077               	movf	_hours+1,w,c
  1824  001C90  E106               	bnz	l7214
  1825  001C92  0E05               	movlw	5
  1826  001C94  5C76               	subwf	_hours,w,c
  1827  001C96  B0D8               	btfsc	status,0,c
  1828  001C98  D002               	goto	l7214
  1829  001C9A                     u9570:
  1830                           
  1831                           ; BSR set to: 1
  1832                           ;Cooker.c: 349:                     hours++;
  1833  001C9A  4A76               	infsnz	_hours,f,c
  1834  001C9C  2A77               	incf	_hours+1,f,c
  1835  001C9E                     l7214:
  1836                           
  1837                           ; BSR set to: 1
  1838                           ;Cooker.c: 351:                 if (hours == 5) {
  1839  001C9E  0E05               	movlw	5
  1840  001CA0  1876               	xorwf	_hours,w,c
  1841  001CA2  1077               	iorwf	_hours+1,w,c
  1842  001CA4  B4D8               	btfsc	status,2,c
  1843  001CA6  D0F9               	goto	L1
  1844  001CA8                     l7218:
  1845                           
  1846                           ; BSR set to: 1
  1847                           ;Cooker.c: 356:             delay_ms(250);
  1848  001CA8  0E00               	movlw	0
  1849  001CAA  6E08               	movwf	delay_ms@n+1,c
  1850  001CAC  0EFA               	movlw	250
  1851  001CAE  6E07               	movwf	delay_ms@n,c
  1852  001CB0  ECAB  F022         	call	_delay_ms	;wreg free
  1853                           
  1854                           ;Cooker.c: 357:         }
  1855  001CB4  D114               	goto	l7308
  1856  001CB6                     l164:
  1857  001CB6  B881               	btfsc	3969,4,c	;volatile
  1858  001CB8  D0F9               	goto	l189
  1859                           
  1860                           ;Cooker.c: 359:             if (mode == 0) {
  1861  001CBA  0101               	movlb	1	; () banked
  1862  001CBC  519E               	movf	_mode& (0+255),w,b
  1863  001CBE  119F               	iorwf	(_mode+1)& (0+255),w,b
  1864  001CC0  A4D8               	btfss	status,2,c
  1865  001CC2  D038               	goto	l7242
  1866                           
  1867                           ; BSR set to: 1
  1868                           ;Cooker.c: 360:                 if (sec > 0)
  1869  001CC4  BE73               	btfsc	_sec+1,7,c
  1870  001CC6  D009               	goto	l7226
  1871  001CC8  5073               	movf	_sec+1,w,c
  1872  001CCA  E103               	bnz	u9610
  1873  001CCC  0472               	decf	_sec,w,c
  1874  001CCE  A0D8               	btfss	status,0,c
  1875  001CD0  D004               	goto	l7226
  1876  001CD2                     u9610:
  1877                           
  1878                           ; BSR set to: 1
  1879                           ;Cooker.c: 361:                     sec--;
  1880  001CD2  0672               	decf	_sec,f,c
  1881  001CD4  A0D8               	btfss	status,0,c
  1882  001CD6  0673               	decf	_sec+1,f,c
  1883  001CD8  D02D               	goto	l7242
  1884  001CDA                     l7226:
  1885                           
  1886                           ; BSR set to: 1
  1887  001CDA  BE75               	btfsc	_min+1,7,c
  1888  001CDC  D00D               	goto	l7232
  1889  001CDE  5075               	movf	_min+1,w,c
  1890  001CE0  E103               	bnz	u9620
  1891  001CE2  0474               	decf	_min,w,c
  1892  001CE4  A0D8               	btfss	status,0,c
  1893  001CE6  D008               	goto	l7232
  1894  001CE8                     u9620:
  1895                           
  1896                           ; BSR set to: 1
  1897                           ;Cooker.c: 363:                     sec = 59;
  1898  001CE8  0E00               	movlw	0
  1899  001CEA  6E73               	movwf	_sec+1,c
  1900  001CEC  0E3B               	movlw	59
  1901  001CEE  6E72               	movwf	_sec,c
  1902                           
  1903                           ; BSR set to: 1
  1904                           ;Cooker.c: 364:                     min--;
  1905  001CF0  0674               	decf	_min,f,c
  1906  001CF2  A0D8               	btfss	status,0,c
  1907  001CF4  0675               	decf	_min+1,f,c
  1908                           
  1909                           ;Cooker.c: 365:                 } else if (hours > 0) {
  1910  001CF6  D01E               	goto	l7242
  1911  001CF8                     l7232:
  1912                           
  1913                           ; BSR set to: 1
  1914  001CF8  BE77               	btfsc	_hours+1,7,c
  1915  001CFA  D010               	goto	l7240
  1916  001CFC  5077               	movf	_hours+1,w,c
  1917  001CFE  E103               	bnz	u9630
  1918  001D00  0476               	decf	_hours,w,c
  1919  001D02  A0D8               	btfss	status,0,c
  1920  001D04  D00B               	goto	l7240
  1921  001D06                     u9630:
  1922                           
  1923                           ; BSR set to: 1
  1924                           ;Cooker.c: 366:                     hours--;
  1925  001D06  0676               	decf	_hours,f,c
  1926  001D08  A0D8               	btfss	status,0,c
  1927  001D0A  0677               	decf	_hours+1,f,c
  1928                           
  1929                           ; BSR set to: 1
  1930                           ;Cooker.c: 367:                     min = 59;
  1931  001D0C  0E00               	movlw	0
  1932  001D0E  6E75               	movwf	_min+1,c
  1933  001D10  0E3B               	movlw	59
  1934  001D12  6E74               	movwf	_min,c
  1935                           
  1936                           ; BSR set to: 1
  1937                           ;Cooker.c: 368:                     sec = 59;
  1938  001D14  0E00               	movlw	0
  1939  001D16  6E73               	movwf	_sec+1,c
  1940  001D18  0E3B               	movlw	59
  1941  001D1A  D00B               	goto	L2
  1942  001D1C                     l7240:
  1943                           
  1944                           ; BSR set to: 1
  1945                           ;Cooker.c: 370:                     hours = 0;
  1946  001D1C  0E00               	movlw	0
  1947  001D1E  6E77               	movwf	_hours+1,c
  1948  001D20  0E00               	movlw	0
  1949  001D22  6E76               	movwf	_hours,c
  1950                           
  1951                           ;Cooker.c: 371:                     min = 0;
  1952  001D24  0E00               	movlw	0
  1953  001D26  6E75               	movwf	_min+1,c
  1954  001D28  0E00               	movlw	0
  1955  001D2A  6E74               	movwf	_min,c
  1956                           
  1957                           ;Cooker.c: 372:                     sec = 0;
  1958  001D2C  0E00               	movlw	0
  1959  001D2E  6E73               	movwf	_sec+1,c
  1960  001D30  0E00               	movlw	0
  1961  001D32                     L2:
  1962  001D32  6E72               	movwf	_sec,c
  1963  001D34                     l7242:
  1964                           
  1965                           ; BSR set to: 1
  1966                           ;Cooker.c: 376:             if (mode == 1) {
  1967  001D34  059E               	decf	_mode& (0+255),w,b
  1968  001D36  119F               	iorwf	(_mode+1)& (0+255),w,b
  1969  001D38  A4D8               	btfss	status,2,c
  1970  001D3A  D03F               	goto	l7264
  1971                           
  1972                           ; BSR set to: 1
  1973                           ;Cooker.c: 377:                 if (sec >= 10)
  1974  001D3C  BE73               	btfsc	_sec+1,7,c
  1975  001D3E  D00B               	goto	l7248
  1976  001D40  5073               	movf	_sec+1,w,c
  1977  001D42  E104               	bnz	u9650
  1978  001D44  0E0A               	movlw	10
  1979  001D46  5C72               	subwf	_sec,w,c
  1980  001D48  A0D8               	btfss	status,0,c
  1981  001D4A  D005               	goto	l7248
  1982  001D4C                     u9650:
  1983                           
  1984                           ; BSR set to: 1
  1985                           ;Cooker.c: 378:                     sec = sec - 10;
  1986  001D4C  0EF6               	movlw	246
  1987  001D4E  2472               	addwf	_sec,w,c
  1988  001D50  6E72               	movwf	_sec,c
  1989  001D52  0EFF               	movlw	255
  1990  001D54  D023               	goto	L3
  1991  001D56                     l7248:
  1992                           
  1993                           ; BSR set to: 1
  1994  001D56  BE75               	btfsc	_min+1,7,c
  1995  001D58  D00F               	goto	l7254
  1996  001D5A  5075               	movf	_min+1,w,c
  1997  001D5C  E103               	bnz	u9660
  1998  001D5E  0474               	decf	_min,w,c
  1999  001D60  A0D8               	btfss	status,0,c
  2000  001D62  D00A               	goto	l7254
  2001  001D64                     u9660:
  2002                           
  2003                           ; BSR set to: 1
  2004                           ;Cooker.c: 380:                     sec = 60 + sec - 10;
  2005  001D64  0E32               	movlw	50
  2006  001D66  2472               	addwf	_sec,w,c
  2007  001D68  6E72               	movwf	_sec,c
  2008  001D6A  0E00               	movlw	0
  2009  001D6C  2073               	addwfc	_sec+1,w,c
  2010  001D6E  6E73               	movwf	_sec+1,c
  2011                           
  2012                           ; BSR set to: 1
  2013                           ;Cooker.c: 381:                     min--;
  2014  001D70  0674               	decf	_min,f,c
  2015  001D72  A0D8               	btfss	status,0,c
  2016  001D74  0675               	decf	_min+1,f,c
  2017                           
  2018                           ;Cooker.c: 382:                 } else if (hours > 0) {
  2019  001D76  D021               	goto	l7264
  2020  001D78                     l7254:
  2021                           
  2022                           ; BSR set to: 1
  2023  001D78  BE77               	btfsc	_hours+1,7,c
  2024  001D7A  D013               	goto	l7262
  2025  001D7C  5077               	movf	_hours+1,w,c
  2026  001D7E  E103               	bnz	u9670
  2027  001D80  0476               	decf	_hours,w,c
  2028  001D82  A0D8               	btfss	status,0,c
  2029  001D84  D00E               	goto	l7262
  2030  001D86                     u9670:
  2031                           
  2032                           ; BSR set to: 1
  2033                           ;Cooker.c: 383:                     hours--;
  2034  001D86  0676               	decf	_hours,f,c
  2035  001D88  A0D8               	btfss	status,0,c
  2036  001D8A  0677               	decf	_hours+1,f,c
  2037                           
  2038                           ; BSR set to: 1
  2039                           ;Cooker.c: 384:                     min = 59;
  2040  001D8C  0E00               	movlw	0
  2041  001D8E  6E75               	movwf	_min+1,c
  2042  001D90  0E3B               	movlw	59
  2043  001D92  6E74               	movwf	_min,c
  2044                           
  2045                           ; BSR set to: 1
  2046                           ;Cooker.c: 385:                     sec = 60 + sec - 10;
  2047  001D94  0E32               	movlw	50
  2048  001D96  2472               	addwf	_sec,w,c
  2049  001D98  6E72               	movwf	_sec,c
  2050  001D9A  0E00               	movlw	0
  2051  001D9C                     L3:
  2052  001D9C  2073               	addwfc	_sec+1,w,c
  2053  001D9E  6E73               	movwf	_sec+1,c
  2054                           
  2055                           ;Cooker.c: 386:                 } else {
  2056  001DA0  D00C               	goto	l7264
  2057  001DA2                     l7262:
  2058                           
  2059                           ; BSR set to: 1
  2060                           ;Cooker.c: 387:                     hours = 0;
  2061  001DA2  0E00               	movlw	0
  2062  001DA4  6E77               	movwf	_hours+1,c
  2063  001DA6  0E00               	movlw	0
  2064  001DA8  6E76               	movwf	_hours,c
  2065                           
  2066                           ;Cooker.c: 388:                     min = 0;
  2067  001DAA  0E00               	movlw	0
  2068  001DAC  6E75               	movwf	_min+1,c
  2069  001DAE  0E00               	movlw	0
  2070  001DB0  6E74               	movwf	_min,c
  2071                           
  2072                           ;Cooker.c: 389:                     sec = 0;
  2073  001DB2  0E00               	movlw	0
  2074  001DB4  6E73               	movwf	_sec+1,c
  2075  001DB6  0E00               	movlw	0
  2076  001DB8  6E72               	movwf	_sec,c
  2077  001DBA                     l7264:
  2078                           
  2079                           ; BSR set to: 1
  2080                           ;Cooker.c: 393:             if (mode == 2) {
  2081  001DBA  0E02               	movlw	2
  2082  001DBC  199E               	xorwf	_mode& (0+255),w,b
  2083  001DBE  119F               	iorwf	(_mode+1)& (0+255),w,b
  2084  001DC0  A4D8               	btfss	status,2,c
  2085  001DC2  D026               	goto	l7278
  2086                           
  2087                           ; BSR set to: 1
  2088                           ;Cooker.c: 394:                 if (min > 0) {
  2089  001DC4  BE75               	btfsc	_min+1,7,c
  2090  001DC6  D009               	goto	l7270
  2091  001DC8  5075               	movf	_min+1,w,c
  2092  001DCA  E103               	bnz	u9690
  2093  001DCC  0474               	decf	_min,w,c
  2094  001DCE  A0D8               	btfss	status,0,c
  2095  001DD0  D004               	goto	l7270
  2096  001DD2                     u9690:
  2097                           
  2098                           ; BSR set to: 1
  2099                           ;Cooker.c: 395:                     min--;
  2100  001DD2  0674               	decf	_min,f,c
  2101  001DD4  A0D8               	btfss	status,0,c
  2102  001DD6  0675               	decf	_min+1,f,c
  2103                           
  2104                           ;Cooker.c: 396:                 } else if (hours > 0) {
  2105  001DD8  D01B               	goto	l7278
  2106  001DDA                     l7270:
  2107                           
  2108                           ; BSR set to: 1
  2109  001DDA  BE77               	btfsc	_hours+1,7,c
  2110  001DDC  D00D               	goto	l7276
  2111  001DDE  5077               	movf	_hours+1,w,c
  2112  001DE0  E103               	bnz	u9700
  2113  001DE2  0476               	decf	_hours,w,c
  2114  001DE4  A0D8               	btfss	status,0,c
  2115  001DE6  D008               	goto	l7276
  2116  001DE8                     u9700:
  2117                           
  2118                           ; BSR set to: 1
  2119                           ;Cooker.c: 397:                     hours--;
  2120  001DE8  0676               	decf	_hours,f,c
  2121  001DEA  A0D8               	btfss	status,0,c
  2122  001DEC  0677               	decf	_hours+1,f,c
  2123                           
  2124                           ; BSR set to: 1
  2125                           ;Cooker.c: 398:                     min = 59;
  2126  001DEE  0E00               	movlw	0
  2127  001DF0  6E75               	movwf	_min+1,c
  2128  001DF2  0E3B               	movlw	59
  2129  001DF4  6E74               	movwf	_min,c
  2130                           
  2131                           ;Cooker.c: 399:                 } else {
  2132  001DF6  D00C               	goto	l7278
  2133  001DF8                     l7276:
  2134                           
  2135                           ; BSR set to: 1
  2136                           ;Cooker.c: 400:                     hours = 0;
  2137  001DF8  0E00               	movlw	0
  2138  001DFA  6E77               	movwf	_hours+1,c
  2139  001DFC  0E00               	movlw	0
  2140  001DFE  6E76               	movwf	_hours,c
  2141                           
  2142                           ;Cooker.c: 401:                     min = 0;
  2143  001E00  0E00               	movlw	0
  2144  001E02  6E75               	movwf	_min+1,c
  2145  001E04  0E00               	movlw	0
  2146  001E06  6E74               	movwf	_min,c
  2147                           
  2148                           ;Cooker.c: 402:                     sec = 0;
  2149  001E08  0E00               	movlw	0
  2150  001E0A  6E73               	movwf	_sec+1,c
  2151  001E0C  0E00               	movlw	0
  2152  001E0E  6E72               	movwf	_sec,c
  2153  001E10                     l7278:
  2154                           
  2155                           ; BSR set to: 1
  2156                           ;Cooker.c: 406:             if (mode == 3) {
  2157  001E10  0E03               	movlw	3
  2158  001E12  199E               	xorwf	_mode& (0+255),w,b
  2159  001E14  119F               	iorwf	(_mode+1)& (0+255),w,b
  2160  001E16  A4D8               	btfss	status,2,c
  2161  001E18  D02C               	goto	l7292
  2162                           
  2163                           ; BSR set to: 1
  2164                           ;Cooker.c: 407:                 if (min >= 10)
  2165  001E1A  BE75               	btfsc	_min+1,7,c
  2166  001E1C  D00D               	goto	l7284
  2167  001E1E  5075               	movf	_min+1,w,c
  2168  001E20  E104               	bnz	u9720
  2169  001E22  0E0A               	movlw	10
  2170  001E24  5C74               	subwf	_min,w,c
  2171  001E26  A0D8               	btfss	status,0,c
  2172  001E28  D007               	goto	l7284
  2173  001E2A                     u9720:
  2174                           
  2175                           ; BSR set to: 1
  2176                           ;Cooker.c: 408:                     min = min - 10;
  2177  001E2A  0EF6               	movlw	246
  2178  001E2C  2474               	addwf	_min,w,c
  2179  001E2E  6E74               	movwf	_min,c
  2180  001E30  0EFF               	movlw	255
  2181  001E32  2075               	addwfc	_min+1,w,c
  2182  001E34  6E75               	movwf	_min+1,c
  2183  001E36  D01D               	goto	l7292
  2184  001E38                     l7284:
  2185                           
  2186                           ; BSR set to: 1
  2187  001E38  BE77               	btfsc	_hours+1,7,c
  2188  001E3A  D00F               	goto	l7290
  2189  001E3C  5077               	movf	_hours+1,w,c
  2190  001E3E  E103               	bnz	u9730
  2191  001E40  0476               	decf	_hours,w,c
  2192  001E42  A0D8               	btfss	status,0,c
  2193  001E44  D00A               	goto	l7290
  2194  001E46                     u9730:
  2195                           
  2196                           ; BSR set to: 1
  2197                           ;Cooker.c: 410:                     min = 60 + min - 10;
  2198  001E46  0E32               	movlw	50
  2199  001E48  2474               	addwf	_min,w,c
  2200  001E4A  6E74               	movwf	_min,c
  2201  001E4C  0E00               	movlw	0
  2202  001E4E  2075               	addwfc	_min+1,w,c
  2203  001E50  6E75               	movwf	_min+1,c
  2204                           
  2205                           ; BSR set to: 1
  2206                           ;Cooker.c: 411:                     hours--;
  2207  001E52  0676               	decf	_hours,f,c
  2208  001E54  A0D8               	btfss	status,0,c
  2209  001E56  0677               	decf	_hours+1,f,c
  2210                           
  2211                           ;Cooker.c: 412:                 } else {
  2212  001E58  D00C               	goto	l7292
  2213  001E5A                     l7290:
  2214                           
  2215                           ; BSR set to: 1
  2216                           ;Cooker.c: 413:                     hours = 0;
  2217  001E5A  0E00               	movlw	0
  2218  001E5C  6E77               	movwf	_hours+1,c
  2219  001E5E  0E00               	movlw	0
  2220  001E60  6E76               	movwf	_hours,c
  2221                           
  2222                           ;Cooker.c: 414:                     min = 0;
  2223  001E62  0E00               	movlw	0
  2224  001E64  6E75               	movwf	_min+1,c
  2225  001E66  0E00               	movlw	0
  2226  001E68  6E74               	movwf	_min,c
  2227                           
  2228                           ;Cooker.c: 415:                     sec = 0;
  2229  001E6A  0E00               	movlw	0
  2230  001E6C  6E73               	movwf	_sec+1,c
  2231  001E6E  0E00               	movlw	0
  2232  001E70  6E72               	movwf	_sec,c
  2233  001E72                     l7292:
  2234                           
  2235                           ; BSR set to: 1
  2236                           ;Cooker.c: 419:             if (mode == 4) {
  2237  001E72  0E04               	movlw	4
  2238  001E74  199E               	xorwf	_mode& (0+255),w,b
  2239  001E76  119F               	iorwf	(_mode+1)& (0+255),w,b
  2240  001E78  A4D8               	btfss	status,2,c
  2241  001E7A  D716               	goto	l7218
  2242                           
  2243                           ; BSR set to: 1
  2244                           ;Cooker.c: 420:                 if (hours > 0)
  2245  001E7C  BE77               	btfsc	_hours+1,7,c
  2246  001E7E  D009               	goto	l7298
  2247  001E80  5077               	movf	_hours+1,w,c
  2248  001E82  E103               	bnz	u9750
  2249  001E84  0476               	decf	_hours,w,c
  2250  001E86  A0D8               	btfss	status,0,c
  2251  001E88  D004               	goto	l7298
  2252  001E8A                     u9750:
  2253                           
  2254                           ; BSR set to: 1
  2255                           ;Cooker.c: 421:                     hours--;
  2256  001E8A  0676               	decf	_hours,f,c
  2257  001E8C  A0D8               	btfss	status,0,c
  2258  001E8E  0677               	decf	_hours+1,f,c
  2259  001E90  D70B               	goto	l7218
  2260  001E92                     l7298:
  2261                           
  2262                           ; BSR set to: 1
  2263                           ;Cooker.c: 423:                     hours = 0;
  2264  001E92  0E00               	movlw	0
  2265  001E94  6E77               	movwf	_hours+1,c
  2266  001E96  0E00               	movlw	0
  2267  001E98  6E76               	movwf	_hours,c
  2268  001E9A                     L1:
  2269                           
  2270                           ;Cooker.c: 424:                     min = 0;
  2271  001E9A  0E00               	movlw	0
  2272  001E9C  6E75               	movwf	_min+1,c
  2273  001E9E  0E00               	movlw	0
  2274  001EA0  6E74               	movwf	_min,c
  2275                           
  2276                           ;Cooker.c: 425:                     sec = 0;
  2277  001EA2  0E00               	movlw	0
  2278  001EA4  6E73               	movwf	_sec+1,c
  2279  001EA6  0E00               	movlw	0
  2280  001EA8  6E72               	movwf	_sec,c
  2281  001EAA  D6FE               	goto	l7218
  2282  001EAC                     l189:
  2283  001EAC  BA81               	btfsc	3969,5,c	;volatile
  2284  001EAE  D017               	goto	l7308
  2285                           
  2286                           ;Cooker.c: 432:             hours = 0;
  2287  001EB0  0E00               	movlw	0
  2288  001EB2  6E77               	movwf	_hours+1,c
  2289  001EB4  0E00               	movlw	0
  2290  001EB6  6E76               	movwf	_hours,c
  2291                           
  2292                           ;Cooker.c: 433:             min = 0;
  2293  001EB8  0E00               	movlw	0
  2294  001EBA  6E75               	movwf	_min+1,c
  2295  001EBC  0E00               	movlw	0
  2296  001EBE  6E74               	movwf	_min,c
  2297                           
  2298                           ;Cooker.c: 434:             sec = 0;
  2299  001EC0  0E00               	movlw	0
  2300  001EC2  6E73               	movwf	_sec+1,c
  2301  001EC4  0E00               	movlw	0
  2302  001EC6  6E72               	movwf	_sec,c
  2303                           
  2304                           ;Cooker.c: 435:             cooker = 0;
  2305  001EC8  0E00               	movlw	0
  2306  001ECA  0101               	movlb	1	; () banked
  2307  001ECC  6FA1               	movwf	(_cooker+1)& (0+255),b
  2308  001ECE  0E00               	movlw	0
  2309  001ED0  6FA0               	movwf	_cooker& (0+255),b
  2310                           
  2311                           ;Cooker.c: 436:             heater = 0;
  2312  001ED2  0E00               	movlw	0
  2313  001ED4  6FA3               	movwf	(_heater+1)& (0+255),b
  2314  001ED6  0E00               	movlw	0
  2315  001ED8  6FA2               	movwf	_heater& (0+255),b
  2316                           
  2317                           ; BSR set to: 1
  2318                           ;Cooker.c: 437:             PORTCbits.RC5 = 0;
  2319  001EDA  9A82               	bcf	3970,5,c	;volatile
  2320                           
  2321                           ; BSR set to: 1
  2322                           ;Cooker.c: 438:             T0CONbits.TMR0ON = 0;
  2323  001EDC  9ED5               	bcf	4053,7,c	;volatile
  2324  001EDE                     l7308:
  2325                           
  2326                           ;Cooker.c: 441:         if (cooker) {
  2327  001EDE  0101               	movlb	1	; () banked
  2328  001EE0  51A0               	movf	_cooker& (0+255),w,b
  2329  001EE2  11A1               	iorwf	(_cooker+1)& (0+255),w,b
  2330  001EE4  B4D8               	btfsc	status,2,c
  2331  001EE6  D058               	goto	l7322
  2332                           
  2333                           ; BSR set to: 1
  2334                           ;Cooker.c: 442:             if (Temp < SP - H) {
  2335  001EE8  C196  F058         	movff	_Temp,___flge@ff1
  2336  001EEC  C197  F059         	movff	_Temp+1,___flge@ff1+1
  2337  001EF0  C198  F05A         	movff	_Temp+2,___flge@ff1+2
  2338  001EF4  C199  F05B         	movff	_Temp+3,___flge@ff1+3
  2339  001EF8  0E00               	movlw	0
  2340  001EFA  6E0B               	movwf	___fladd@a,c
  2341  001EFC  0E00               	movlw	0
  2342  001EFE  6E0C               	movwf	___fladd@a+1,c
  2343  001F00  0E80               	movlw	128
  2344  001F02  6E0D               	movwf	___fladd@a+2,c
  2345  001F04  0EBF               	movlw	191
  2346  001F06  6E0E               	movwf	___fladd@a+3,c
  2347  001F08  C19A  F007         	movff	_SP,___fladd@b
  2348  001F0C  C19B  F008         	movff	_SP+1,___fladd@b+1
  2349  001F10  C19C  F009         	movff	_SP+2,___fladd@b+2
  2350  001F14  C19D  F00A         	movff	_SP+3,___fladd@b+3
  2351  001F18  EC14  F014         	call	___fladd	;wreg free
  2352  001F1C  C007  F05C         	movff	?___fladd,___flge@ff2
  2353  001F20  C008  F05D         	movff	?___fladd+1,___flge@ff2+1
  2354  001F24  C009  F05E         	movff	?___fladd+2,___flge@ff2+2
  2355  001F28  C00A  F05F         	movff	?___fladd+3,___flge@ff2+3
  2356  001F2C  EC72  F01C         	call	___flge	;wreg free
  2357  001F30  B0D8               	btfsc	status,0,c
  2358  001F32  D006               	goto	l7316
  2359                           
  2360                           ;Cooker.c: 443:                 PORTCbits.RC5 = 1;
  2361  001F34  8A82               	bsf	3970,5,c	;volatile
  2362                           
  2363                           ;Cooker.c: 444:                 heater = 1;
  2364  001F36  0E00               	movlw	0
  2365  001F38  0101               	movlb	1	; () banked
  2366  001F3A  6FA3               	movwf	(_heater+1)& (0+255),b
  2367  001F3C  0E01               	movlw	1
  2368  001F3E  D02B               	goto	L4
  2369  001F40                     l7316:
  2370  001F40  0E00               	movlw	0
  2371  001F42  6E0B               	movwf	___fladd@a,c
  2372  001F44  0E00               	movlw	0
  2373  001F46  6E0C               	movwf	___fladd@a+1,c
  2374  001F48  0E80               	movlw	128
  2375  001F4A  6E0D               	movwf	___fladd@a+2,c
  2376  001F4C  0E3F               	movlw	63
  2377  001F4E  6E0E               	movwf	___fladd@a+3,c
  2378  001F50  C19A  F007         	movff	_SP,___fladd@b
  2379  001F54  C19B  F008         	movff	_SP+1,___fladd@b+1
  2380  001F58  C19C  F009         	movff	_SP+2,___fladd@b+2
  2381  001F5C  C19D  F00A         	movff	_SP+3,___fladd@b+3
  2382  001F60  EC14  F014         	call	___fladd	;wreg free
  2383  001F64  C007  F058         	movff	?___fladd,___flge@ff1
  2384  001F68  C008  F059         	movff	?___fladd+1,___flge@ff1+1
  2385  001F6C  C009  F05A         	movff	?___fladd+2,___flge@ff1+2
  2386  001F70  C00A  F05B         	movff	?___fladd+3,___flge@ff1+3
  2387  001F74  C196  F05C         	movff	_Temp,___flge@ff2
  2388  001F78  C197  F05D         	movff	_Temp+1,___flge@ff2+1
  2389  001F7C  C198  F05E         	movff	_Temp+2,___flge@ff2+2
  2390  001F80  C199  F05F         	movff	_Temp+3,___flge@ff2+3
  2391  001F84  EC72  F01C         	call	___flge	;wreg free
  2392  001F88  B0D8               	btfsc	status,0,c
  2393  001F8A  D006               	goto	l7322
  2394                           
  2395                           ;Cooker.c: 446:                 PORTCbits.RC5 = 0;
  2396  001F8C  9A82               	bcf	3970,5,c	;volatile
  2397                           
  2398                           ;Cooker.c: 447:                 heater = 0;
  2399  001F8E  0E00               	movlw	0
  2400  001F90  0101               	movlb	1	; () banked
  2401  001F92  6FA3               	movwf	(_heater+1)& (0+255),b
  2402  001F94  0E00               	movlw	0
  2403  001F96                     L4:
  2404  001F96  6FA2               	movwf	_heater& (0+255),b
  2405  001F98                     l7322:
  2406                           
  2407                           ;Cooker.c: 450:         display();
  2408  001F98  EC02  F018         	call	_display	;wreg free
  2409  001F9C  D570               	goto	l163
  2410  001F9E                     __end_of_main:
  2411                           	opt callstack 0
  2412                           
  2413 ;; *************** function _setupPorts *****************
  2414 ;; Defined at:
  2415 ;;		line 155 in file "Cooker.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;		None
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;		None
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;Total ram usage:        0 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    4
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text1
  2444  0045E8                     __ptext1:
  2445                           	opt callstack 0
  2446  0045E8                     _setupPorts:
  2447                           	opt callstack 26
  2448                           
  2449                           ;Cooker.c: 156:     ADCON0 = 0;
  2450                           
  2451                           ;incstack = 0
  2452  0045E8  0E00               	movlw	0
  2453  0045EA  6EC2               	movwf	4034,c	;volatile
  2454                           
  2455                           ;Cooker.c: 157:     ADCON1 = 0b00001100;
  2456  0045EC  0E0C               	movlw	12
  2457  0045EE  6EC1               	movwf	4033,c	;volatile
  2458                           
  2459                           ;Cooker.c: 158:     TRISB = 0xFF;
  2460  0045F0  6893               	setf	3987,c	;volatile
  2461                           
  2462                           ;Cooker.c: 159:     TRISC = 0x00;
  2463  0045F2  0E00               	movlw	0
  2464  0045F4  6E94               	movwf	3988,c	;volatile
  2465                           
  2466                           ;Cooker.c: 160:     PORTC = 0;
  2467  0045F6  0E00               	movlw	0
  2468  0045F8  6E82               	movwf	3970,c	;volatile
  2469                           
  2470                           ;Cooker.c: 161:     TRISA = 0xFF;
  2471  0045FA  6892               	setf	3986,c	;volatile
  2472                           
  2473                           ;Cooker.c: 162:     TRISD = 0x00;
  2474  0045FC  0E00               	movlw	0
  2475  0045FE  6E95               	movwf	3989,c	;volatile
  2476                           
  2477                           ;Cooker.c: 163:     TRISE = 0x00;
  2478  004600  0E00               	movlw	0
  2479  004602  6E96               	movwf	3990,c	;volatile
  2480  004604  0012               	return		;funcret
  2481  004606                     __end_of_setupPorts:
  2482                           	opt callstack 0
  2483                           
  2484 ;; *************** function _read_adc_voltage *****************
  2485 ;; Defined at:
  2486 ;;		line 29 in file "my_adc.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  channel         1    wreg     unsigned char 
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  channel         1   59[COMRAM] unsigned char 
  2491 ;;  voltage         4   55[COMRAM] float 
  2492 ;;  raw_value       2   60[COMRAM] int 
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  4   51[COMRAM] float 
  2495 ;; Registers used:
  2496 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;Total ram usage:       11 bytes
  2507 ;; Hardware stack levels used:    1
  2508 ;; Hardware stack levels required when called:    5
  2509 ;; This function calls:
  2510 ;;		___fldiv
  2511 ;;		___wmul
  2512 ;;		___xxtofl
  2513 ;;		_read_adc_raw_no_lib
  2514 ;; This function is called by:
  2515 ;;		_main
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           	psect	text2
  2520  003EB8                     __ptext2:
  2521                           	opt callstack 0
  2522  003EB8                     _read_adc_voltage:
  2523                           	opt callstack 25
  2524                           
  2525                           ;incstack = 0
  2526                           ;read_adc_voltage@channel stored from wreg
  2527  003EB8  6E3C               	movwf	read_adc_voltage@channel,c
  2528                           
  2529                           ;my_adc.c: 30:     int raw_value;;my_adc.c: 31:     float voltage;;my_adc.c: 32:     raw
      +                          _value = read_adc_raw_no_lib(channel);
  2530  003EBA  503C               	movf	read_adc_voltage@channel,w,c
  2531  003EBC  EC49  F021         	call	_read_adc_raw_no_lib
  2532  003EC0  C007  F03D         	movff	?_read_adc_raw_no_lib,read_adc_voltage@raw_value
  2533  003EC4  C008  F03E         	movff	?_read_adc_raw_no_lib+1,read_adc_voltage@raw_value+1
  2534                           
  2535                           ;my_adc.c: 33:     voltage = (raw_value * 5) / 1023.0;
  2536  003EC8  C03D  F007         	movff	read_adc_voltage@raw_value,___wmul@multiplier
  2537  003ECC  C03E  F008         	movff	read_adc_voltage@raw_value+1,___wmul@multiplier+1
  2538  003ED0  0E00               	movlw	0
  2539  003ED2  6E0A               	movwf	___wmul@multiplicand+1,c
  2540  003ED4  0E05               	movlw	5
  2541  003ED6  6E09               	movwf	___wmul@multiplicand,c
  2542  003ED8  EC98  F022         	call	___wmul	;wreg free
  2543  003EDC  C007  F00D         	movff	?___wmul,___xxtofl@val
  2544  003EE0  C008  F00E         	movff	?___wmul+1,___xxtofl@val+1
  2545  003EE4  0E00               	movlw	0
  2546  003EE6  BE0E               	btfsc	___xxtofl@val+1,7,c
  2547  003EE8  0EFF               	movlw	-1
  2548  003EEA  6E0F               	movwf	___xxtofl@val+2,c
  2549  003EEC  6E10               	movwf	___xxtofl@val+3,c
  2550  003EEE  0E01               	movlw	1
  2551  003EF0  ECA0  F01A         	call	___xxtofl
  2552  003EF4  C00D  F01B         	movff	?___xxtofl,___fldiv@b
  2553  003EF8  C00E  F01C         	movff	?___xxtofl+1,___fldiv@b+1
  2554  003EFC  C00F  F01D         	movff	?___xxtofl+2,___fldiv@b+2
  2555  003F00  C010  F01E         	movff	?___xxtofl+3,___fldiv@b+3
  2556  003F04  0E00               	movlw	0
  2557  003F06  6E1F               	movwf	___fldiv@a,c
  2558  003F08  0EC0               	movlw	192
  2559  003F0A  6E20               	movwf	___fldiv@a+1,c
  2560  003F0C  0E7F               	movlw	127
  2561  003F0E  6E21               	movwf	___fldiv@a+2,c
  2562  003F10  0E44               	movlw	68
  2563  003F12  6E22               	movwf	___fldiv@a+3,c
  2564  003F14  EC9A  F015         	call	___fldiv	;wreg free
  2565  003F18  C01B  F038         	movff	?___fldiv,read_adc_voltage@voltage
  2566  003F1C  C01C  F039         	movff	?___fldiv+1,read_adc_voltage@voltage+1
  2567  003F20  C01D  F03A         	movff	?___fldiv+2,read_adc_voltage@voltage+2
  2568  003F24  C01E  F03B         	movff	?___fldiv+3,read_adc_voltage@voltage+3
  2569                           
  2570                           ;my_adc.c: 34:     return voltage;
  2571  003F28  C038  F034         	movff	read_adc_voltage@voltage,?_read_adc_voltage
  2572  003F2C  C039  F035         	movff	read_adc_voltage@voltage+1,?_read_adc_voltage+1
  2573  003F30  C03A  F036         	movff	read_adc_voltage@voltage+2,?_read_adc_voltage+2
  2574  003F34  C03B  F037         	movff	read_adc_voltage@voltage+3,?_read_adc_voltage+3
  2575  003F38  0012               	return		;funcret
  2576  003F3A                     __end_of_read_adc_voltage:
  2577                           	opt callstack 0
  2578                           
  2579 ;; *************** function _read_adc_raw_no_lib *****************
  2580 ;; Defined at:
  2581 ;;		line 17 in file "my_adc.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  channel         1    wreg     unsigned char 
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  channel         1   12[COMRAM] unsigned char 
  2586 ;;  raw_value       2   10[COMRAM] int 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  2    6[COMRAM] int 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;Total ram usage:        7 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    4
  2603 ;; This function calls:
  2604 ;;		Nothing
  2605 ;; This function is called by:
  2606 ;;		_read_adc_voltage
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text3
  2611  004292                     __ptext3:
  2612                           	opt callstack 0
  2613  004292                     _read_adc_raw_no_lib:
  2614                           	opt callstack 25
  2615                           
  2616                           ;incstack = 0
  2617                           ;read_adc_raw_no_lib@channel stored from wreg
  2618  004292  6E0D               	movwf	read_adc_raw_no_lib@channel,c
  2619                           
  2620                           ;my_adc.c: 18:     int raw_value;;my_adc.c: 19:     ADCON0bits.CHS = channel;
  2621  004294  C00D  F009         	movff	read_adc_raw_no_lib@channel,??_read_adc_raw_no_lib
  2622  004298  4609               	rlncf	??_read_adc_raw_no_lib,f,c
  2623  00429A  4609               	rlncf	??_read_adc_raw_no_lib,f,c
  2624  00429C  50C2               	movf	4034,w,c	;volatile
  2625  00429E  1809               	xorwf	??_read_adc_raw_no_lib,w,c
  2626  0042A0  0BC3               	andlw	-61
  2627  0042A2  1809               	xorwf	??_read_adc_raw_no_lib,w,c
  2628  0042A4  6EC2               	movwf	4034,c	;volatile
  2629                           
  2630                           ;my_adc.c: 21:     ADCON0bits.GO = 1;
  2631  0042A6  82C2               	bsf	4034,1,c	;volatile
  2632                           
  2633                           ;my_adc.c: 22:     while (ADCON0bits.GO) {
  2634  0042A8  D001               	goto	l301
  2635  0042AA                     l302:
  2636  0042AA  0004               	clrwdt		;# 
  2637  0042AC                     l301:
  2638                           
  2639                           ;my_adc.c: 22:     while (ADCON0bits.GO) {
  2640  0042AC  B2C2               	btfsc	4034,1,c	;volatile
  2641  0042AE  D7FD               	goto	l302
  2642                           
  2643                           ;my_adc.c: 25:     raw_value = ADRESH << 8 | ADRESL;
  2644  0042B0  50C3               	movf	4035,w,c	;volatile
  2645  0042B2  CFC4 F009          	movff	4036,??_read_adc_raw_no_lib	;volatile
  2646  0042B6  6A0A               	clrf	(??_read_adc_raw_no_lib+1)& (0+255),c
  2647  0042B8  C009  F00A         	movff	??_read_adc_raw_no_lib,??_read_adc_raw_no_lib+1
  2648  0042BC  6A09               	clrf	??_read_adc_raw_no_lib,c
  2649  0042BE  1009               	iorwf	??_read_adc_raw_no_lib,w,c
  2650  0042C0  6E0B               	movwf	read_adc_raw_no_lib@raw_value,c
  2651  0042C2  500A               	movf	??_read_adc_raw_no_lib+1,w,c
  2652  0042C4  6E0C               	movwf	read_adc_raw_no_lib@raw_value+1,c
  2653                           
  2654                           ;my_adc.c: 26:     return raw_value;
  2655  0042C6  C00B  F007         	movff	read_adc_raw_no_lib@raw_value,?_read_adc_raw_no_lib
  2656  0042CA  C00C  F008         	movff	read_adc_raw_no_lib@raw_value+1,?_read_adc_raw_no_lib+1
  2657  0042CE  0012               	return		;funcret
  2658  0042D0                     __end_of_read_adc_raw_no_lib:
  2659                           	opt callstack 0
  2660                           
  2661 ;; *************** function ___xxtofl *****************
  2662 ;; Defined at:
  2663 ;;		line 10 in file "D:\MPLAB\pic\sources\c99\common\xxtofl.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;  sign            1    wreg     unsigned char 
  2666 ;;  val             4   12[COMRAM] long 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  sign            1   20[COMRAM] unsigned char 
  2669 ;;  arg             4   22[COMRAM] unsigned long 
  2670 ;;  exp             1   21[COMRAM] unsigned char 
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  4   12[COMRAM] unsigned char 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2, status,0
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2680 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;Total ram usage:       14 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:    4
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_main
  2691 ;;		_read_adc_voltage
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text4
  2696  003540                     __ptext4:
  2697                           	opt callstack 0
  2698  003540                     ___xxtofl:
  2699                           	opt callstack 25
  2700                           
  2701                           ;incstack = 0
  2702                           ;___xxtofl@sign stored from wreg
  2703  003540  6E15               	movwf	___xxtofl@sign,c
  2704  003542  5015               	movf	___xxtofl@sign,w,c
  2705  003544  A4D8               	btfss	status,2,c
  2706  003546  AE10               	btfss	___xxtofl@val+3,7,c
  2707  003548  D01A               	goto	l1174
  2708  00354A  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  2709  00354E  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  2710  003552  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  2711  003556  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  2712  00355A  1E11               	comf	??___xxtofl,f,c
  2713  00355C  1E12               	comf	??___xxtofl+1,f,c
  2714  00355E  1E13               	comf	??___xxtofl+2,f,c
  2715  003560  1E14               	comf	??___xxtofl+3,f,c
  2716  003562  2A11               	incf	??___xxtofl,f,c
  2717  003564  0E00               	movlw	0
  2718  003566  2212               	addwfc	??___xxtofl+1,f,c
  2719  003568  2213               	addwfc	??___xxtofl+2,f,c
  2720  00356A  2214               	addwfc	??___xxtofl+3,f,c
  2721  00356C  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  2722  003570  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  2723  003574  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  2724  003578  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  2725  00357C  D008               	goto	l5008
  2726  00357E                     l1174:
  2727  00357E  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  2728  003582  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2729  003586  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2730  00358A  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2731  00358E                     l5008:
  2732  00358E  500D               	movf	___xxtofl@val,w,c
  2733  003590  100E               	iorwf	___xxtofl@val+1,w,c
  2734  003592  100F               	iorwf	___xxtofl@val+2,w,c
  2735  003594  1010               	iorwf	___xxtofl@val+3,w,c
  2736  003596  A4D8               	btfss	status,2,c
  2737  003598  D009               	goto	l5014
  2738  00359A  0E00               	movlw	0
  2739  00359C  6E0D               	movwf	?___xxtofl,c
  2740  00359E  0E00               	movlw	0
  2741  0035A0  6E0E               	movwf	?___xxtofl+1,c
  2742  0035A2  0E00               	movlw	0
  2743  0035A4  6E0F               	movwf	?___xxtofl+2,c
  2744  0035A6  0E00               	movlw	0
  2745  0035A8  6E10               	movwf	?___xxtofl+3,c
  2746  0035AA  0012               	return	
  2747  0035AC                     l5014:
  2748  0035AC  0E96               	movlw	150
  2749  0035AE  6E16               	movwf	___xxtofl@exp,c
  2750  0035B0  D006               	goto	l5018
  2751  0035B2                     l5016:
  2752  0035B2  2A16               	incf	___xxtofl@exp,f,c
  2753  0035B4  90D8               	bcf	status,0,c
  2754  0035B6  321A               	rrcf	___xxtofl@arg+3,f,c
  2755  0035B8  3219               	rrcf	___xxtofl@arg+2,f,c
  2756  0035BA  3218               	rrcf	___xxtofl@arg+1,f,c
  2757  0035BC  3217               	rrcf	___xxtofl@arg,f,c
  2758  0035BE                     l5018:
  2759  0035BE  0E00               	movlw	0
  2760  0035C0  1417               	andwf	___xxtofl@arg,w,c
  2761  0035C2  6E11               	movwf	??___xxtofl& (0+255),c
  2762  0035C4  0E00               	movlw	0
  2763  0035C6  1418               	andwf	___xxtofl@arg+1,w,c
  2764  0035C8  6E12               	movwf	(??___xxtofl+1)& (0+255),c
  2765  0035CA  0E00               	movlw	0
  2766  0035CC  1419               	andwf	___xxtofl@arg+2,w,c
  2767  0035CE  6E13               	movwf	(??___xxtofl+2)& (0+255),c
  2768  0035D0  0EFE               	movlw	254
  2769  0035D2  141A               	andwf	___xxtofl@arg+3,w,c
  2770  0035D4  6E14               	movwf	(??___xxtofl+3)& (0+255),c
  2771  0035D6  5011               	movf	??___xxtofl,w,c
  2772  0035D8  1012               	iorwf	??___xxtofl+1,w,c
  2773  0035DA  1013               	iorwf	??___xxtofl+2,w,c
  2774  0035DC  1014               	iorwf	??___xxtofl+3,w,c
  2775  0035DE  B4D8               	btfsc	status,2,c
  2776  0035E0  D00D               	goto	l1181
  2777  0035E2  D7E7               	goto	l5016
  2778  0035E4                     l5020:
  2779  0035E4  2A16               	incf	___xxtofl@exp,f,c
  2780  0035E6  0E01               	movlw	1
  2781  0035E8  2617               	addwf	___xxtofl@arg,f,c
  2782  0035EA  0E00               	movlw	0
  2783  0035EC  2218               	addwfc	___xxtofl@arg+1,f,c
  2784  0035EE  2219               	addwfc	___xxtofl@arg+2,f,c
  2785  0035F0  221A               	addwfc	___xxtofl@arg+3,f,c
  2786  0035F2  90D8               	bcf	status,0,c
  2787  0035F4  321A               	rrcf	___xxtofl@arg+3,f,c
  2788  0035F6  3219               	rrcf	___xxtofl@arg+2,f,c
  2789  0035F8  3218               	rrcf	___xxtofl@arg+1,f,c
  2790  0035FA  3217               	rrcf	___xxtofl@arg,f,c
  2791  0035FC                     l1181:
  2792  0035FC  0E00               	movlw	0
  2793  0035FE  1417               	andwf	___xxtofl@arg,w,c
  2794  003600  6E11               	movwf	??___xxtofl& (0+255),c
  2795  003602  0E00               	movlw	0
  2796  003604  1418               	andwf	___xxtofl@arg+1,w,c
  2797  003606  6E12               	movwf	(??___xxtofl+1)& (0+255),c
  2798  003608  0E00               	movlw	0
  2799  00360A  1419               	andwf	___xxtofl@arg+2,w,c
  2800  00360C  6E13               	movwf	(??___xxtofl+2)& (0+255),c
  2801  00360E  0EFF               	movlw	255
  2802  003610  141A               	andwf	___xxtofl@arg+3,w,c
  2803  003612  6E14               	movwf	(??___xxtofl+3)& (0+255),c
  2804  003614  5011               	movf	??___xxtofl,w,c
  2805  003616  1012               	iorwf	??___xxtofl+1,w,c
  2806  003618  1013               	iorwf	??___xxtofl+2,w,c
  2807  00361A  1014               	iorwf	??___xxtofl+3,w,c
  2808  00361C  B4D8               	btfsc	status,2,c
  2809  00361E  D007               	goto	l5028
  2810  003620  D7E1               	goto	l5020
  2811  003622                     l5026:
  2812  003622  0616               	decf	___xxtofl@exp,f,c
  2813  003624  90D8               	bcf	status,0,c
  2814  003626  3617               	rlcf	___xxtofl@arg,f,c
  2815  003628  3618               	rlcf	___xxtofl@arg+1,f,c
  2816  00362A  3619               	rlcf	___xxtofl@arg+2,f,c
  2817  00362C  361A               	rlcf	___xxtofl@arg+3,f,c
  2818  00362E                     l5028:
  2819  00362E  BE19               	btfsc	___xxtofl@arg+2,7,c
  2820  003630  D003               	goto	u6130
  2821  003632  0E02               	movlw	2
  2822  003634  6016               	cpfslt	___xxtofl@exp,c
  2823  003636  D7F5               	goto	l5026
  2824  003638                     u6130:
  2825  003638  A016               	btfss	___xxtofl@exp,0,c
  2826  00363A  9E19               	bcf	___xxtofl@arg+2,7,c
  2827  00363C  90D8               	bcf	status,0,c
  2828  00363E  3216               	rrcf	___xxtofl@exp,f,c
  2829  003640  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  2830  003644  6A12               	clrf	(??___xxtofl+1)& (0+255),c
  2831  003646  6A13               	clrf	(??___xxtofl+2)& (0+255),c
  2832  003648  6A14               	clrf	(??___xxtofl+3)& (0+255),c
  2833  00364A  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  2834  00364E  6A13               	clrf	??___xxtofl+2,c
  2835  003650  6A12               	clrf	??___xxtofl+1,c
  2836  003652  6A11               	clrf	??___xxtofl,c
  2837  003654  5011               	movf	??___xxtofl,w,c
  2838  003656  1217               	iorwf	___xxtofl@arg,f,c
  2839  003658  5012               	movf	??___xxtofl+1,w,c
  2840  00365A  1218               	iorwf	___xxtofl@arg+1,f,c
  2841  00365C  5013               	movf	??___xxtofl+2,w,c
  2842  00365E  1219               	iorwf	___xxtofl@arg+2,f,c
  2843  003660  5014               	movf	??___xxtofl+3,w,c
  2844  003662  121A               	iorwf	___xxtofl@arg+3,f,c
  2845  003664  5015               	movf	___xxtofl@sign,w,c
  2846  003666  A4D8               	btfss	status,2,c
  2847  003668  AE10               	btfss	___xxtofl@val+3,7,c
  2848  00366A  D001               	goto	l5044
  2849  00366C  8E1A               	bsf	___xxtofl@arg+3,7,c
  2850  00366E                     l5044:
  2851  00366E  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  2852  003672  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  2853  003676  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  2854  00367A  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  2855  00367E  0012               	return		;funcret
  2856  003680                     __end_of___xxtofl:
  2857                           	opt callstack 0
  2858                           
  2859 ;; *************** function _lcd_init *****************
  2860 ;; Defined at:
  2861 ;;		line 43 in file "lcd_x8.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  i               1   16[COMRAM] unsigned char 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;Total ram usage:        1 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    7
  2882 ;; This function calls:
  2883 ;;		_delay_ms
  2884 ;;		_lcd_send_byte
  2885 ;;		_lcd_send_nibble
  2886 ;; This function is called by:
  2887 ;;		_main
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text5
  2892  0041B4                     __ptext5:
  2893                           	opt callstack 0
  2894  0041B4                     _lcd_init:
  2895                           	opt callstack 23
  2896                           
  2897                           ;lcd_x8.c: 45:     unsigned char i;;lcd_x8.c: 48:     PORTEbits.RE2 = 0;
  2898                           
  2899                           ;incstack = 0
  2900  0041B4  9484               	bcf	3972,2,c	;volatile
  2901                           
  2902                           ;lcd_x8.c: 49:     PORTEbits.RE1 = 0;
  2903  0041B6  9284               	bcf	3972,1,c	;volatile
  2904                           
  2905                           ;lcd_x8.c: 51:     delay_ms(25);
  2906  0041B8  0E00               	movlw	0
  2907  0041BA  6E08               	movwf	delay_ms@n+1,c
  2908  0041BC  0E19               	movlw	25
  2909  0041BE  6E07               	movwf	delay_ms@n,c
  2910  0041C0  ECAB  F022         	call	_delay_ms	;wreg free
  2911                           
  2912                           ;lcd_x8.c: 52:     for (i = 1; i <= 3; ++i) {
  2913  0041C4  0E01               	movlw	1
  2914  0041C6  6E11               	movwf	lcd_init@i,c
  2915  0041C8                     l5184:
  2916                           
  2917                           ;lcd_x8.c: 53:         lcd_send_nibble(3);
  2918  0041C8  0E03               	movlw	3
  2919  0041CA  ECE3  F022         	call	_lcd_send_nibble
  2920                           
  2921                           ;lcd_x8.c: 54:     }
  2922  0041CE  2A11               	incf	lcd_init@i,f,c
  2923  0041D0  0E03               	movlw	3
  2924  0041D2  6411               	cpfsgt	lcd_init@i,c
  2925  0041D4  D7F9               	goto	l5184
  2926                           
  2927                           ;lcd_x8.c: 56:     lcd_send_nibble(2);
  2928  0041D6  0E02               	movlw	2
  2929  0041D8  ECE3  F022         	call	_lcd_send_nibble
  2930                           
  2931                           ;lcd_x8.c: 57:     for (i = 0; i <= 3; ++i)
  2932  0041DC  0E00               	movlw	0
  2933  0041DE  6E11               	movwf	lcd_init@i,c
  2934  0041E0                     l5198:
  2935                           
  2936                           ;lcd_x8.c: 58:         lcd_send_byte(0, LCD_INIT_STRING[i]);
  2937  0041E0  0EF4               	movlw	low _LCD_INIT_STRING
  2938  0041E2  2411               	addwf	lcd_init@i,w,c
  2939  0041E4  6ED9               	movwf	fsr2l,c
  2940  0041E6  6ADA               	clrf	fsr2h,c
  2941  0041E8  0E01               	movlw	high _LCD_INIT_STRING
  2942  0041EA  22DA               	addwfc	fsr2h,f,c
  2943  0041EC  50DF               	movf	indf2,w,c
  2944  0041EE  6E0F               	movwf	lcd_send_byte@n,c
  2945  0041F0  0E00               	movlw	0
  2946  0041F2  ECA5  F021         	call	_lcd_send_byte
  2947  0041F6  2A11               	incf	lcd_init@i,f,c
  2948  0041F8  0E03               	movlw	3
  2949  0041FA  6411               	cpfsgt	lcd_init@i,c
  2950  0041FC  D7F1               	goto	l5198
  2951  0041FE  0012               	return	
  2952  004200                     __end_of_lcd_init:
  2953                           	opt callstack 0
  2954                           
  2955 ;; *************** function _init_adc_no_lib *****************
  2956 ;; Defined at:
  2957 ;;		line 11 in file "my_adc.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg, status,2
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;Total ram usage:        0 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    4
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_main
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text6
  2986  00463E                     __ptext6:
  2987                           	opt callstack 0
  2988  00463E                     _init_adc_no_lib:
  2989                           	opt callstack 26
  2990                           
  2991                           ;my_adc.c: 12:     ADCON0 = 0;
  2992                           
  2993                           ;incstack = 0
  2994  00463E  0E00               	movlw	0
  2995  004640  6EC2               	movwf	4034,c	;volatile
  2996                           
  2997                           ;my_adc.c: 13:     ADCON0bits.ADON = 1;
  2998  004642  80C2               	bsf	4034,0,c	;volatile
  2999                           
  3000                           ;my_adc.c: 14:     ADCON2 = 0b10001001;
  3001  004644  0E89               	movlw	137
  3002  004646  6EC0               	movwf	4032,c	;volatile
  3003  004648  0012               	return		;funcret
  3004  00464A                     __end_of_init_adc_no_lib:
  3005                           	opt callstack 0
  3006                           
  3007 ;; *************** function _display *****************
  3008 ;; Defined at:
  3009 ;;		line 166 in file "Cooker.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  LCD            64   74[BANK1 ] unsigned char [64]
  3014 ;;  LCDP           64   10[BANK1 ] unsigned char [64]
  3015 ;;  CK              6  144[BANK1 ] unsigned char [6]
  3016 ;;  HT              6  138[BANK1 ] unsigned char [6]
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;      Locals:         0       0     140       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Totals:         0       2     140       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;Total ram usage:      142 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:   12
  3033 ;; This function calls:
  3034 ;;		_lcd_gotoxy
  3035 ;;		_lcd_puts
  3036 ;;		_sprintf
  3037 ;; This function is called by:
  3038 ;;		_main
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text7
  3043  003004                     __ptext7:
  3044                           	opt callstack 0
  3045  003004                     _display:
  3046                           	opt callstack 18
  3047                           
  3048                           ;Cooker.c: 167:     char HT[6];;Cooker.c: 168:     char CK[6];;Cooker.c: 169:     char L
      +                          CD[64];;Cooker.c: 170:     char LCDP[64];;Cooker.c: 172:     switch (mode) {
  3049                           
  3050                           ;incstack = 0
  3051  003004  D037               	goto	l7010
  3052  003006                     l6998:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;Cooker.c: 174:             sprintf(LCDP, "Sec          ");
  3056  003006  0E0A               	movlw	low display@LCDP
  3057  003008  6FDE               	movwf	sprintf@s& (0+255),b
  3058  00300A  0E01               	movlw	high display@LCDP
  3059  00300C  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  3060  00300E  0E18               	movlw	low (STR_2+2)
  3061  003010  6FE0               	movwf	sprintf@fmt& (0+255),b
  3062  003012  0E10               	movlw	high (STR_2+2)
  3063  003014  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  3064  003016  EC07  F020         	call	_sprintf	;wreg free
  3065                           
  3066                           ;Cooker.c: 175:             break;
  3067  00301A  D045               	goto	l7012
  3068  00301C                     l7000:
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;Cooker.c: 178:             sprintf(LCDP, "10Sec          ");
  3072  00301C  0E0A               	movlw	low display@LCDP
  3073  00301E  6FDE               	movwf	sprintf@s& (0+255),b
  3074  003020  0E01               	movlw	high display@LCDP
  3075  003022  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  3076  003024  0E16               	movlw	low STR_2
  3077  003026  6FE0               	movwf	sprintf@fmt& (0+255),b
  3078  003028  0E10               	movlw	high STR_2
  3079  00302A  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  3080  00302C  EC07  F020         	call	_sprintf	;wreg free
  3081                           
  3082                           ;Cooker.c: 179:             break;
  3083  003030  D03A               	goto	l7012
  3084  003032                     l7002:
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;Cooker.c: 181:             sprintf(LCDP, "Min          ");
  3088  003032  0E0A               	movlw	low display@LCDP
  3089  003034  6FDE               	movwf	sprintf@s& (0+255),b
  3090  003036  0E01               	movlw	high display@LCDP
  3091  003038  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  3092  00303A  0E26               	movlw	low STR_3
  3093  00303C  6FE0               	movwf	sprintf@fmt& (0+255),b
  3094  00303E  0E10               	movlw	high STR_3
  3095  003040  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  3096  003042  EC07  F020         	call	_sprintf	;wreg free
  3097                           
  3098                           ;Cooker.c: 182:             break;
  3099  003046  D02F               	goto	l7012
  3100  003048                     l7004:
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;Cooker.c: 184:             sprintf(LCDP, "10Min      ");
  3104  003048  0E0A               	movlw	low display@LCDP
  3105  00304A  6FDE               	movwf	sprintf@s& (0+255),b
  3106  00304C  0E01               	movlw	high display@LCDP
  3107  00304E  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  3108  003050  0E34               	movlw	low STR_4
  3109  003052  6FE0               	movwf	sprintf@fmt& (0+255),b
  3110  003054  0E10               	movlw	high STR_4
  3111  003056  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  3112  003058  EC07  F020         	call	_sprintf	;wreg free
  3113                           
  3114                           ;Cooker.c: 185:             break;
  3115  00305C  D024               	goto	l7012
  3116  00305E                     l7006:
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;Cooker.c: 187:             sprintf(LCDP, "HR        ");
  3120  00305E  0E0A               	movlw	low display@LCDP
  3121  003060  6FDE               	movwf	sprintf@s& (0+255),b
  3122  003062  0E01               	movlw	high display@LCDP
  3123  003064  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  3124  003066  0E58               	movlw	low STR_5
  3125  003068  6FE0               	movwf	sprintf@fmt& (0+255),b
  3126  00306A  0E10               	movlw	high STR_5
  3127  00306C  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  3128  00306E  EC07  F020         	call	_sprintf	;wreg free
  3129                           
  3130                           ;Cooker.c: 188:             break;
  3131  003072  D019               	goto	l7012
  3132  003074                     l7010:
  3133  003074  C19E  F0E8         	movff	_mode,??_display
  3134  003078  C19F  F0E9         	movff	_mode+1,??_display+1
  3135                           
  3136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3137                           ; Switch size 1, requested type "simple"
  3138                           ; Number of cases is 1, Range of values is 0 to 0
  3139                           ; switch strategies available:
  3140                           ; Name         Instructions Cycles
  3141                           ; simple_byte            4     3 (average)
  3142                           ;	Chosen strategy is simple_byte
  3143  00307C  0100               	movlb	0	; () banked
  3144  00307E  51E9               	movf	(??_display+1)& (0+255),w,b
  3145  003080  0A00               	xorlw	0	; case 0
  3146  003082  A4D8               	btfss	status,2,c
  3147  003084  D010               	goto	l7012
  3148                           
  3149                           ; BSR set to: 0
  3150                           ; Switch size 1, requested type "simple"
  3151                           ; Number of cases is 5, Range of values is 0 to 4
  3152                           ; switch strategies available:
  3153                           ; Name         Instructions Cycles
  3154                           ; simple_byte           16     9 (average)
  3155                           ;	Chosen strategy is simple_byte
  3156  003086  51E8               	movf	??_display& (0+255),w,b
  3157  003088  0A00               	xorlw	0	; case 0
  3158  00308A  B4D8               	btfsc	status,2,c
  3159  00308C  D7BC               	goto	l6998
  3160  00308E  0A01               	xorlw	1	; case 1
  3161  003090  B4D8               	btfsc	status,2,c
  3162  003092  D7C4               	goto	l7000
  3163  003094  0A03               	xorlw	3	; case 2
  3164  003096  B4D8               	btfsc	status,2,c
  3165  003098  D7CC               	goto	l7002
  3166  00309A  0A01               	xorlw	1	; case 3
  3167  00309C  B4D8               	btfsc	status,2,c
  3168  00309E  D7D4               	goto	l7004
  3169  0030A0  0A07               	xorlw	7	; case 4
  3170  0030A2  B4D8               	btfsc	status,2,c
  3171  0030A4  D7DC               	goto	l7006
  3172  0030A6                     l7012:
  3173                           
  3174                           ;Cooker.c: 191:     if (heater) {
  3175  0030A6  0101               	movlb	1	; () banked
  3176  0030A8  51A2               	movf	_heater& (0+255),w,b
  3177  0030AA  11A3               	iorwf	(_heater+1)& (0+255),w,b
  3178  0030AC  B4D8               	btfsc	status,2,c
  3179  0030AE  D00C               	goto	l7016
  3180                           
  3181                           ; BSR set to: 1
  3182                           ;Cooker.c: 192:         sprintf(HT, "HT: ON");
  3183  0030B0  0E8A               	movlw	low display@HT
  3184  0030B2  0100               	movlb	0	; () banked
  3185  0030B4  6FDE               	movwf	sprintf@s& (0+255),b
  3186  0030B6  0E01               	movlw	high display@HT
  3187  0030B8  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  3188  0030BA  0E78               	movlw	low STR_6
  3189  0030BC  6FE0               	movwf	sprintf@fmt& (0+255),b
  3190  0030BE  0E10               	movlw	high STR_6
  3191  0030C0  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  3192  0030C2  EC07  F020         	call	_sprintf	;wreg free
  3193                           
  3194                           ;Cooker.c: 193:     } else {
  3195  0030C6  D00B               	goto	l7018
  3196  0030C8                     l7016:
  3197                           
  3198                           ; BSR set to: 1
  3199                           ;Cooker.c: 194:         sprintf(HT, "HT:OFF");
  3200  0030C8  0E8A               	movlw	low display@HT
  3201  0030CA  0100               	movlb	0	; () banked
  3202  0030CC  6FDE               	movwf	sprintf@s& (0+255),b
  3203  0030CE  0E01               	movlw	high display@HT
  3204  0030D0  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  3205  0030D2  0E6A               	movlw	low STR_7
  3206  0030D4  6FE0               	movwf	sprintf@fmt& (0+255),b
  3207  0030D6  0E10               	movlw	high STR_7
  3208  0030D8  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  3209  0030DA  EC07  F020         	call	_sprintf	;wreg free
  3210  0030DE                     l7018:
  3211                           
  3212                           ;Cooker.c: 197:     if (cooker) {
  3213  0030DE  0101               	movlb	1	; () banked
  3214  0030E0  51A0               	movf	_cooker& (0+255),w,b
  3215  0030E2  11A1               	iorwf	(_cooker+1)& (0+255),w,b
  3216  0030E4  B4D8               	btfsc	status,2,c
  3217  0030E6  D00C               	goto	l7022
  3218                           
  3219                           ; BSR set to: 1
  3220                           ;Cooker.c: 198:         sprintf(CK, "CK: ON");
  3221  0030E8  0E90               	movlw	low display@CK
  3222  0030EA  0100               	movlb	0	; () banked
  3223  0030EC  6FDE               	movwf	sprintf@s& (0+255),b
  3224  0030EE  0E01               	movlw	high display@CK
  3225  0030F0  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  3226  0030F2  0E71               	movlw	low STR_8
  3227  0030F4  6FE0               	movwf	sprintf@fmt& (0+255),b
  3228  0030F6  0E10               	movlw	high STR_8
  3229  0030F8  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  3230  0030FA  EC07  F020         	call	_sprintf	;wreg free
  3231                           
  3232                           ;Cooker.c: 199:     } else {
  3233  0030FE  D00B               	goto	l7024
  3234  003100                     l7022:
  3235                           
  3236                           ; BSR set to: 1
  3237                           ;Cooker.c: 200:         sprintf(CK, "CK:OFF");
  3238  003100  0E90               	movlw	low display@CK
  3239  003102  0100               	movlb	0	; () banked
  3240  003104  6FDE               	movwf	sprintf@s& (0+255),b
  3241  003106  0E01               	movlw	high display@CK
  3242  003108  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  3243  00310A  0E63               	movlw	low STR_9
  3244  00310C  6FE0               	movwf	sprintf@fmt& (0+255),b
  3245  00310E  0E10               	movlw	high STR_9
  3246  003110  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  3247  003112  EC07  F020         	call	_sprintf	;wreg free
  3248  003116                     l7024:
  3249                           
  3250                           ;Cooker.c: 203:     lcd_gotoxy(1, 1);
  3251  003116  0E01               	movlw	1
  3252  003118  6E11               	movwf	lcd_gotoxy@y,c
  3253  00311A  0E01               	movlw	1
  3254  00311C  ECB2  F020         	call	_lcd_gotoxy
  3255                           
  3256                           ;Cooker.c: 204:     sprintf(LCD, "Time: %.2d:%.2d:%.2d", hours, min, sec);
  3257  003120  0E4A               	movlw	low display@LCD
  3258  003122  0100               	movlb	0	; () banked
  3259  003124  6FDE               	movwf	sprintf@s& (0+255),b
  3260  003126  0E01               	movlw	high display@LCD
  3261  003128  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  3262  00312A  0E01               	movlw	low STR_10
  3263  00312C  6FE0               	movwf	sprintf@fmt& (0+255),b
  3264  00312E  0E10               	movlw	high STR_10
  3265  003130  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  3266  003132  C076  F0E2         	movff	_hours,?_sprintf+4
  3267  003136  C077  F0E3         	movff	_hours+1,?_sprintf+5
  3268  00313A  C074  F0E4         	movff	_min,?_sprintf+6
  3269  00313E  C075  F0E5         	movff	_min+1,?_sprintf+7
  3270  003142  C072  F0E6         	movff	_sec,?_sprintf+8
  3271  003146  C073  F0E7         	movff	_sec+1,?_sprintf+9
  3272  00314A  EC07  F020         	call	_sprintf	;wreg free
  3273                           
  3274                           ;Cooker.c: 205:     lcd_puts(LCD);
  3275  00314E  0E4A               	movlw	low display@LCD
  3276  003150  6E19               	movwf	lcd_puts@s,c
  3277  003152  0E01               	movlw	high display@LCD
  3278  003154  6E1A               	movwf	lcd_puts@s+1,c
  3279  003156  ECD1  F022         	call	_lcd_puts	;wreg free
  3280                           
  3281                           ;Cooker.c: 208:     lcd_gotoxy(1, 2);
  3282  00315A  0E02               	movlw	2
  3283  00315C  6E11               	movwf	lcd_gotoxy@y,c
  3284  00315E  0E01               	movlw	1
  3285  003160  ECB2  F020         	call	_lcd_gotoxy
  3286                           
  3287                           ;Cooker.c: 209:     sprintf(LCD, "CT:%5.1fC  ", Temp);
  3288  003164  0E4A               	movlw	low display@LCD
  3289  003166  0100               	movlb	0	; () banked
  3290  003168  6FDE               	movwf	sprintf@s& (0+255),b
  3291  00316A  0E01               	movlw	high display@LCD
  3292  00316C  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  3293  00316E  0E4C               	movlw	low STR_11
  3294  003170  6FE0               	movwf	sprintf@fmt& (0+255),b
  3295  003172  0E10               	movlw	high STR_11
  3296  003174  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  3297  003176  C196  F0E2         	movff	_Temp,?_sprintf+4
  3298  00317A  C197  F0E3         	movff	_Temp+1,?_sprintf+5
  3299  00317E  C198  F0E4         	movff	_Temp+2,?_sprintf+6
  3300  003182  C199  F0E5         	movff	_Temp+3,?_sprintf+7
  3301  003186  EC07  F020         	call	_sprintf	;wreg free
  3302                           
  3303                           ;Cooker.c: 210:     lcd_puts(LCD);
  3304  00318A  0E4A               	movlw	low display@LCD
  3305  00318C  6E19               	movwf	lcd_puts@s,c
  3306  00318E  0E01               	movlw	high display@LCD
  3307  003190  6E1A               	movwf	lcd_puts@s+1,c
  3308  003192  ECD1  F022         	call	_lcd_puts	;wreg free
  3309                           
  3310                           ;Cooker.c: 212:     lcd_gotoxy(11, 2);
  3311  003196  0E02               	movlw	2
  3312  003198  6E11               	movwf	lcd_gotoxy@y,c
  3313  00319A  0E0B               	movlw	11
  3314  00319C  ECB2  F020         	call	_lcd_gotoxy
  3315                           
  3316                           ;Cooker.c: 213:     lcd_puts(CK);
  3317  0031A0  0E90               	movlw	low display@CK
  3318  0031A2  6E19               	movwf	lcd_puts@s,c
  3319  0031A4  0E01               	movlw	high display@CK
  3320  0031A6  6E1A               	movwf	lcd_puts@s+1,c
  3321  0031A8  ECD1  F022         	call	_lcd_puts	;wreg free
  3322                           
  3323                           ;Cooker.c: 215:     lcd_gotoxy(1, 3);
  3324  0031AC  0E03               	movlw	3
  3325  0031AE  6E11               	movwf	lcd_gotoxy@y,c
  3326  0031B0  0E01               	movlw	1
  3327  0031B2  ECB2  F020         	call	_lcd_gotoxy
  3328                           
  3329                           ;Cooker.c: 216:     sprintf(LCD, "SP:%5.1fC  ", SP);
  3330  0031B6  0E4A               	movlw	low display@LCD
  3331  0031B8  0100               	movlb	0	; () banked
  3332  0031BA  6FDE               	movwf	sprintf@s& (0+255),b
  3333  0031BC  0E01               	movlw	high display@LCD
  3334  0031BE  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  3335  0031C0  0E40               	movlw	low STR_12
  3336  0031C2  6FE0               	movwf	sprintf@fmt& (0+255),b
  3337  0031C4  0E10               	movlw	high STR_12
  3338  0031C6  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  3339  0031C8  C19A  F0E2         	movff	_SP,?_sprintf+4
  3340  0031CC  C19B  F0E3         	movff	_SP+1,?_sprintf+5
  3341  0031D0  C19C  F0E4         	movff	_SP+2,?_sprintf+6
  3342  0031D4  C19D  F0E5         	movff	_SP+3,?_sprintf+7
  3343  0031D8  EC07  F020         	call	_sprintf	;wreg free
  3344                           
  3345                           ;Cooker.c: 217:     lcd_puts(LCD);
  3346  0031DC  0E4A               	movlw	low display@LCD
  3347  0031DE  6E19               	movwf	lcd_puts@s,c
  3348  0031E0  0E01               	movlw	high display@LCD
  3349  0031E2  6E1A               	movwf	lcd_puts@s+1,c
  3350  0031E4  ECD1  F022         	call	_lcd_puts	;wreg free
  3351                           
  3352                           ;Cooker.c: 219:     lcd_gotoxy(11, 3);
  3353  0031E8  0E03               	movlw	3
  3354  0031EA  6E11               	movwf	lcd_gotoxy@y,c
  3355  0031EC  0E0B               	movlw	11
  3356  0031EE  ECB2  F020         	call	_lcd_gotoxy
  3357                           
  3358                           ;Cooker.c: 220:     lcd_puts(HT);
  3359  0031F2  0E8A               	movlw	low display@HT
  3360  0031F4  6E19               	movwf	lcd_puts@s,c
  3361  0031F6  0E01               	movlw	high display@HT
  3362  0031F8  6E1A               	movwf	lcd_puts@s+1,c
  3363  0031FA  ECD1  F022         	call	_lcd_puts	;wreg free
  3364                           
  3365                           ;Cooker.c: 223:     lcd_gotoxy(1, 4);
  3366  0031FE  0E04               	movlw	4
  3367  003200  6E11               	movwf	lcd_gotoxy@y,c
  3368  003202  0E01               	movlw	1
  3369  003204  ECB2  F020         	call	_lcd_gotoxy
  3370                           
  3371                           ;Cooker.c: 224:     sprintf(LCD, "MD:");
  3372  003208  0E4A               	movlw	low display@LCD
  3373  00320A  0100               	movlb	0	; () banked
  3374  00320C  6FDE               	movwf	sprintf@s& (0+255),b
  3375  00320E  0E01               	movlw	high display@LCD
  3376  003210  6FDF               	movwf	(sprintf@s+1)& (0+255),b
  3377  003212  0E8F               	movlw	low STR_13
  3378  003214  6FE0               	movwf	sprintf@fmt& (0+255),b
  3379  003216  0E10               	movlw	high STR_13
  3380  003218  6FE1               	movwf	(sprintf@fmt+1)& (0+255),b
  3381  00321A  EC07  F020         	call	_sprintf	;wreg free
  3382                           
  3383                           ;Cooker.c: 225:     lcd_puts(LCD);
  3384  00321E  0E4A               	movlw	low display@LCD
  3385  003220  6E19               	movwf	lcd_puts@s,c
  3386  003222  0E01               	movlw	high display@LCD
  3387  003224  6E1A               	movwf	lcd_puts@s+1,c
  3388  003226  ECD1  F022         	call	_lcd_puts	;wreg free
  3389                           
  3390                           ;Cooker.c: 227:     lcd_gotoxy(4, 4);
  3391  00322A  0E04               	movlw	4
  3392  00322C  6E11               	movwf	lcd_gotoxy@y,c
  3393  00322E  0E04               	movlw	4
  3394  003230  ECB2  F020         	call	_lcd_gotoxy
  3395                           
  3396                           ;Cooker.c: 228:     lcd_puts(LCDP);
  3397  003234  0E0A               	movlw	low display@LCDP
  3398  003236  6E19               	movwf	lcd_puts@s,c
  3399  003238  0E01               	movlw	high display@LCDP
  3400  00323A  6E1A               	movwf	lcd_puts@s+1,c
  3401  00323C  ECD1  F022         	call	_lcd_puts	;wreg free
  3402  003240  0012               	return		;funcret
  3403  003242                     __end_of_display:
  3404                           	opt callstack 0
  3405                           
  3406 ;; *************** function _sprintf *****************
  3407 ;; Defined at:
  3408 ;;		line 9 in file "D:\MPLAB\pic\sources\c99\common\nf_sprintf.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  s               2   94[BANK0 ] PTR unsigned char 
  3411 ;;		 -> display@LCD(64), display@CK(6), display@HT(6), display@LCDP(64), 
  3412 ;;  fmt             2   96[BANK0 ] PTR const unsigned char 
  3413 ;;		 -> STR_13(4), STR_12(12), STR_11(12), STR_10(21), 
  3414 ;;		 -> STR_9(7), STR_8(7), STR_7(7), STR_6(7), 
  3415 ;;		 -> STR_5(11), STR_4(12), STR_3(14), STR_2(16), 
  3416 ;;		 -> STR_1(14), 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  f               6    4[BANK1 ] struct _IO_FILE
  3419 ;;  ap              2    2[BANK1 ] PTR void [1]
  3420 ;;		 -> ?_sprintf(2), 
  3421 ;;  ret             2    0        int 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  2   94[BANK0 ] int 
  3424 ;; Registers used:
  3425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3431 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3432 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;      Totals:         0      10      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3435 ;;Total ram usage:       20 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; Hardware stack levels required when called:   11
  3438 ;; This function calls:
  3439 ;;		_vfprintf
  3440 ;; This function is called by:
  3441 ;;		_display
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text8
  3446  00400E                     __ptext8:
  3447                           	opt callstack 0
  3448  00400E                     _sprintf:
  3449                           	opt callstack 18
  3450                           
  3451                           ;incstack = 0
  3452  00400E  0EE2               	movlw	low (?_sprintf+4)
  3453  004010  0101               	movlb	1	; () banked
  3454  004012  6F02               	movwf	sprintf@ap& (0+255),b
  3455  004014  0E00               	movlw	high (?_sprintf+4)
  3456  004016  6F03               	movwf	(sprintf@ap+1)& (0+255),b
  3457  004018  C0DE  F104         	movff	sprintf@s,sprintf@f
  3458  00401C  C0DF  F105         	movff	sprintf@s+1,sprintf@f+1
  3459                           
  3460                           ; BSR set to: 1
  3461  004020  0E00               	movlw	0
  3462  004022  6F07               	movwf	(sprintf@f+3)& (0+255),b
  3463  004024  0E00               	movlw	0
  3464  004026  6F06               	movwf	(sprintf@f+2)& (0+255),b
  3465                           
  3466                           ; BSR set to: 1
  3467  004028  0E00               	movlw	0
  3468  00402A  6F09               	movwf	(sprintf@f+5)& (0+255),b
  3469  00402C  0E00               	movlw	0
  3470  00402E  6F08               	movwf	(sprintf@f+4)& (0+255),b
  3471                           
  3472                           ; BSR set to: 1
  3473  004030  0E04               	movlw	low sprintf@f
  3474  004032  0100               	movlb	0	; () banked
  3475  004034  6FD8               	movwf	vfprintf@fp& (0+255),b
  3476  004036  0E01               	movlw	high sprintf@f
  3477  004038  6FD9               	movwf	(vfprintf@fp+1)& (0+255),b
  3478  00403A  C0E0  F0DA         	movff	sprintf@fmt,vfprintf@fmt
  3479  00403E  C0E1  F0DB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3480  004042  0E02               	movlw	low sprintf@ap
  3481  004044  6FDC               	movwf	vfprintf@ap& (0+255),b
  3482  004046  0E01               	movlw	high sprintf@ap
  3483  004048  6FDD               	movwf	(vfprintf@ap+1)& (0+255),b
  3484  00404A  EC34  F020         	call	_vfprintf	;wreg free
  3485  00404E  0101               	movlb	1	; () banked
  3486  004050  5106               	movf	(sprintf@f+2)& (0+255),w,b
  3487  004052  0100               	movlb	0	; () banked
  3488  004054  25DE               	addwf	sprintf@s& (0+255),w,b
  3489  004056  6ED9               	movwf	fsr2l,c
  3490  004058  0101               	movlb	1	; () banked
  3491  00405A  5107               	movf	(sprintf@f+3)& (0+255),w,b
  3492  00405C  0100               	movlb	0	; () banked
  3493  00405E  21DF               	addwfc	(sprintf@s+1)& (0+255),w,b
  3494  004060  6EDA               	movwf	fsr2h,c
  3495  004062  0E00               	movlw	0
  3496  004064  6EDF               	movwf	indf2,c
  3497                           
  3498                           ; BSR set to: 0
  3499  004066  0012               	return		;funcret
  3500  004068                     __end_of_sprintf:
  3501                           	opt callstack 0
  3502                           
  3503 ;; *************** function _vfprintf *****************
  3504 ;; Defined at:
  3505 ;;		line 1368 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  fp              2   88[BANK0 ] PTR struct _IO_FILE
  3508 ;;		 -> sprintf@f(6), 
  3509 ;;  fmt             2   90[BANK0 ] PTR const unsigned char 
  3510 ;;		 -> STR_13(4), STR_12(12), STR_11(12), STR_10(21), 
  3511 ;;		 -> STR_9(7), STR_8(7), STR_7(7), STR_6(7), 
  3512 ;;		 -> STR_5(11), STR_4(12), STR_3(14), STR_2(16), 
  3513 ;;		 -> STR_1(14), 
  3514 ;;  ap              2   92[BANK0 ] PTR PTR void 
  3515 ;;		 -> sprintf@ap(2), 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  cfmt            2  111[COMRAM] PTR unsigned char 
  3518 ;;		 -> STR_13(4), STR_12(12), STR_11(12), STR_10(21), 
  3519 ;;		 -> STR_9(7), STR_8(7), STR_7(7), STR_6(7), 
  3520 ;;		 -> STR_5(11), STR_4(12), STR_3(14), STR_2(16), 
  3521 ;;		 -> STR_1(14), 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  2   88[BANK0 ] int 
  3524 ;; Registers used:
  3525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3531 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;Total ram usage:        8 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:   10
  3538 ;; This function calls:
  3539 ;;		_vfpfcnvrt
  3540 ;; This function is called by:
  3541 ;;		_sprintf
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           	psect	text9
  3546  004068                     __ptext9:
  3547                           	opt callstack 0
  3548  004068                     _vfprintf:
  3549                           	opt callstack 18
  3550                           
  3551                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FILE *fp, const char *fmt,
      +                           va_list ap);D:\MPLAB\pic\sources\c99\common\doprnt.c: 1369: {;D:\MPLAB\pic\sources\c99\
      +                          common\doprnt.c: 1371:     char *cfmt;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1373:  
      +                             cfmt = (char *)fmt;
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;incstack = 0
  3555  004068  C0DA  F070         	movff	vfprintf@fmt,vfprintf@cfmt
  3556  00406C  C0DB  F071         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3557                           
  3558                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  3559  004070  0E00               	movlw	0
  3560  004072  0100               	movlb	0	; () banked
  3561  004074  6FF3               	movwf	(_nout+1)& (0+255),b
  3562  004076  0E00               	movlw	0
  3563  004078  6FF2               	movwf	_nout& (0+255),b
  3564                           
  3565                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt) {
  3566  00407A  D013               	goto	l6982
  3567  00407C                     l6980:
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1376:         nout += vfpfcnvrt(fp, &cfmt, ap
      +                          );
  3571  00407C  C0D8  F0B8         	movff	vfprintf@fp,vfpfcnvrt@fp
  3572  004080  C0D9  F0B9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3573  004084  0E70               	movlw	low vfprintf@cfmt
  3574  004086  6FBA               	movwf	vfpfcnvrt@fmt& (0+255),b
  3575  004088  0E00               	movlw	high vfprintf@cfmt
  3576  00408A  6FBB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3577  00408C  C0DC  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  3578  004090  C0DD  F0BD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3579  004094  ECCF  F00F         	call	_vfpfcnvrt	;wreg free
  3580  004098  0100               	movlb	0	; () banked
  3581  00409A  51B8               	movf	?_vfpfcnvrt& (0+255),w,b
  3582  00409C  27F2               	addwf	_nout& (0+255),f,b
  3583  00409E  51B9               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3584  0040A0  23F3               	addwfc	(_nout+1)& (0+255),f,b
  3585  0040A2                     l6982:
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt) {
  3589  0040A2  C070  FFF6         	movff	vfprintf@cfmt,tblptrl
  3590  0040A6  C071  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3591  0040AA                     	if	0	;tblptru may be non-zero
  3592  0040AA                     	endif
  3593  0040AA                     	if	0	;tblptru may be non-zero
  3594  0040AA                     	endif
  3595  0040AA  0008               	tblrd		*
  3596  0040AC  50F5               	movf	tablat,w,c
  3597  0040AE  0900               	iorlw	0
  3598  0040B0  A4D8               	btfss	status,2,c
  3599  0040B2  D7E4               	goto	l6980
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  3603  0040B4  C0F2  F0D8         	movff	_nout,?_vfprintf
  3604  0040B8  C0F3  F0D9         	movff	_nout+1,?_vfprintf+1
  3605                           
  3606                           ; BSR set to: 0
  3607  0040BC  0012               	return		;funcret
  3608  0040BE                     __end_of_vfprintf:
  3609                           	opt callstack 0
  3610                           
  3611 ;; *************** function _vfpfcnvrt *****************
  3612 ;; Defined at:
  3613 ;;		line 670 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  3616 ;;		 -> sprintf@f(6), 
  3617 ;;  fmt             2   58[BANK0 ] PTR PTR unsigned char 
  3618 ;;		 -> vfprintf@cfmt(2), 
  3619 ;;  ap              2   60[BANK0 ] PTR PTR void 
  3620 ;;		 -> sprintf@ap(2), 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  ll              8   66[BANK0 ] long long 
  3623 ;;  llu             8    0        unsigned long long 
  3624 ;;  f               4   80[BANK0 ] unsigned long long 
  3625 ;;  ct              3   84[BANK0 ] unsigned char [3]
  3626 ;;  vp              3    0        PTR void 
  3627 ;;  cp              3    0        PTR unsigned char 
  3628 ;;  i               2    0        int 
  3629 ;;  done            2    0        int 
  3630 ;;  c               1   87[BANK0 ] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  2   56[BANK0 ] int 
  3633 ;; Registers used:
  3634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3640 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;Total ram usage:       32 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    9
  3647 ;; This function calls:
  3648 ;;		_atoi
  3649 ;;		_dtoa
  3650 ;;		_efgtoa
  3651 ;;		_fputc
  3652 ;;		_isdigit
  3653 ;;		_isupper
  3654 ;;		_strncmp
  3655 ;;		_tolower
  3656 ;; This function is called by:
  3657 ;;		_vfprintf
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text10
  3662  001F9E                     __ptext10:
  3663                           	opt callstack 0
  3664  001F9E                     _vfpfcnvrt:
  3665                           	opt callstack 18
  3666                           
  3667                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 670: static int vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLAB\pic\sources\c99\common\doprnt.c: 671: {;D:\MPLAB\pic\sources\c9
      +                          9\common\doprnt.c: 672:     char c, *cp, ct[3];;D:\MPLAB\pic\sources\c99\common\doprnt.c
      +                          : 673:     int done, i;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 674:     long long ll;
      +                          ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;;D:\MPLAB\pic
      +                          \sources\c99\common\doprnt.c: 676:     long double f;;D:\MPLAB\pic\sources\c99\common\do
      +                          prnt.c: 677:     void *vp;
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;incstack = 0
  3671  001F9E  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3672  001FA2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3673  001FA6  CFDE FFF6          	movff	postinc2,tblptrl
  3674  001FAA  CFDD FFF7          	movff	postdec2,tblptrh
  3675  001FAE                     	if	0	;tblptru may be non-zero
  3676  001FAE                     	endif
  3677  001FAE                     	if	0	;tblptru may be non-zero
  3678  001FAE                     	endif
  3679  001FAE  0008               	tblrd		*
  3680  001FB0  50F5               	movf	tablat,w,c
  3681  001FB2  0A25               	xorlw	37
  3682  001FB4  A4D8               	btfss	status,2,c
  3683  001FB6  D275               	goto	l6968
  3684                           
  3685                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  3686  001FB8  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3687  001FBC  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3688  001FC0  2ADE               	incf	postinc2,f,c
  3689  001FC2  0E00               	movlw	0
  3690  001FC4  22DD               	addwfc	postdec2,f,c
  3691                           
  3692                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 683:         flags = width = 0;
  3693  001FC6  0E00               	movlw	0
  3694  001FC8  0100               	movlb	0	; () banked
  3695  001FCA  6FF5               	movwf	(_width+1)& (0+255),b
  3696  001FCC  0E00               	movlw	0
  3697  001FCE  6FF4               	movwf	_width& (0+255),b
  3698  001FD0  C0F4  F0F8         	movff	_width,_flags
  3699  001FD4  C0F5  F0F9         	movff	_width+1,_flags+1
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 684:         prec = -1;
  3703  001FD8  69F6               	setf	_prec& (0+255),b
  3704  001FDA  69F7               	setf	(_prec+1)& (0+255),b
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 723:         if ((*fmt)[0] == '*') {
  3708  001FDC  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3709  001FE0  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3710  001FE4  CFDE FFF6          	movff	postinc2,tblptrl
  3711  001FE8  CFDD FFF7          	movff	postdec2,tblptrh
  3712  001FEC                     	if	0	;tblptru may be non-zero
  3713  001FEC                     	endif
  3714  001FEC                     	if	0	;tblptru may be non-zero
  3715  001FEC                     	endif
  3716  001FEC  0008               	tblrd		*
  3717  001FEE  50F5               	movf	tablat,w,c
  3718  001FF0  0A2A               	xorlw	42
  3719  001FF2  A4D8               	btfss	status,2,c
  3720  001FF4  D023               	goto	l6874
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 724:             ++*fmt;
  3724  001FF6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3725  001FFA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3726  001FFE  2ADE               	incf	postinc2,f,c
  3727  002000  0E00               	movlw	0
  3728  002002  22DD               	addwfc	postdec2,f,c
  3729                           
  3730                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 725:             width = (*(int *)__va_arg(*(
      +                          int **)ap, (int)0));
  3731  002004  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3732  002008  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3733  00200C  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  3734  002010  0E02               	movlw	2
  3735  002012  26DE               	addwf	postinc2,f,c
  3736  002014  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  3737  002018  0E00               	movlw	0
  3738  00201A  22DD               	addwfc	postdec2,f,c
  3739  00201C  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3740  002020  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3741  002024  CFDE F0F4          	movff	postinc2,_width
  3742  002028  CFDD F0F5          	movff	postdec2,_width+1
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 726:             if (width < 0) {
  3746  00202C  AFF5               	btfss	(_width+1)& (0+255),7,b
  3747  00202E  D040               	goto	u9180
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 727:                 flags |= (1 << 0);
  3751  002030  81F8               	bsf	_flags& (0+255),0,b
  3752                           
  3753                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 728:                 width = -width;
  3754  002032  6DF4               	negf	_width& (0+255),b
  3755  002034  1FF5               	comf	(_width+1)& (0+255),f,b
  3756  002036  B0D8               	btfsc	status,0,c
  3757  002038  2BF5               	incf	(_width+1)& (0+255),f,b
  3758  00203A  D03A               	goto	u9180
  3759  00203C                     l6874:
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 731:             width = atoi(*fmt);
  3763  00203C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3764  002040  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3765  002044  CFDE F00E          	movff	postinc2,atoi@s
  3766  002048  CFDD F00F          	movff	postdec2,atoi@s+1
  3767  00204C  EC40  F01B         	call	_atoi	;wreg free
  3768  002050  C00E  F0F4         	movff	?_atoi,_width
  3769  002054  C00F  F0F5         	movff	?_atoi+1,_width+1
  3770                           
  3771                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 732:             while ((0 ? isdigit((*fmt)[0
      +                          ]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3772  002058  D007               	goto	l6878
  3773  00205A                     l6876:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 733:                 ++*fmt;
  3777  00205A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3778  00205E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3779  002062  2ADE               	incf	postinc2,f,c
  3780  002064  0E00               	movlw	0
  3781  002066  22DD               	addwfc	postdec2,f,c
  3782  002068                     l6878:
  3783  002068  0ED0               	movlw	208
  3784  00206A  0100               	movlb	0	; () banked
  3785  00206C  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  3786  00206E  0EFF               	movlw	255
  3787  002070  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3788  002072  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3789  002076  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3790  00207A  CFDE FFF6          	movff	postinc2,tblptrl
  3791  00207E  CFDD FFF7          	movff	postdec2,tblptrh
  3792  002082                     	if	0	;tblptru may be non-zero
  3793  002082                     	endif
  3794  002082                     	if	0	;tblptru may be non-zero
  3795  002082                     	endif
  3796  002082  0008               	tblrd		*
  3797  002084  50F5               	movf	tablat,w,c
  3798  002086  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3799  002088  6BC1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3800  00208A  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  3801  00208C  27C0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3802  00208E  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3803  002090  23C1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3804  002092  51C1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3805  002094  E106               	bnz	u9160
  3806  002096  0E0A               	movlw	10
  3807  002098  5DC0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3808  00209A  B0D8               	btfsc	status,0,c
  3809  00209C  D002               	goto	u9160
  3810  00209E  0E01               	movlw	1
  3811  0020A0  D001               	goto	u9170
  3812  0020A2                     u9160:
  3813  0020A2  0E00               	movlw	0
  3814  0020A4                     u9170:
  3815  0020A4  6FCA               	movwf	_vfpfcnvrt$943& (0+255),b
  3816  0020A6  6BCB               	clrf	(_vfpfcnvrt$943+1)& (0+255),b
  3817                           
  3818                           ; BSR set to: 0
  3819  0020A8  51CA               	movf	_vfpfcnvrt$943& (0+255),w,b
  3820  0020AA  11CB               	iorwf	(_vfpfcnvrt$943+1)& (0+255),w,b
  3821  0020AC  A4D8               	btfss	status,2,c
  3822  0020AE  D7D5               	goto	l6876
  3823  0020B0                     u9180:
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 740:         if ((*fmt)[0] == '.') {
  3827  0020B0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3828  0020B4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3829  0020B8  CFDE FFF6          	movff	postinc2,tblptrl
  3830  0020BC  CFDD FFF7          	movff	postdec2,tblptrh
  3831  0020C0                     	if	0	;tblptru may be non-zero
  3832  0020C0                     	endif
  3833  0020C0                     	if	0	;tblptru may be non-zero
  3834  0020C0                     	endif
  3835  0020C0  0008               	tblrd		*
  3836  0020C2  50F5               	movf	tablat,w,c
  3837  0020C4  0A2E               	xorlw	46
  3838  0020C6  A4D8               	btfss	status,2,c
  3839  0020C8  D06E               	goto	u9230
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 741:             prec = 0;
  3843  0020CA  0E00               	movlw	0
  3844  0020CC  6FF7               	movwf	(_prec+1)& (0+255),b
  3845  0020CE  0E00               	movlw	0
  3846  0020D0  6FF6               	movwf	_prec& (0+255),b
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 742:             ++*fmt;
  3850  0020D2  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3851  0020D6  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3852  0020DA  2ADE               	incf	postinc2,f,c
  3853  0020DC  0E00               	movlw	0
  3854  0020DE  22DD               	addwfc	postdec2,f,c
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 743:             if ((*fmt)[0] == '*') {
  3858  0020E0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3859  0020E4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3860  0020E8  CFDE FFF6          	movff	postinc2,tblptrl
  3861  0020EC  CFDD FFF7          	movff	postdec2,tblptrh
  3862  0020F0                     	if	0	;tblptru may be non-zero
  3863  0020F0                     	endif
  3864  0020F0                     	if	0	;tblptru may be non-zero
  3865  0020F0                     	endif
  3866  0020F0  0008               	tblrd		*
  3867  0020F2  50F5               	movf	tablat,w,c
  3868  0020F4  0A2A               	xorlw	42
  3869  0020F6  A4D8               	btfss	status,2,c
  3870  0020F8  D01C               	goto	l6894
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 744:                 ++*fmt;
  3874  0020FA  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3875  0020FE  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3876  002102  2ADE               	incf	postinc2,f,c
  3877  002104  0E00               	movlw	0
  3878  002106  22DD               	addwfc	postdec2,f,c
  3879                           
  3880                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 745:                 prec = (*(int *)__va_arg
      +                          (*(int **)ap, (int)0));
  3881  002108  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3882  00210C  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3883  002110  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  3884  002114  0E02               	movlw	2
  3885  002116  26DE               	addwf	postinc2,f,c
  3886  002118  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  3887  00211C  0E00               	movlw	0
  3888  00211E  22DD               	addwfc	postdec2,f,c
  3889  002120  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3890  002124  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3891  002128  CFDE F0F6          	movff	postinc2,_prec
  3892  00212C  CFDD F0F7          	movff	postdec2,_prec+1
  3893                           
  3894                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 746:             } else {
  3895  002130  D03A               	goto	u9230
  3896  002132                     l6894:
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 747:                 prec = atoi(*fmt);
  3900  002132  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3901  002136  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3902  00213A  CFDE F00E          	movff	postinc2,atoi@s
  3903  00213E  CFDD F00F          	movff	postdec2,atoi@s+1
  3904  002142  EC40  F01B         	call	_atoi	;wreg free
  3905  002146  C00E  F0F6         	movff	?_atoi,_prec
  3906  00214A  C00F  F0F7         	movff	?_atoi+1,_prec+1
  3907                           
  3908                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 748:                 while ((0 ? isdigit((*fm
      +                          t)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3909  00214E  D007               	goto	l6898
  3910  002150                     l6896:
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 749:                     ++*fmt;
  3914  002150  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3915  002154  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3916  002158  2ADE               	incf	postinc2,f,c
  3917  00215A  0E00               	movlw	0
  3918  00215C  22DD               	addwfc	postdec2,f,c
  3919  00215E                     l6898:
  3920  00215E  0ED0               	movlw	208
  3921  002160  0100               	movlb	0	; () banked
  3922  002162  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  3923  002164  0EFF               	movlw	255
  3924  002166  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3925  002168  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3926  00216C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3927  002170  CFDE FFF6          	movff	postinc2,tblptrl
  3928  002174  CFDD FFF7          	movff	postdec2,tblptrh
  3929  002178                     	if	0	;tblptru may be non-zero
  3930  002178                     	endif
  3931  002178                     	if	0	;tblptru may be non-zero
  3932  002178                     	endif
  3933  002178  0008               	tblrd		*
  3934  00217A  50F5               	movf	tablat,w,c
  3935  00217C  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3936  00217E  6BC1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3937  002180  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  3938  002182  27C0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3939  002184  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3940  002186  23C1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3941  002188  51C1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3942  00218A  E106               	bnz	u9210
  3943  00218C  0E0A               	movlw	10
  3944  00218E  5DC0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3945  002190  B0D8               	btfsc	status,0,c
  3946  002192  D002               	goto	u9210
  3947  002194  0E01               	movlw	1
  3948  002196  D001               	goto	u9220
  3949  002198                     u9210:
  3950  002198  0E00               	movlw	0
  3951  00219A                     u9220:
  3952  00219A  6FCC               	movwf	_vfpfcnvrt$944& (0+255),b
  3953  00219C  6BCD               	clrf	(_vfpfcnvrt$944+1)& (0+255),b
  3954                           
  3955                           ; BSR set to: 0
  3956  00219E  51CC               	movf	_vfpfcnvrt$944& (0+255),w,b
  3957  0021A0  11CD               	iorwf	(_vfpfcnvrt$944+1)& (0+255),w,b
  3958  0021A2  A4D8               	btfss	status,2,c
  3959  0021A4  D7D5               	goto	l6896
  3960  0021A6                     u9230:
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 757:         ct[0] = tolower((int)(*fmt)[0]);
  3964  0021A6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3965  0021AA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3966  0021AE  CFDE FFF6          	movff	postinc2,tblptrl
  3967  0021B2  CFDD FFF7          	movff	postdec2,tblptrh
  3968  0021B6                     	if	0	;tblptru may be non-zero
  3969  0021B6                     	endif
  3970  0021B6                     	if	0	;tblptru may be non-zero
  3971  0021B6                     	endif
  3972  0021B6  0008               	tblrd		*
  3973  0021B8  50F5               	movf	tablat,w,c
  3974  0021BA  6E0D               	movwf	tolower@c,c
  3975  0021BC  6A0E               	clrf	tolower@c+1,c
  3976  0021BE  EC00  F021         	call	_tolower	;wreg free
  3977  0021C2  500D               	movf	?_tolower,w,c
  3978  0021C4  0100               	movlb	0	; () banked
  3979  0021C6  6FD4               	movwf	vfpfcnvrt@ct& (0+255),b
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 758:         if (ct[0]) {
  3983  0021C8  51D4               	movf	vfpfcnvrt@ct& (0+255),w,b
  3984  0021CA  B4D8               	btfsc	status,2,c
  3985  0021CC  D035               	goto	l6914
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 759:             ct[1] = tolower((int)(*fmt)[
      +                          1]);
  3989  0021CE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3990  0021D2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3991  0021D6  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  3992  0021DA  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  3993  0021DE  0E01               	movlw	1
  3994  0021E0  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  3995  0021E2  0E00               	movlw	0
  3996  0021E4  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3997  0021E6  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3998  0021EA  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3999  0021EE                     	if	0	;tblptru may be non-zero
  4000  0021EE                     	endif
  4001  0021EE                     	if	0	;tblptru may be non-zero
  4002  0021EE                     	endif
  4003  0021EE  0008               	tblrd		*
  4004  0021F0  50F5               	movf	tablat,w,c
  4005  0021F2  6E0D               	movwf	tolower@c,c
  4006  0021F4  6A0E               	clrf	tolower@c+1,c
  4007  0021F6  EC00  F021         	call	_tolower	;wreg free
  4008  0021FA  500D               	movf	?_tolower,w,c
  4009  0021FC  0100               	movlb	0	; () banked
  4010  0021FE  6FD5               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 760:             if (ct[1]) {
  4014  002200  51D5               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4015  002202  B4D8               	btfsc	status,2,c
  4016  002204  D019               	goto	l6914
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 761:                 ct[2] = tolower((int)(*f
      +                          mt)[2]);
  4020  002206  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4021  00220A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4022  00220E  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  4023  002212  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  4024  002216  0E02               	movlw	2
  4025  002218  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  4026  00221A  0E00               	movlw	0
  4027  00221C  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4028  00221E  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4029  002222  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4030  002226                     	if	0	;tblptru may be non-zero
  4031  002226                     	endif
  4032  002226                     	if	0	;tblptru may be non-zero
  4033  002226                     	endif
  4034  002226  0008               	tblrd		*
  4035  002228  50F5               	movf	tablat,w,c
  4036  00222A  6E0D               	movwf	tolower@c,c
  4037  00222C  6A0E               	clrf	tolower@c+1,c
  4038  00222E  EC00  F021         	call	_tolower	;wreg free
  4039  002232  500D               	movf	?_tolower,w,c
  4040  002234  0100               	movlb	0	; () banked
  4041  002236  6FD6               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4042  002238                     l6914:
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 825:         if ((*fmt[0] == 'd') || (*fmt[0]
      +                           == 'i')) {
  4046  002238  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4047  00223C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4048  002240  CFDE FFF6          	movff	postinc2,tblptrl
  4049  002244  CFDD FFF7          	movff	postdec2,tblptrh
  4050  002248                     	if	0	;tblptru may be non-zero
  4051  002248                     	endif
  4052  002248                     	if	0	;tblptru may be non-zero
  4053  002248                     	endif
  4054  002248  0008               	tblrd		*
  4055  00224A  50F5               	movf	tablat,w,c
  4056  00224C  0A64               	xorlw	100
  4057  00224E  B4D8               	btfsc	status,2,c
  4058  002250  D00D               	goto	u9270
  4059                           
  4060                           ; BSR set to: 0
  4061  002252  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4062  002256  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4063  00225A  CFDE FFF6          	movff	postinc2,tblptrl
  4064  00225E  CFDD FFF7          	movff	postdec2,tblptrh
  4065  002262                     	if	0	;tblptru may be non-zero
  4066  002262                     	endif
  4067  002262                     	if	0	;tblptru may be non-zero
  4068  002262                     	endif
  4069  002262  0008               	tblrd		*
  4070  002264  50F5               	movf	tablat,w,c
  4071  002266  0A69               	xorlw	105
  4072  002268  A4D8               	btfss	status,2,c
  4073  00226A  D03F               	goto	l6924
  4074  00226C                     u9270:
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 827:             ++*fmt;
  4078  00226C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4079  002270  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4080  002274  2ADE               	incf	postinc2,f,c
  4081  002276  0E00               	movlw	0
  4082  002278  22DD               	addwfc	postdec2,f,c
  4083                           
  4084                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 828:             ll = (long long)(*(int *)__v
      +                          a_arg(*(int **)ap, (int)0));
  4085  00227A  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4086  00227E  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4087  002282  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  4088  002286  0E02               	movlw	2
  4089  002288  26DE               	addwf	postinc2,f,c
  4090  00228A  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  4091  00228E  0E00               	movlw	0
  4092  002290  22DD               	addwfc	postdec2,f,c
  4093  002292  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4094  002296  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4095  00229A  CFDE F0C2          	movff	postinc2,vfpfcnvrt@ll
  4096  00229E  CFDD F0C3          	movff	postdec2,vfpfcnvrt@ll+1
  4097  0022A2  0E00               	movlw	0
  4098  0022A4  BFC3               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4099  0022A6  0EFF               	movlw	-1
  4100  0022A8  6FC4               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4101  0022AA  6FC5               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4102  0022AC  6FC6               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4103  0022AE  6FC7               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4104  0022B0  6FC8               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4105  0022B2  6FC9               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 830:             return dtoa(fp, ll);
  4109  0022B4  C0B8  F022         	movff	vfpfcnvrt@fp,dtoa@fp
  4110  0022B8  C0B9  F023         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4111  0022BC  C0C2  F024         	movff	vfpfcnvrt@ll,dtoa@d
  4112  0022C0  C0C3  F025         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4113  0022C4  C0C4  F026         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4114  0022C8  C0C5  F027         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4115  0022CC  C0C6  F028         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4116  0022D0  C0C7  F029         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4117  0022D4  C0C8  F02A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4118  0022D8  C0C9  F02B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4119  0022DC  ECDE  F016         	call	_dtoa	;wreg free
  4120  0022E0  C022  F0B8         	movff	?_dtoa,?_vfpfcnvrt
  4121  0022E4  C023  F0B9         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4122  0022E8  0012               	return	
  4123  0022EA                     l6924:
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 920:         if (ct[0] == 'f') {
  4127  0022EA  0E66               	movlw	102
  4128  0022EC  19D4               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4129  0022EE  A4D8               	btfss	status,2,c
  4130  0022F0  D03F               	goto	l6936
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 922:             c = (*fmt)[0];
  4134  0022F2  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4135  0022F6  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4136  0022FA  CFDE FFF6          	movff	postinc2,tblptrl
  4137  0022FE  CFDD FFF7          	movff	postdec2,tblptrh
  4138  002302                     	if	0	;tblptru may be non-zero
  4139  002302                     	endif
  4140  002302                     	if	0	;tblptru may be non-zero
  4141  002302                     	endif
  4142  002302  0008               	tblrd		*
  4143  002304  CFF5 F0D7          	movff	tablat,vfpfcnvrt@c
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 923:             ++*fmt;
  4147  002308  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4148  00230C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4149  002310  2ADE               	incf	postinc2,f,c
  4150  002312  0E00               	movlw	0
  4151  002314  22DD               	addwfc	postdec2,f,c
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 924:             f = (long double)(*(double *
      +                          )__va_arg(*(double **)ap, (double)0));
  4155  002316  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4156  00231A  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4157  00231E  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  4158  002322  0E04               	movlw	4
  4159  002324  26DE               	addwf	postinc2,f,c
  4160  002326  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  4161  00232A  0E00               	movlw	0
  4162  00232C  22DD               	addwfc	postdec2,f,c
  4163  00232E  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4164  002332  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4165  002336  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f
  4166  00233A  CFDE F0D1          	movff	postinc2,vfpfcnvrt@f+1
  4167  00233E  CFDE F0D2          	movff	postinc2,vfpfcnvrt@f+2
  4168  002342  CFDE F0D3          	movff	postinc2,vfpfcnvrt@f+3
  4169  002346                     l6932:
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 926:             return efgtoa(fp, f, c);
  4173  002346  C0B8  F064         	movff	vfpfcnvrt@fp,efgtoa@fp
  4174  00234A  C0B9  F065         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4175  00234E  C0D0  F066         	movff	vfpfcnvrt@f,efgtoa@f
  4176  002352  C0D1  F067         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4177  002356  C0D2  F068         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4178  00235A  C0D3  F069         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4179  00235E  C0D7  F06A         	movff	vfpfcnvrt@c,efgtoa@c
  4180  002362  EC4C  F008         	call	_efgtoa	;wreg free
  4181  002366  C064  F0B8         	movff	?_efgtoa,?_vfpfcnvrt
  4182  00236A  C065  F0B9         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4183  00236E  0012               	return	
  4184  002370                     l6936:
  4185                           
  4186                           ; BSR set to: 0
  4187                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 928:         if (!strncmp(ct, "lf", ((sizeof(
      +                          "lf")/sizeof("lf"[0]))-1))) {
  4188  002370  0ED4               	movlw	low vfpfcnvrt@ct
  4189  002372  6E07               	movwf	strncmp@_l,c
  4190  002374  0E00               	movlw	high vfpfcnvrt@ct
  4191  002376  6E08               	movwf	strncmp@_l+1,c
  4192  002378  0E93               	movlw	low STR_22
  4193  00237A  6E09               	movwf	strncmp@_r,c
  4194  00237C  0E10               	movlw	high STR_22
  4195  00237E  6E0A               	movwf	strncmp@_r+1,c
  4196  002380  0E00               	movlw	0
  4197  002382  6E0C               	movwf	strncmp@n+1,c
  4198  002384  0E02               	movlw	2
  4199  002386  6E0B               	movwf	strncmp@n,c
  4200  002388  EC9D  F01D         	call	_strncmp	;wreg free
  4201  00238C  5007               	movf	?_strncmp,w,c
  4202  00238E  1008               	iorwf	?_strncmp+1,w,c
  4203  002390  A4D8               	btfss	status,2,c
  4204  002392  D056               	goto	l6952
  4205                           
  4206                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 931:             if ((0 ? isupper((int)(*fmt)
      +                          [0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4207  002394  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4208  002398  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4209  00239C  CFDE F0BE          	movff	postinc2,??_vfpfcnvrt
  4210  0023A0  CFDD F0BF          	movff	postdec2,??_vfpfcnvrt+1
  4211  0023A4  0E01               	movlw	1
  4212  0023A6  0100               	movlb	0	; () banked
  4213  0023A8  27BE               	addwf	??_vfpfcnvrt& (0+255),f,b
  4214  0023AA  0E00               	movlw	0
  4215  0023AC  23BF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4216  0023AE  C0BE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4217  0023B2  C0BF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4218  0023B6                     	if	0	;tblptru may be non-zero
  4219  0023B6                     	endif
  4220  0023B6                     	if	0	;tblptru may be non-zero
  4221  0023B6                     	endif
  4222  0023B6  0008               	tblrd		*
  4223  0023B8  CFF5 F0D7          	movff	tablat,vfpfcnvrt@c
  4224  0023BC  0EBF               	movlw	191
  4225  0023BE  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  4226  0023C0  0EFF               	movlw	255
  4227  0023C2  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4228  0023C4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4229  0023C8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4230  0023CC  CFDE FFF6          	movff	postinc2,tblptrl
  4231  0023D0  CFDD FFF7          	movff	postdec2,tblptrh
  4232  0023D4                     	if	0	;tblptru may be non-zero
  4233  0023D4                     	endif
  4234  0023D4                     	if	0	;tblptru may be non-zero
  4235  0023D4                     	endif
  4236  0023D4  0008               	tblrd		*
  4237  0023D6  50F5               	movf	tablat,w,c
  4238  0023D8  6FC0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4239  0023DA  6BC1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4240  0023DC  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  4241  0023DE  27C0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4242  0023E0  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4243  0023E2  23C1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4244  0023E4  51C1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4245  0023E6  E106               	bnz	u9300
  4246  0023E8  0E1A               	movlw	26
  4247  0023EA  5DC0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4248  0023EC  B0D8               	btfsc	status,0,c
  4249  0023EE  D002               	goto	u9300
  4250  0023F0  0E01               	movlw	1
  4251  0023F2  D001               	goto	u9310
  4252  0023F4                     u9300:
  4253  0023F4  0E00               	movlw	0
  4254  0023F6                     u9310:
  4255  0023F6  6FCE               	movwf	_vfpfcnvrt$949& (0+255),b
  4256  0023F8  6BCF               	clrf	(_vfpfcnvrt$949+1)& (0+255),b
  4257                           
  4258                           ; BSR set to: 0
  4259  0023FA  51CE               	movf	_vfpfcnvrt$949& (0+255),w,b
  4260  0023FC  11CF               	iorwf	(_vfpfcnvrt$949+1)& (0+255),w,b
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 934:                 f = (long double)(*(doub
      +                          le *)__va_arg(*(double **)ap, (double)0));
  4264                           
  4265                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 933:             } else {
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 932:                 f = (*(long double *)__v
      +                          a_arg(*(long double **)ap, (long double)0));
  4269  0023FE  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4270  002402  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4271  002406  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  4272  00240A  0E04               	movlw	4
  4273  00240C  26DE               	addwf	postinc2,f,c
  4274  00240E  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  4275  002412  0E00               	movlw	0
  4276  002414  22DD               	addwfc	postdec2,f,c
  4277  002416  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4278  00241A  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4279  00241E  CFDE F0D0          	movff	postinc2,vfpfcnvrt@f
  4280  002422  CFDE F0D1          	movff	postinc2,vfpfcnvrt@f+1
  4281  002426  CFDE F0D2          	movff	postinc2,vfpfcnvrt@f+2
  4282  00242A  CFDE F0D3          	movff	postinc2,vfpfcnvrt@f+3
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 936:             *fmt += ((sizeof("lf")/sizeo
      +                          f("lf"[0]))-1);
  4286                           
  4287                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 935:             }
  4288  00242E  0E02               	movlw	2
  4289  002430  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4290  002434  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4291  002438  26DE               	addwf	postinc2,f,c
  4292  00243A  0E00               	movlw	0
  4293  00243C  22DD               	addwfc	postdec2,f,c
  4294  00243E  D783               	goto	l6932
  4295  002440                     l6952:
  4296                           
  4297                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1350:         if ((*fmt)[0] == '%') {
  4298  002440  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4299  002444  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4300  002448  CFDE FFF6          	movff	postinc2,tblptrl
  4301  00244C  CFDD FFF7          	movff	postdec2,tblptrh
  4302  002450                     	if	0	;tblptru may be non-zero
  4303  002450                     	endif
  4304  002450                     	if	0	;tblptru may be non-zero
  4305  002450                     	endif
  4306  002450  0008               	tblrd		*
  4307  002452  50F5               	movf	tablat,w,c
  4308  002454  0A25               	xorlw	37
  4309  002456  A4D8               	btfss	status,2,c
  4310  002458  D017               	goto	l6962
  4311                           
  4312                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1351:             ++*fmt;
  4313  00245A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4314  00245E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4315  002462  2ADE               	incf	postinc2,f,c
  4316  002464  0E00               	movlw	0
  4317  002466  22DD               	addwfc	postdec2,f,c
  4318                           
  4319                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1352:             fputc((int)'%', fp);
  4320  002468  0E00               	movlw	0
  4321  00246A  6E08               	movwf	fputc@c+1,c
  4322  00246C  0E25               	movlw	37
  4323  00246E  6E07               	movwf	fputc@c,c
  4324  002470  C0B8  F009         	movff	vfpfcnvrt@fp,fputc@fp
  4325  002474  C0B9  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4326  002478  ECEE  F01D         	call	_fputc	;wreg free
  4327  00247C                     l6958:
  4328                           
  4329                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1353:             return 1;
  4330  00247C  0E00               	movlw	0
  4331  00247E  0100               	movlb	0	; () banked
  4332  002480  6FB9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4333  002482  0E01               	movlw	1
  4334  002484  6FB8               	movwf	?_vfpfcnvrt& (0+255),b
  4335  002486  0012               	return	
  4336  002488                     l6962:
  4337                           
  4338                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  4339  002488  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4340  00248C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4341  002490  2ADE               	incf	postinc2,f,c
  4342  002492  0E00               	movlw	0
  4343  002494  22DD               	addwfc	postdec2,f,c
  4344                           
  4345                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1358:         return 0;
  4346  002496  0E00               	movlw	0
  4347  002498  0100               	movlb	0	; () banked
  4348  00249A  6FB9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4349  00249C  0E00               	movlw	0
  4350  00249E  6FB8               	movwf	?_vfpfcnvrt& (0+255),b
  4351  0024A0  0012               	return	
  4352  0024A2                     l6968:
  4353                           
  4354                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(*fmt)[0], fp);
  4355  0024A2  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4356  0024A6  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4357  0024AA  CFDE FFF6          	movff	postinc2,tblptrl
  4358  0024AE  CFDD FFF7          	movff	postdec2,tblptrh
  4359  0024B2                     	if	0	;tblptru may be non-zero
  4360  0024B2                     	endif
  4361  0024B2                     	if	0	;tblptru may be non-zero
  4362  0024B2                     	endif
  4363  0024B2  0008               	tblrd		*
  4364  0024B4  50F5               	movf	tablat,w,c
  4365  0024B6  6E07               	movwf	fputc@c,c
  4366  0024B8  6A08               	clrf	fputc@c+1,c
  4367  0024BA  C0B8  F009         	movff	vfpfcnvrt@fp,fputc@fp
  4368  0024BE  C0B9  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4369  0024C2  ECEE  F01D         	call	_fputc	;wreg free
  4370                           
  4371                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  4372  0024C6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4373  0024CA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4374  0024CE  2ADE               	incf	postinc2,f,c
  4375  0024D0  0E00               	movlw	0
  4376  0024D2  22DD               	addwfc	postdec2,f,c
  4377  0024D4  D7D3               	goto	l6958
  4378  0024D6                     __end_of_vfpfcnvrt:
  4379                           	opt callstack 0
  4380                           
  4381 ;; *************** function _strncmp *****************
  4382 ;; Defined at:
  4383 ;;		line 3 in file "D:\MPLAB\pic\sources\c99\common\strncmp.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;  _l              2    6[COMRAM] PTR const unsigned char 
  4386 ;;		 -> vfpfcnvrt@ct(3), 
  4387 ;;  _r              2    8[COMRAM] PTR const unsigned char 
  4388 ;;		 -> STR_24(3), 
  4389 ;;  n               2   10[COMRAM] unsigned int 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  r               2   15[COMRAM] PTR const unsigned char 
  4392 ;;		 -> STR_24(3), 
  4393 ;;  l               2   13[COMRAM] PTR const unsigned char 
  4394 ;;		 -> vfpfcnvrt@ct(3), 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  2    6[COMRAM] int 
  4397 ;; Registers used:
  4398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4404 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;Total ram usage:       11 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    4
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_vfpfcnvrt
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text11
  4419  003B3A                     __ptext11:
  4420                           	opt callstack 0
  4421  003B3A                     _strncmp:
  4422                           	opt callstack 22
  4423                           
  4424                           ;incstack = 0
  4425  003B3A  C007  F00E         	movff	strncmp@_l,strncmp@l
  4426  003B3E  C008  F00F         	movff	strncmp@_l+1,strncmp@l+1
  4427  003B42  C009  F010         	movff	strncmp@_r,strncmp@r
  4428  003B46  C00A  F011         	movff	strncmp@_r+1,strncmp@r+1
  4429  003B4A  060B               	decf	strncmp@n,f,c
  4430  003B4C  A0D8               	btfss	status,0,c
  4431  003B4E  060C               	decf	strncmp@n+1,f,c
  4432  003B50  280B               	incf	strncmp@n,w,c
  4433  003B52  E10F               	bnz	l6846
  4434  003B54  280C               	incf	strncmp@n+1,w,c
  4435  003B56  A4D8               	btfss	status,2,c
  4436  003B58  D00C               	goto	l6846
  4437  003B5A  0E00               	movlw	0
  4438  003B5C  6E08               	movwf	?_strncmp+1,c
  4439  003B5E  0E00               	movlw	0
  4440  003B60  6E07               	movwf	?_strncmp,c
  4441  003B62  0012               	return	
  4442  003B64                     l6844:
  4443  003B64  4A0E               	infsnz	strncmp@l,f,c
  4444  003B66  2A0F               	incf	strncmp@l+1,f,c
  4445  003B68  4A10               	infsnz	strncmp@r,f,c
  4446  003B6A  2A11               	incf	strncmp@r+1,f,c
  4447  003B6C  060B               	decf	strncmp@n,f,c
  4448  003B6E  A0D8               	btfss	status,0,c
  4449  003B70  060C               	decf	strncmp@n+1,f,c
  4450  003B72                     l6846:
  4451  003B72  C00E  FFD9         	movff	strncmp@l,fsr2l
  4452  003B76  C00F  FFDA         	movff	strncmp@l+1,fsr2h
  4453  003B7A  50DF               	movf	indf2,w,c
  4454  003B7C  B4D8               	btfsc	status,2,c
  4455  003B7E  D01C               	goto	u9120
  4456  003B80  C010  FFF6         	movff	strncmp@r,tblptrl
  4457  003B84  C011  FFF7         	movff	strncmp@r+1,tblptrh
  4458  003B88                     	if	0	;tblptru may be non-zero
  4459  003B88                     	endif
  4460  003B88                     	if	0	;tblptru may be non-zero
  4461  003B88                     	endif
  4462  003B88  0008               	tblrd		*
  4463  003B8A  50F5               	movf	tablat,w,c
  4464  003B8C  0900               	iorlw	0
  4465  003B8E  B4D8               	btfsc	status,2,c
  4466  003B90  D013               	goto	u9120
  4467  003B92  500B               	movf	strncmp@n,w,c
  4468  003B94  100C               	iorwf	strncmp@n+1,w,c
  4469  003B96  B4D8               	btfsc	status,2,c
  4470  003B98  D00F               	goto	u9120
  4471  003B9A  C00E  FFD9         	movff	strncmp@l,fsr2l
  4472  003B9E  C00F  FFDA         	movff	strncmp@l+1,fsr2h
  4473  003BA2  50DF               	movf	indf2,w,c
  4474  003BA4  6E0D               	movwf	??_strncmp& (0+255),c
  4475  003BA6  C010  FFF6         	movff	strncmp@r,tblptrl
  4476  003BAA  C011  FFF7         	movff	strncmp@r+1,tblptrh
  4477  003BAE                     	if	0	;tblptru may be non-zero
  4478  003BAE                     	endif
  4479  003BAE                     	if	0	;tblptru may be non-zero
  4480  003BAE                     	endif
  4481  003BAE  0008               	tblrd		*
  4482  003BB0  50F5               	movf	tablat,w,c
  4483  003BB2  180D               	xorwf	??_strncmp,w,c
  4484  003BB4  B4D8               	btfsc	status,2,c
  4485  003BB6  D7D6               	goto	l6844
  4486  003BB8                     u9120:
  4487  003BB8  C00E  FFD9         	movff	strncmp@l,fsr2l
  4488  003BBC  C00F  FFDA         	movff	strncmp@l+1,fsr2h
  4489  003BC0  50DF               	movf	indf2,w,c
  4490  003BC2  6E0D               	movwf	??_strncmp& (0+255),c
  4491  003BC4  C010  FFF6         	movff	strncmp@r,tblptrl
  4492  003BC8  C011  FFF7         	movff	strncmp@r+1,tblptrh
  4493  003BCC                     	if	0	;tblptru may be non-zero
  4494  003BCC                     	endif
  4495  003BCC                     	if	0	;tblptru may be non-zero
  4496  003BCC                     	endif
  4497  003BCC  0008               	tblrd		*
  4498  003BCE  50F5               	movf	tablat,w,c
  4499  003BD0  5C0D               	subwf	??_strncmp,w,c
  4500  003BD2  6E07               	movwf	?_strncmp,c
  4501  003BD4  6A08               	clrf	?_strncmp+1,c
  4502  003BD6  A0D8               	btfss	status,0,c
  4503  003BD8  0608               	decf	?_strncmp+1,f,c
  4504  003BDA  0012               	return		;funcret
  4505  003BDC                     __end_of_strncmp:
  4506                           	opt callstack 0
  4507                           
  4508 ;; *************** function _efgtoa *****************
  4509 ;; Defined at:
  4510 ;;		line 319 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;  fp              2   99[COMRAM] PTR struct _IO_FILE
  4513 ;;		 -> sprintf@f(6), 
  4514 ;;  f               4  101[COMRAM] PTR struct _IO_FILE
  4515 ;;  c               1  105[COMRAM] unsigned char 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  u               4   52[BANK0 ] unsigned char 
  4518 ;;  g               4   44[BANK0 ] unsigned char 
  4519 ;;  l               4   38[BANK0 ] unsigned char 
  4520 ;;  h               4   34[BANK0 ] unsigned char 
  4521 ;;  ou              4    0[BANK0 ] unsigned char 
  4522 ;;  n               2   50[BANK0 ] int 
  4523 ;;  e               2   48[BANK0 ] int 
  4524 ;;  i               2   42[BANK0 ] int 
  4525 ;;  w               2   31[BANK0 ] int 
  4526 ;;  p               2   28[BANK0 ] int 
  4527 ;;  sign            2   26[BANK0 ] int 
  4528 ;;  d               2   24[BANK0 ] int 
  4529 ;;  ne              2   22[BANK0 ] int 
  4530 ;;  m               2   20[BANK0 ] int 
  4531 ;;  pp              2   18[BANK0 ] int 
  4532 ;;  t               2   16[BANK0 ] int 
  4533 ;;  mode            1   33[BANK0 ] unsigned char 
  4534 ;;  nmode           1   30[BANK0 ] unsigned char 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  2   99[COMRAM] int 
  4537 ;; Registers used:
  4538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4544 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;Total ram usage:       68 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    8
  4551 ;; This function calls:
  4552 ;;		___awdiv
  4553 ;;		___awmod
  4554 ;;		___fladd
  4555 ;;		___fldiv
  4556 ;;		___fleq
  4557 ;;		___flge
  4558 ;;		___flmul
  4559 ;;		___flneg
  4560 ;;		___flsub
  4561 ;;		___fltol
  4562 ;;		___fpclassifyf
  4563 ;;		_floorf
  4564 ;;		_isupper
  4565 ;;		_pad
  4566 ;;		_strcpy
  4567 ;;		_tolower
  4568 ;; This function is called by:
  4569 ;;		_vfpfcnvrt
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text12
  4574  001098                     __ptext12:
  4575                           	opt callstack 0
  4576  001098                     _efgtoa:
  4577                           	opt callstack 18
  4578                           
  4579                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 319: static int efgtoa(FILE *fp, long double 
      +                          f, char c);D:\MPLAB\pic\sources\c99\common\doprnt.c: 320: {;D:\MPLAB\pic\sources\c99\com
      +                          mon\doprnt.c: 321:     char mode, nmode;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 322: 
      +                              int d, e, i, m, n, ne, p, pp, sign, t, w;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 
      +                          323:     long double g, h, l, ou, u;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 326:     
      +                          sign = 0;
  4580                           
  4581                           ;incstack = 0
  4582  001098  0E00               	movlw	0
  4583  00109A  0100               	movlb	0	; () banked
  4584  00109C  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4585  00109E  0E00               	movlw	0
  4586  0010A0  6F9A               	movwf	efgtoa@sign& (0+255),b
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 327:     g = f;
  4590  0010A2  C066  F0AC         	movff	efgtoa@f,efgtoa@g
  4591  0010A6  C067  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  4592  0010AA  C068  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  4593  0010AE  C069  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0) {
  4597  0010B2  AFAF               	btfss	(efgtoa@g+3)& (0+255),7,b
  4598  0010B4  D016               	goto	l6508
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 329:         sign = 1;
  4602  0010B6  0E00               	movlw	0
  4603  0010B8  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4604  0010BA  0E01               	movlw	1
  4605  0010BC  6F9A               	movwf	efgtoa@sign& (0+255),b
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  4609  0010BE  C0AC  F007         	movff	efgtoa@g,___flneg@f1
  4610  0010C2  C0AD  F008         	movff	efgtoa@g+1,___flneg@f1+1
  4611  0010C6  C0AE  F009         	movff	efgtoa@g+2,___flneg@f1+2
  4612  0010CA  C0AF  F00A         	movff	efgtoa@g+3,___flneg@f1+3
  4613  0010CE  EC40  F022         	call	___flneg	;wreg free
  4614  0010D2  C007  F0AC         	movff	?___flneg,efgtoa@g
  4615  0010D6  C008  F0AD         	movff	?___flneg+1,efgtoa@g+1
  4616  0010DA  C009  F0AE         	movff	?___flneg+2,efgtoa@g+2
  4617  0010DE  C00A  F0AF         	movff	?___flneg+3,efgtoa@g+3
  4618  0010E2                     l6508:
  4619                           
  4620                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  4621  0010E2  0E00               	movlw	0
  4622  0010E4  0100               	movlb	0	; () banked
  4623  0010E6  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  4624  0010E8  0E00               	movlw	0
  4625  0010EA  6FB2               	movwf	efgtoa@n& (0+255),b
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 335:     w = width;
  4629  0010EC  C0F4  F09F         	movff	_width,efgtoa@w
  4630  0010F0  C0F5  F0A0         	movff	_width+1,efgtoa@w+1
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 336:     if (sign || (flags & (1 << 2))) {
  4634  0010F4  519A               	movf	efgtoa@sign& (0+255),w,b
  4635  0010F6  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4636  0010F8  A4D8               	btfss	status,2,c
  4637  0010FA  D002               	goto	u8510
  4638                           
  4639                           ; BSR set to: 0
  4640  0010FC  A5F8               	btfss	_flags& (0+255),2,b
  4641  0010FE  D013               	goto	l6528
  4642  001100                     u8510:
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] = sign ? '-' : '+';
  4646  001100  519A               	movf	efgtoa@sign& (0+255),w,b
  4647  001102  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4648  001104  A4D8               	btfss	status,2,c
  4649  001106  D004               	goto	l6520
  4650                           
  4651                           ; BSR set to: 0
  4652  001108  0E00               	movlw	0
  4653  00110A  6F85               	movwf	(_efgtoa$918+1)& (0+255),b
  4654  00110C  0E2B               	movlw	43
  4655  00110E  D003               	goto	L5
  4656  001110                     l6520:
  4657                           
  4658                           ; BSR set to: 0
  4659  001110  0E00               	movlw	0
  4660  001112  6F85               	movwf	(_efgtoa$918+1)& (0+255),b
  4661  001114  0E2D               	movlw	45
  4662  001116                     L5:
  4663  001116  6F84               	movwf	_efgtoa$918& (0+255),b
  4664                           
  4665                           ; BSR set to: 0
  4666  001118  C084  F1A4         	movff	_efgtoa$918,_dbuf
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 338:         ++n;
  4670  00111C  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4671  00111E  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 339:         --w;
  4675  001120  079F               	decf	efgtoa@w& (0+255),f,b
  4676  001122  A0D8               	btfss	status,0,c
  4677  001124  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4678  001126                     l6528:
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 344:         if ((0 ? isupper((int)c) : ((uns
      +                          igned)((int)c)-'A') < 26)) {
  4682  001126  C0AC  F007         	movff	efgtoa@g,___fpclassifyf@x
  4683  00112A  C0AD  F008         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4684  00112E  C0AE  F009         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4685  001132  C0AF  F00A         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4686  001136  ECDA  F01C         	call	___fpclassifyf	;wreg free
  4687  00113A  0407               	decf	?___fpclassifyf,w,c
  4688  00113C  1008               	iorwf	?___fpclassifyf+1,w,c
  4689  00113E  A4D8               	btfss	status,2,c
  4690  001140  D04C               	goto	l6546
  4691  001142  0EBF               	movlw	191
  4692  001144  6E6B               	movwf	??_efgtoa& (0+255),c
  4693  001146  0EFF               	movlw	255
  4694  001148  6E6C               	movwf	(??_efgtoa+1)& (0+255),c
  4695  00114A  506A               	movf	efgtoa@c,w,c
  4696  00114C  6E6D               	movwf	(??_efgtoa+2)& (0+255),c
  4697  00114E  6A6E               	clrf	(??_efgtoa+3)& (0+255),c
  4698  001150  506B               	movf	??_efgtoa,w,c
  4699  001152  266D               	addwf	??_efgtoa+2,f,c
  4700  001154  506C               	movf	??_efgtoa+1,w,c
  4701  001156  226E               	addwfc	??_efgtoa+3,f,c
  4702  001158  506E               	movf	??_efgtoa+3,w,c
  4703  00115A  E106               	bnz	u8540
  4704  00115C  0E1A               	movlw	26
  4705  00115E  5C6D               	subwf	??_efgtoa+2,w,c
  4706  001160  B0D8               	btfsc	status,0,c
  4707  001162  D002               	goto	u8540
  4708  001164  0E01               	movlw	1
  4709  001166  D001               	goto	u8550
  4710  001168                     u8540:
  4711  001168  0E00               	movlw	0
  4712  00116A                     u8550:
  4713  00116A  0100               	movlb	0	; () banked
  4714  00116C  6F86               	movwf	_efgtoa$919& (0+255),b
  4715  00116E  6B87               	clrf	(_efgtoa$919+1)& (0+255),b
  4716                           
  4717                           ; BSR set to: 0
  4718  001170  5186               	movf	_efgtoa$919& (0+255),w,b
  4719  001172  1187               	iorwf	(_efgtoa$919+1)& (0+255),w,b
  4720  001174  B4D8               	btfsc	status,2,c
  4721  001176  D00D               	goto	l6538
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 345:             strcpy(&dbuf[n], "INF");
  4725  001178  0EA4               	movlw	low _dbuf
  4726  00117A  25B2               	addwf	efgtoa@n& (0+255),w,b
  4727  00117C  6E07               	movwf	strcpy@dest,c
  4728  00117E  0E01               	movlw	high _dbuf
  4729  001180  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4730  001182  6E08               	movwf	strcpy@dest+1,c
  4731  001184  0E7F               	movlw	low STR_14
  4732  001186  6E09               	movwf	strcpy@src,c
  4733  001188  0E10               	movlw	high STR_14
  4734  00118A  6E0A               	movwf	strcpy@src+1,c
  4735  00118C  EC5F  F020         	call	_strcpy	;wreg free
  4736                           
  4737                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 346:         } else {
  4738  001190  D00C               	goto	l6540
  4739  001192                     l6538:
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 347:             strcpy(&dbuf[n], "inf");
  4743  001192  0EA4               	movlw	low _dbuf
  4744  001194  25B2               	addwf	efgtoa@n& (0+255),w,b
  4745  001196  6E07               	movwf	strcpy@dest,c
  4746  001198  0E01               	movlw	high _dbuf
  4747  00119A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4748  00119C  6E08               	movwf	strcpy@dest+1,c
  4749  00119E  0E87               	movlw	low STR_15
  4750  0011A0  6E09               	movwf	strcpy@src,c
  4751  0011A2  0E10               	movlw	high STR_15
  4752  0011A4  6E0A               	movwf	strcpy@src+1,c
  4753  0011A6  EC5F  F020         	call	_strcpy	;wreg free
  4754  0011AA                     l6540:
  4755                           
  4756                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 349:         w -= ((sizeof("inf")/sizeof("inf
      +                          "[0]))-1);
  4757  0011AA  0100               	movlb	0	; () banked
  4758  0011AC  0EFD               	movlw	253
  4759  0011AE  279F               	addwf	efgtoa@w& (0+255),f,b
  4760  0011B0  0EFF               	movlw	255
  4761  0011B2  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4762  0011B4                     l6542:
  4763                           
  4764                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 350:         return pad(fp, &dbuf[0], w);
  4765  0011B4  C064  F017         	movff	efgtoa@fp,pad@fp
  4766  0011B8  C065  F018         	movff	efgtoa@fp+1,pad@fp+1
  4767  0011BC  0EA4               	movlw	low _dbuf
  4768  0011BE  6E19               	movwf	pad@buf,c
  4769  0011C0  0E01               	movlw	high _dbuf
  4770  0011C2  6E1A               	movwf	pad@buf+1,c
  4771  0011C4  C09F  F01B         	movff	efgtoa@w,pad@p
  4772  0011C8  C0A0  F01C         	movff	efgtoa@w+1,pad@p+1
  4773  0011CC  EC3E  F01E         	call	_pad	;wreg free
  4774  0011D0  C017  F064         	movff	?_pad,?_efgtoa
  4775  0011D4  C018  F065         	movff	?_pad+1,?_efgtoa+1
  4776  0011D8  0012               	return	
  4777  0011DA                     l6546:
  4778                           
  4779                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 353:         if ((0 ? isupper((int)c) : ((uns
      +                          igned)((int)c)-'A') < 26)) {
  4780  0011DA  C0AC  F007         	movff	efgtoa@g,___fpclassifyf@x
  4781  0011DE  C0AD  F008         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4782  0011E2  C0AE  F009         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4783  0011E6  C0AF  F00A         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4784  0011EA  ECDA  F01C         	call	___fpclassifyf	;wreg free
  4785  0011EE  5007               	movf	?___fpclassifyf,w,c
  4786  0011F0  1008               	iorwf	?___fpclassifyf+1,w,c
  4787  0011F2  A4D8               	btfss	status,2,c
  4788  0011F4  D035               	goto	l6564
  4789  0011F6  0EBF               	movlw	191
  4790  0011F8  6E6B               	movwf	??_efgtoa& (0+255),c
  4791  0011FA  0EFF               	movlw	255
  4792  0011FC  6E6C               	movwf	(??_efgtoa+1)& (0+255),c
  4793  0011FE  506A               	movf	efgtoa@c,w,c
  4794  001200  6E6D               	movwf	(??_efgtoa+2)& (0+255),c
  4795  001202  6A6E               	clrf	(??_efgtoa+3)& (0+255),c
  4796  001204  506B               	movf	??_efgtoa,w,c
  4797  001206  266D               	addwf	??_efgtoa+2,f,c
  4798  001208  506C               	movf	??_efgtoa+1,w,c
  4799  00120A  226E               	addwfc	??_efgtoa+3,f,c
  4800  00120C  506E               	movf	??_efgtoa+3,w,c
  4801  00120E  E106               	bnz	u8580
  4802  001210  0E1A               	movlw	26
  4803  001212  5C6D               	subwf	??_efgtoa+2,w,c
  4804  001214  B0D8               	btfsc	status,0,c
  4805  001216  D002               	goto	u8580
  4806  001218  0E01               	movlw	1
  4807  00121A  D001               	goto	u8590
  4808  00121C                     u8580:
  4809  00121C  0E00               	movlw	0
  4810  00121E                     u8590:
  4811  00121E  0100               	movlb	0	; () banked
  4812  001220  6F88               	movwf	_efgtoa$923& (0+255),b
  4813  001222  6B89               	clrf	(_efgtoa$923+1)& (0+255),b
  4814                           
  4815                           ; BSR set to: 0
  4816  001224  5188               	movf	_efgtoa$923& (0+255),w,b
  4817  001226  1189               	iorwf	(_efgtoa$923+1)& (0+255),w,b
  4818  001228  B4D8               	btfsc	status,2,c
  4819  00122A  D00D               	goto	l6556
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 354:             strcpy(&dbuf[n], "NAN");
  4823  00122C  0EA4               	movlw	low _dbuf
  4824  00122E  25B2               	addwf	efgtoa@n& (0+255),w,b
  4825  001230  6E07               	movwf	strcpy@dest,c
  4826  001232  0E01               	movlw	high _dbuf
  4827  001234  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4828  001236  6E08               	movwf	strcpy@dest+1,c
  4829  001238  0E83               	movlw	low STR_18
  4830  00123A  6E09               	movwf	strcpy@src,c
  4831  00123C  0E10               	movlw	high STR_18
  4832  00123E  6E0A               	movwf	strcpy@src+1,c
  4833  001240  EC5F  F020         	call	_strcpy	;wreg free
  4834                           
  4835                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 355:         } else {
  4836  001244  D7B2               	goto	l6540
  4837  001246                     l6556:
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 356:             strcpy(&dbuf[n], "nan");
  4841  001246  0EA4               	movlw	low _dbuf
  4842  001248  25B2               	addwf	efgtoa@n& (0+255),w,b
  4843  00124A  6E07               	movwf	strcpy@dest,c
  4844  00124C  0E01               	movlw	high _dbuf
  4845  00124E  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4846  001250  6E08               	movwf	strcpy@dest+1,c
  4847  001252  0E8B               	movlw	low STR_19
  4848  001254  6E09               	movwf	strcpy@src,c
  4849  001256  0E10               	movlw	high STR_19
  4850  001258  6E0A               	movwf	strcpy@src+1,c
  4851  00125A  EC5F  F020         	call	_strcpy	;wreg free
  4852  00125E  D7A5               	goto	l6540
  4853  001260                     l6564:
  4854                           
  4855                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  4856  001260  0E00               	movlw	0
  4857  001262  0100               	movlb	0	; () banked
  4858  001264  6FB4               	movwf	efgtoa@u& (0+255),b
  4859  001266  0E00               	movlw	0
  4860  001268  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  4861  00126A  0E80               	movlw	128
  4862  00126C  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  4863  00126E  0E3F               	movlw	63
  4864  001270  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  4865                           
  4866                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  4867  001272  0E00               	movlw	0
  4868  001274  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  4869  001276  0E00               	movlw	0
  4870  001278  6FB0               	movwf	efgtoa@e& (0+255),b
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0.0)) {
  4874  00127A  C0AC  F007         	movff	efgtoa@g,___fleq@ff1
  4875  00127E  C0AD  F008         	movff	efgtoa@g+1,___fleq@ff1+1
  4876  001282  C0AE  F009         	movff	efgtoa@g+2,___fleq@ff1+2
  4877  001286  C0AF  F00A         	movff	efgtoa@g+3,___fleq@ff1+3
  4878  00128A  0E00               	movlw	0
  4879  00128C  6E0B               	movwf	___fleq@ff2,c
  4880  00128E  0E00               	movlw	0
  4881  001290  6E0C               	movwf	___fleq@ff2+1,c
  4882  001292  0E00               	movlw	0
  4883  001294  6E0D               	movwf	___fleq@ff2+2,c
  4884  001296  0E00               	movlw	0
  4885  001298  6E0E               	movwf	___fleq@ff2+3,c
  4886  00129A  ECD5  F01E         	call	___fleq	;wreg free
  4887  00129E  A0D8               	btfss	status,0,c
  4888  0012A0  D01E               	goto	l6574
  4889  0012A2  D076               	goto	u8630
  4890  0012A4                     l6570:
  4891                           
  4892                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 367:             u = u*10.0;
  4893  0012A4  C0B4  F03F         	movff	efgtoa@u,___flmul@b
  4894  0012A8  C0B5  F040         	movff	efgtoa@u+1,___flmul@b+1
  4895  0012AC  C0B6  F041         	movff	efgtoa@u+2,___flmul@b+2
  4896  0012B0  C0B7  F042         	movff	efgtoa@u+3,___flmul@b+3
  4897  0012B4  0E00               	movlw	0
  4898  0012B6  6E43               	movwf	___flmul@a,c
  4899  0012B8  0E00               	movlw	0
  4900  0012BA  6E44               	movwf	___flmul@a+1,c
  4901  0012BC  0E20               	movlw	32
  4902  0012BE  6E45               	movwf	___flmul@a+2,c
  4903  0012C0  0E41               	movlw	65
  4904  0012C2  6E46               	movwf	___flmul@a+3,c
  4905  0012C4  EC6B  F012         	call	___flmul	;wreg free
  4906  0012C8  C03F  F0B4         	movff	?___flmul,efgtoa@u
  4907  0012CC  C040  F0B5         	movff	?___flmul+1,efgtoa@u+1
  4908  0012D0  C041  F0B6         	movff	?___flmul+2,efgtoa@u+2
  4909  0012D4  C042  F0B7         	movff	?___flmul+3,efgtoa@u+3
  4910                           
  4911                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 368:             ++e;
  4912  0012D8  0100               	movlb	0	; () banked
  4913  0012DA  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  4914  0012DC  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  4915  0012DE                     l6574:
  4916                           
  4917                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 366:         while (!(g < (u*10.0))) {
  4918  0012DE  C0AC  F058         	movff	efgtoa@g,___flge@ff1
  4919  0012E2  C0AD  F059         	movff	efgtoa@g+1,___flge@ff1+1
  4920  0012E6  C0AE  F05A         	movff	efgtoa@g+2,___flge@ff1+2
  4921  0012EA  C0AF  F05B         	movff	efgtoa@g+3,___flge@ff1+3
  4922  0012EE  0E00               	movlw	0
  4923  0012F0  6E43               	movwf	___flmul@a,c
  4924  0012F2  0E00               	movlw	0
  4925  0012F4  6E44               	movwf	___flmul@a+1,c
  4926  0012F6  0E20               	movlw	32
  4927  0012F8  6E45               	movwf	___flmul@a+2,c
  4928  0012FA  0E41               	movlw	65
  4929  0012FC  6E46               	movwf	___flmul@a+3,c
  4930  0012FE  C0B4  F03F         	movff	efgtoa@u,___flmul@b
  4931  001302  C0B5  F040         	movff	efgtoa@u+1,___flmul@b+1
  4932  001306  C0B6  F041         	movff	efgtoa@u+2,___flmul@b+2
  4933  00130A  C0B7  F042         	movff	efgtoa@u+3,___flmul@b+3
  4934  00130E  EC6B  F012         	call	___flmul	;wreg free
  4935  001312  C03F  F05C         	movff	?___flmul,___flge@ff2
  4936  001316  C040  F05D         	movff	?___flmul+1,___flge@ff2+1
  4937  00131A  C041  F05E         	movff	?___flmul+2,___flge@ff2+2
  4938  00131E  C042  F05F         	movff	?___flmul+3,___flge@ff2+3
  4939  001322  EC72  F01C         	call	___flge	;wreg free
  4940  001326  A0D8               	btfss	status,0,c
  4941  001328  D01F               	goto	l6580
  4942  00132A  D7BC               	goto	l6570
  4943  00132C                     l6576:
  4944                           
  4945                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 371:             u = u/10.0;
  4946  00132C  C0B4  F01B         	movff	efgtoa@u,___fldiv@b
  4947  001330  C0B5  F01C         	movff	efgtoa@u+1,___fldiv@b+1
  4948  001334  C0B6  F01D         	movff	efgtoa@u+2,___fldiv@b+2
  4949  001338  C0B7  F01E         	movff	efgtoa@u+3,___fldiv@b+3
  4950  00133C  0E00               	movlw	0
  4951  00133E  6E1F               	movwf	___fldiv@a,c
  4952  001340  0E00               	movlw	0
  4953  001342  6E20               	movwf	___fldiv@a+1,c
  4954  001344  0E20               	movlw	32
  4955  001346  6E21               	movwf	___fldiv@a+2,c
  4956  001348  0E41               	movlw	65
  4957  00134A  6E22               	movwf	___fldiv@a+3,c
  4958  00134C  EC9A  F015         	call	___fldiv	;wreg free
  4959  001350  C01B  F0B4         	movff	?___fldiv,efgtoa@u
  4960  001354  C01C  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4961  001358  C01D  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4962  00135C  C01E  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4963                           
  4964                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 372:             --e;
  4965  001360  0100               	movlb	0	; () banked
  4966  001362  07B0               	decf	efgtoa@e& (0+255),f,b
  4967  001364  A0D8               	btfss	status,0,c
  4968  001366  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  4969  001368                     l6580:
  4970                           
  4971                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 370:         while (g < u) {
  4972  001368  C0AC  F058         	movff	efgtoa@g,___flge@ff1
  4973  00136C  C0AD  F059         	movff	efgtoa@g+1,___flge@ff1+1
  4974  001370  C0AE  F05A         	movff	efgtoa@g+2,___flge@ff1+2
  4975  001374  C0AF  F05B         	movff	efgtoa@g+3,___flge@ff1+3
  4976  001378  C0B4  F05C         	movff	efgtoa@u,___flge@ff2
  4977  00137C  C0B5  F05D         	movff	efgtoa@u+1,___flge@ff2+1
  4978  001380  C0B6  F05E         	movff	efgtoa@u+2,___flge@ff2+2
  4979  001384  C0B7  F05F         	movff	efgtoa@u+3,___flge@ff2+3
  4980  001388  EC72  F01C         	call	___flge	;wreg free
  4981  00138C  A0D8               	btfss	status,0,c
  4982  00138E  D7CE               	goto	l6576
  4983  001390                     u8630:
  4984                           
  4985                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 377:     mode = tolower((int)c);
  4986  001390  C06A  F00D         	movff	efgtoa@c,tolower@c
  4987  001394  6A0E               	clrf	tolower@c+1,c
  4988  001396  EC00  F021         	call	_tolower	;wreg free
  4989  00139A  500D               	movf	?_tolower,w,c
  4990  00139C  0100               	movlb	0	; () banked
  4991  00139E  6FA1               	movwf	efgtoa@mode& (0+255),b
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 378:     nmode = mode;
  4995  0013A0  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 379:     if (mode == 'g') {
  4999  0013A4  0E67               	movlw	103
  5000  0013A6  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5001  0013A8  A4D8               	btfss	status,2,c
  5002  0013AA  D019               	goto	l6596
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0) {
  5006  0013AC  51F6               	movf	_prec& (0+255),w,b
  5007  0013AE  11F7               	iorwf	(_prec+1)& (0+255),w,b
  5008  0013B0  A4D8               	btfss	status,2,c
  5009  0013B2  D004               	goto	l6592
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  5013  0013B4  0E00               	movlw	0
  5014  0013B6  6FF7               	movwf	(_prec+1)& (0+255),b
  5015  0013B8  0E01               	movlw	1
  5016  0013BA  6FF6               	movwf	_prec& (0+255),b
  5017  0013BC                     l6592:
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 383:         p = (0 < prec) ? prec : 6;
  5021  0013BC  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  5022  0013BE  D005               	goto	u8660
  5023  0013C0  51F7               	movf	(_prec+1)& (0+255),w,b
  5024  0013C2  E108               	bnz	l417
  5025  0013C4  05F6               	decf	_prec& (0+255),w,b
  5026  0013C6  B0D8               	btfsc	status,0,c
  5027  0013C8  D005               	goto	l417
  5028  0013CA                     u8660:
  5029                           
  5030                           ; BSR set to: 0
  5031  0013CA  0E00               	movlw	0
  5032  0013CC  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  5033  0013CE  0E06               	movlw	6
  5034  0013D0  6F9C               	movwf	efgtoa@p& (0+255),b
  5035  0013D2  D008               	goto	l6602
  5036  0013D4                     l417:
  5037                           
  5038                           ; BSR set to: 0
  5039  0013D4  C0F6  F09C         	movff	_prec,efgtoa@p
  5040  0013D8  C0F7  F09D         	movff	_prec+1,efgtoa@p+1
  5041  0013DC  D003               	goto	l6602
  5042  0013DE                     l6596:
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 385:         p = (prec < 0) ? 6 : prec;
  5046  0013DE  AFF7               	btfss	(_prec+1)& (0+255),7,b
  5047  0013E0  D7F9               	goto	l417
  5048  0013E2  D7F3               	goto	u8660
  5049  0013E4                     l6602:
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 389:     if (mode == 'g') {
  5053  0013E4  0E67               	movlw	103
  5054  0013E6  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5055  0013E8  A4D8               	btfss	status,2,c
  5056  0013EA  D022               	goto	l6612
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 390:         if (!(e < -4) && !((p - 1) < e))
      +                           {
  5060  0013EC  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  5061  0013EE  D006               	goto	u8690
  5062  0013F0  0EFC               	movlw	252
  5063  0013F2  5DB0               	subwf	efgtoa@e& (0+255),w,b
  5064  0013F4  0EFF               	movlw	255
  5065  0013F6  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5066  0013F8  A0D8               	btfss	status,0,c
  5067  0013FA  D018               	goto	l6610
  5068  0013FC                     u8690:
  5069                           
  5070                           ; BSR set to: 0
  5071  0013FC  0EFF               	movlw	255
  5072  0013FE  6E6B               	movwf	??_efgtoa& (0+255),c
  5073  001400  0EFF               	movlw	255
  5074  001402  6E6C               	movwf	(??_efgtoa+1)& (0+255),c
  5075  001404  C09C  F06D         	movff	efgtoa@p,??_efgtoa+2
  5076  001408  C09D  F06E         	movff	efgtoa@p+1,??_efgtoa+3
  5077  00140C  506B               	movf	??_efgtoa,w,c
  5078  00140E  266D               	addwf	??_efgtoa+2,f,c
  5079  001410  506C               	movf	??_efgtoa+1,w,c
  5080  001412  226E               	addwfc	??_efgtoa+3,f,c
  5081  001414  51B0               	movf	efgtoa@e& (0+255),w,b
  5082  001416  5C6D               	subwf	??_efgtoa+2,w,c
  5083  001418  506E               	movf	??_efgtoa+3,w,c
  5084  00141A  0A80               	xorlw	128
  5085  00141C  6E6F               	movwf	(??_efgtoa+4)& (0+255),c
  5086  00141E  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  5087  001420  0A80               	xorlw	128
  5088  001422  586F               	subwfb	(??_efgtoa+4)& (0+255),w,c
  5089  001424  A0D8               	btfss	status,0,c
  5090  001426  D002               	goto	l6610
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 391:             nmode = 'f';
  5094  001428  0E66               	movlw	102
  5095  00142A  D001               	goto	L6
  5096  00142C                     l6610:
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 393:             nmode = 'e';
  5100  00142C  0E65               	movlw	101
  5101  00142E                     L6:
  5102  00142E  6F9E               	movwf	efgtoa@nmode& (0+255),b
  5103  001430                     l6612:
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 398:     m = p;
  5107  001430  C09C  F094         	movff	efgtoa@p,efgtoa@m
  5108  001434  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 399:     if (!(mode == 'g') || ((nmode == 'f'
      +                          ) && (e < 0))) {
  5112  001438  0E67               	movlw	103
  5113  00143A  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5114  00143C  A4D8               	btfss	status,2,c
  5115  00143E  D005               	goto	u8730
  5116                           
  5117                           ; BSR set to: 0
  5118  001440  0E66               	movlw	102
  5119  001442  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5120  001444  B4D8               	btfsc	status,2,c
  5121                           
  5122                           ; BSR set to: 0
  5123  001446  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  5124  001448  D002               	goto	l6622
  5125  00144A                     u8730:
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 400:         ++m;
  5129  00144A  4B94               	infsnz	efgtoa@m& (0+255),f,b
  5130  00144C  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  5131  00144E                     l6622:
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 404:     if (nmode == 'f') {
  5135  00144E  0E66               	movlw	102
  5136  001450  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5137  001452  A4D8               	btfss	status,2,c
  5138  001454  D016               	goto	l6632
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 405:         if (e < 0) {
  5142  001456  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  5143  001458  D00C               	goto	l6628
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 406:             u = 1.0;
  5147  00145A  0E00               	movlw	0
  5148  00145C  6FB4               	movwf	efgtoa@u& (0+255),b
  5149  00145E  0E00               	movlw	0
  5150  001460  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  5151  001462  0E80               	movlw	128
  5152  001464  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  5153  001466  0E3F               	movlw	63
  5154  001468  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  5155                           
  5156                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 407:             e = 0;
  5157  00146A  0E00               	movlw	0
  5158  00146C  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  5159  00146E  0E00               	movlw	0
  5160  001470  6FB0               	movwf	efgtoa@e& (0+255),b
  5161  001472                     l6628:
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 409:         if (!(mode == 'g')) {
  5165  001472  0E67               	movlw	103
  5166  001474  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5167  001476  B4D8               	btfsc	status,2,c
  5168  001478  D004               	goto	l6632
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 410:             m += e;
  5172  00147A  51B0               	movf	efgtoa@e& (0+255),w,b
  5173  00147C  2794               	addwf	efgtoa@m& (0+255),f,b
  5174  00147E  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  5175  001480  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5176  001482                     l6632:
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  5180  001482  0E00               	movlw	0
  5181  001484  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  5182  001486  0E00               	movlw	0
  5183  001488  6FAA               	movwf	efgtoa@i& (0+255),b
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 416:     h = g;
  5187  00148A  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  5188  00148E  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  5189  001492  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  5190  001496  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  5194  00149A  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  5195  00149E  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  5196  0014A2  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  5197  0014A6  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  5198                           
  5199                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 418:     while (i < m) {
  5200  0014AA  D07B               	goto	l6646
  5201  0014AC                     l6638:
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 419:         l = floorf(h/u);
  5205  0014AC  C0A2  F01B         	movff	efgtoa@h,___fldiv@b
  5206  0014B0  C0A3  F01C         	movff	efgtoa@h+1,___fldiv@b+1
  5207  0014B4  C0A4  F01D         	movff	efgtoa@h+2,___fldiv@b+2
  5208  0014B8  C0A5  F01E         	movff	efgtoa@h+3,___fldiv@b+3
  5209  0014BC  C0B4  F01F         	movff	efgtoa@u,___fldiv@a
  5210  0014C0  C0B5  F020         	movff	efgtoa@u+1,___fldiv@a+1
  5211  0014C4  C0B6  F021         	movff	efgtoa@u+2,___fldiv@a+2
  5212  0014C8  C0B7  F022         	movff	efgtoa@u+3,___fldiv@a+3
  5213  0014CC  EC9A  F015         	call	___fldiv	;wreg free
  5214  0014D0  C01B  F034         	movff	?___fldiv,floorf@x
  5215  0014D4  C01C  F035         	movff	?___fldiv+1,floorf@x+1
  5216  0014D8  C01D  F036         	movff	?___fldiv+2,floorf@x+2
  5217  0014DC  C01E  F037         	movff	?___fldiv+3,floorf@x+3
  5218  0014E0  EC21  F019         	call	_floorf	;wreg free
  5219  0014E4  C034  F0A6         	movff	?_floorf,efgtoa@l
  5220  0014E8  C035  F0A7         	movff	?_floorf+1,efgtoa@l+1
  5221  0014EC  C036  F0A8         	movff	?_floorf+2,efgtoa@l+2
  5222  0014F0  C037  F0A9         	movff	?_floorf+3,efgtoa@l+3
  5223                           
  5224                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 420:         d = (int)l;
  5225  0014F4  C0A6  F007         	movff	efgtoa@l,___fltol@f1
  5226  0014F8  C0A7  F008         	movff	efgtoa@l+1,___fltol@f1+1
  5227  0014FC  C0A8  F009         	movff	efgtoa@l+2,___fltol@f1+2
  5228  001500  C0A9  F00A         	movff	efgtoa@l+3,___fltol@f1+3
  5229  001504  EC40  F01D         	call	___fltol	;wreg free
  5230  001508  C007  F098         	movff	?___fltol,efgtoa@d
  5231  00150C  C008  F099         	movff	?___fltol+1,efgtoa@d+1
  5232                           
  5233                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 421:         h -= l*u;
  5234  001510  C0A2  F058         	movff	efgtoa@h,___flsub@b
  5235  001514  C0A3  F059         	movff	efgtoa@h+1,___flsub@b+1
  5236  001518  C0A4  F05A         	movff	efgtoa@h+2,___flsub@b+2
  5237  00151C  C0A5  F05B         	movff	efgtoa@h+3,___flsub@b+3
  5238  001520  C0B4  F043         	movff	efgtoa@u,___flmul@a
  5239  001524  C0B5  F044         	movff	efgtoa@u+1,___flmul@a+1
  5240  001528  C0B6  F045         	movff	efgtoa@u+2,___flmul@a+2
  5241  00152C  C0B7  F046         	movff	efgtoa@u+3,___flmul@a+3
  5242  001530  C0A6  F03F         	movff	efgtoa@l,___flmul@b
  5243  001534  C0A7  F040         	movff	efgtoa@l+1,___flmul@b+1
  5244  001538  C0A8  F041         	movff	efgtoa@l+2,___flmul@b+2
  5245  00153C  C0A9  F042         	movff	efgtoa@l+3,___flmul@b+3
  5246  001540  EC6B  F012         	call	___flmul	;wreg free
  5247  001544  C03F  F05C         	movff	?___flmul,___flsub@a
  5248  001548  C040  F05D         	movff	?___flmul+1,___flsub@a+1
  5249  00154C  C041  F05E         	movff	?___flmul+2,___flsub@a+2
  5250  001550  C042  F05F         	movff	?___flmul+3,___flsub@a+3
  5251  001554  EC26  F021         	call	___flsub	;wreg free
  5252  001558  C058  F0A2         	movff	?___flsub,efgtoa@h
  5253  00155C  C059  F0A3         	movff	?___flsub+1,efgtoa@h+1
  5254  001560  C05A  F0A4         	movff	?___flsub+2,efgtoa@h+2
  5255  001564  C05B  F0A5         	movff	?___flsub+3,efgtoa@h+3
  5256                           
  5257                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 422:         u = u/10.0;
  5258  001568  C0B4  F01B         	movff	efgtoa@u,___fldiv@b
  5259  00156C  C0B5  F01C         	movff	efgtoa@u+1,___fldiv@b+1
  5260  001570  C0B6  F01D         	movff	efgtoa@u+2,___fldiv@b+2
  5261  001574  C0B7  F01E         	movff	efgtoa@u+3,___fldiv@b+3
  5262  001578  0E00               	movlw	0
  5263  00157A  6E1F               	movwf	___fldiv@a,c
  5264  00157C  0E00               	movlw	0
  5265  00157E  6E20               	movwf	___fldiv@a+1,c
  5266  001580  0E20               	movlw	32
  5267  001582  6E21               	movwf	___fldiv@a+2,c
  5268  001584  0E41               	movlw	65
  5269  001586  6E22               	movwf	___fldiv@a+3,c
  5270  001588  EC9A  F015         	call	___fldiv	;wreg free
  5271  00158C  C01B  F0B4         	movff	?___fldiv,efgtoa@u
  5272  001590  C01C  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  5273  001594  C01D  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  5274  001598  C01E  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  5275                           
  5276                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 423:         ++i;
  5277  00159C  0100               	movlb	0	; () banked
  5278  00159E  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  5279  0015A0  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  5280  0015A2                     l6646:
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 418:     while (i < m) {
  5284  0015A2  5194               	movf	efgtoa@m& (0+255),w,b
  5285  0015A4  5DAA               	subwf	efgtoa@i& (0+255),w,b
  5286  0015A6  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  5287  0015A8  0A80               	xorlw	128
  5288  0015AA  6E6B               	movwf	??_efgtoa& (0+255),c
  5289  0015AC  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  5290  0015AE  0A80               	xorlw	128
  5291  0015B0  586B               	subwfb	??_efgtoa& (0+255),w,c
  5292  0015B2  A0D8               	btfss	status,0,c
  5293  0015B4  D77B               	goto	l6638
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  5297  0015B6  C0B4  F03F         	movff	efgtoa@u,___flmul@b
  5298  0015BA  C0B5  F040         	movff	efgtoa@u+1,___flmul@b+1
  5299  0015BE  C0B6  F041         	movff	efgtoa@u+2,___flmul@b+2
  5300  0015C2  C0B7  F042         	movff	efgtoa@u+3,___flmul@b+3
  5301  0015C6  0E00               	movlw	0
  5302  0015C8  6E43               	movwf	___flmul@a,c
  5303  0015CA  0E00               	movlw	0
  5304  0015CC  6E44               	movwf	___flmul@a+1,c
  5305  0015CE  0EA0               	movlw	160
  5306  0015D0  6E45               	movwf	___flmul@a+2,c
  5307  0015D2  0E40               	movlw	64
  5308  0015D4  6E46               	movwf	___flmul@a+3,c
  5309  0015D6  EC6B  F012         	call	___flmul	;wreg free
  5310  0015DA  C03F  F0A6         	movff	?___flmul,efgtoa@l
  5311  0015DE  C040  F0A7         	movff	?___flmul+1,efgtoa@l+1
  5312  0015E2  C041  F0A8         	movff	?___flmul+2,efgtoa@l+2
  5313  0015E6  C042  F0A9         	movff	?___flmul+3,efgtoa@l+3
  5314                           
  5315                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  5316  0015EA  C0A2  F058         	movff	efgtoa@h,___flge@ff1
  5317  0015EE  C0A3  F059         	movff	efgtoa@h+1,___flge@ff1+1
  5318  0015F2  C0A4  F05A         	movff	efgtoa@h+2,___flge@ff1+2
  5319  0015F6  C0A5  F05B         	movff	efgtoa@h+3,___flge@ff1+3
  5320  0015FA  C0A6  F05C         	movff	efgtoa@l,___flge@ff2
  5321  0015FE  C0A7  F05D         	movff	efgtoa@l+1,___flge@ff2+1
  5322  001602  C0A8  F05E         	movff	efgtoa@l+2,___flge@ff2+2
  5323  001606  C0A9  F05F         	movff	efgtoa@l+3,___flge@ff2+3
  5324  00160A  EC72  F01C         	call	___flge	;wreg free
  5325  00160E  B0D8               	btfsc	status,0,c
  5326  001610  D003               	goto	l6654
  5327                           
  5328                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  5329  001612  0E00               	movlw	0
  5330  001614  0100               	movlb	0	; () banked
  5331  001616  D018               	goto	L7
  5332  001618                     l6654:
  5333                           
  5334                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 432:         if ((h == l) && !(d % 2)) {
  5335  001618  C0A2  F007         	movff	efgtoa@h,___fleq@ff1
  5336  00161C  C0A3  F008         	movff	efgtoa@h+1,___fleq@ff1+1
  5337  001620  C0A4  F009         	movff	efgtoa@h+2,___fleq@ff1+2
  5338  001624  C0A5  F00A         	movff	efgtoa@h+3,___fleq@ff1+3
  5339  001628  C0A6  F00B         	movff	efgtoa@l,___fleq@ff2
  5340  00162C  C0A7  F00C         	movff	efgtoa@l+1,___fleq@ff2+1
  5341  001630  C0A8  F00D         	movff	efgtoa@l+2,___fleq@ff2+2
  5342  001634  C0A9  F00E         	movff	efgtoa@l+3,___fleq@ff2+3
  5343  001638  ECD5  F01E         	call	___fleq	;wreg free
  5344  00163C  A0D8               	btfss	status,0,c
  5345  00163E  D00B               	goto	l6660
  5346  001640  0100               	movlb	0	; () banked
  5347  001642  B198               	btfsc	efgtoa@d& (0+255),0,b
  5348  001644  D008               	goto	l6660
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 433:             l = 0.0;
  5352  001646  0E00               	movlw	0
  5353  001648                     L7:
  5354  001648  6FA6               	movwf	efgtoa@l& (0+255),b
  5355  00164A  0E00               	movlw	0
  5356  00164C  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  5357  00164E  0E00               	movlw	0
  5358  001650  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  5359  001652  0E00               	movlw	0
  5360  001654  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  5361  001656                     l6660:
  5362                           
  5363                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  5364  001656  C0AC  F007         	movff	efgtoa@g,___fladd@b
  5365  00165A  C0AD  F008         	movff	efgtoa@g+1,___fladd@b+1
  5366  00165E  C0AE  F009         	movff	efgtoa@g+2,___fladd@b+2
  5367  001662  C0AF  F00A         	movff	efgtoa@g+3,___fladd@b+3
  5368  001666  C0A6  F00B         	movff	efgtoa@l,___fladd@a
  5369  00166A  C0A7  F00C         	movff	efgtoa@l+1,___fladd@a+1
  5370  00166E  C0A8  F00D         	movff	efgtoa@l+2,___fladd@a+2
  5371  001672  C0A9  F00E         	movff	efgtoa@l+3,___fladd@a+3
  5372  001676  EC14  F014         	call	___fladd	;wreg free
  5373  00167A  C007  F0A2         	movff	?___fladd,efgtoa@h
  5374  00167E  C008  F0A3         	movff	?___fladd+1,efgtoa@h+1
  5375  001682  C009  F0A4         	movff	?___fladd+2,efgtoa@h+2
  5376  001686  C00A  F0A5         	movff	?___fladd+3,efgtoa@h+3
  5377                           
  5378                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  5379  00168A  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  5380  00168E  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  5381  001692  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  5382  001696  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  5383                           
  5384                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode == 'e') ? 0 : e;
  5385  00169A  0E65               	movlw	101
  5386  00169C  0100               	movlb	0	; () banked
  5387  00169E  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5388  0016A0  B4D8               	btfsc	status,2,c
  5389  0016A2  D005               	goto	l6668
  5390                           
  5391                           ; BSR set to: 0
  5392  0016A4  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  5393  0016A8  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  5394  0016AC  D004               	goto	l443
  5395  0016AE                     l6668:
  5396                           
  5397                           ; BSR set to: 0
  5398  0016AE  0E00               	movlw	0
  5399  0016B0  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  5400  0016B2  0E00               	movlw	0
  5401  0016B4  6F96               	movwf	efgtoa@ne& (0+255),b
  5402  0016B6                     l443:
  5403                           
  5404                           ; BSR set to: 0
  5405                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  5406  0016B6  0E00               	movlw	0
  5407  0016B8  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  5408  0016BA  0E00               	movlw	0
  5409  0016BC  6F92               	movwf	efgtoa@pp& (0+255),b
  5410                           
  5411                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  5412  0016BE  0E00               	movlw	0
  5413  0016C0  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  5414  0016C2  0E00               	movlw	0
  5415  0016C4  6F90               	movwf	efgtoa@t& (0+255),b
  5416                           
  5417                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  5418  0016C6  0E00               	movlw	0
  5419  0016C8  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  5420  0016CA  0E00               	movlw	0
  5421  0016CC  6FAA               	movwf	efgtoa@i& (0+255),b
  5422                           
  5423                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 446:     while ((i < m) && (n < (80 - 5))) {
  5424  0016CE  D0C6               	goto	l6718
  5425  0016D0                     l6670:
  5426                           
  5427                           ; BSR set to: 0
  5428                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 447:         l = floorf(h/u);
  5429  0016D0  C0A2  F01B         	movff	efgtoa@h,___fldiv@b
  5430  0016D4  C0A3  F01C         	movff	efgtoa@h+1,___fldiv@b+1
  5431  0016D8  C0A4  F01D         	movff	efgtoa@h+2,___fldiv@b+2
  5432  0016DC  C0A5  F01E         	movff	efgtoa@h+3,___fldiv@b+3
  5433  0016E0  C0B4  F01F         	movff	efgtoa@u,___fldiv@a
  5434  0016E4  C0B5  F020         	movff	efgtoa@u+1,___fldiv@a+1
  5435  0016E8  C0B6  F021         	movff	efgtoa@u+2,___fldiv@a+2
  5436  0016EC  C0B7  F022         	movff	efgtoa@u+3,___fldiv@a+3
  5437  0016F0  EC9A  F015         	call	___fldiv	;wreg free
  5438  0016F4  C01B  F034         	movff	?___fldiv,floorf@x
  5439  0016F8  C01C  F035         	movff	?___fldiv+1,floorf@x+1
  5440  0016FC  C01D  F036         	movff	?___fldiv+2,floorf@x+2
  5441  001700  C01E  F037         	movff	?___fldiv+3,floorf@x+3
  5442  001704  EC21  F019         	call	_floorf	;wreg free
  5443  001708  C034  F0A6         	movff	?_floorf,efgtoa@l
  5444  00170C  C035  F0A7         	movff	?_floorf+1,efgtoa@l+1
  5445  001710  C036  F0A8         	movff	?_floorf+2,efgtoa@l+2
  5446  001714  C037  F0A9         	movff	?_floorf+3,efgtoa@l+3
  5447                           
  5448                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 448:         d = (int)l;
  5449  001718  C0A6  F007         	movff	efgtoa@l,___fltol@f1
  5450  00171C  C0A7  F008         	movff	efgtoa@l+1,___fltol@f1+1
  5451  001720  C0A8  F009         	movff	efgtoa@l+2,___fltol@f1+2
  5452  001724  C0A9  F00A         	movff	efgtoa@l+3,___fltol@f1+3
  5453  001728  EC40  F01D         	call	___fltol	;wreg free
  5454  00172C  C007  F098         	movff	?___fltol,efgtoa@d
  5455  001730  C008  F099         	movff	?___fltol+1,efgtoa@d+1
  5456                           
  5457                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 449:         if (!(flags & (1 << 4)) && !d &&
      +                           (mode == 'g') && (ne < 0)) {
  5458  001734  0100               	movlb	0	; () banked
  5459  001736  B9F8               	btfsc	_flags& (0+255),4,b
  5460  001738  D00C               	goto	l6682
  5461                           
  5462                           ; BSR set to: 0
  5463  00173A  5198               	movf	efgtoa@d& (0+255),w,b
  5464  00173C  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5465  00173E  A4D8               	btfss	status,2,c
  5466  001740  D008               	goto	l6682
  5467                           
  5468                           ; BSR set to: 0
  5469  001742  0E67               	movlw	103
  5470  001744  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  5471  001746  B4D8               	btfsc	status,2,c
  5472                           
  5473                           ; BSR set to: 0
  5474  001748  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5475  00174A  D003               	goto	l6682
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 450:             ++t;
  5479  00174C  4B90               	infsnz	efgtoa@t& (0+255),f,b
  5480  00174E  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  5481                           
  5482                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 451:         } else {
  5483  001750  D039               	goto	l6710
  5484  001752                     l6682:
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 452:             if (!pp && (ne < 0)) {
  5488  001752  5192               	movf	efgtoa@pp& (0+255),w,b
  5489  001754  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5490  001756  B4D8               	btfsc	status,2,c
  5491                           
  5492                           ; BSR set to: 0
  5493  001758  AF97               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5494  00175A  D022               	goto	l6702
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 453:                 dbuf[n++] = '.';
  5498  00175C  0EA4               	movlw	low _dbuf
  5499  00175E  25B2               	addwf	efgtoa@n& (0+255),w,b
  5500  001760  6ED9               	movwf	fsr2l,c
  5501  001762  0E01               	movlw	high _dbuf
  5502  001764  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5503  001766  6EDA               	movwf	fsr2h,c
  5504  001768  0E2E               	movlw	46
  5505  00176A  6EDF               	movwf	indf2,c
  5506                           
  5507                           ; BSR set to: 0
  5508  00176C  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5509  00176E  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5510                           
  5511                           ; BSR set to: 0
  5512                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 454:                 --w;
  5513  001770  079F               	decf	efgtoa@w& (0+255),f,b
  5514  001772  A0D8               	btfss	status,0,c
  5515  001774  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 455:                 pp = 1;
  5519  001776  0E00               	movlw	0
  5520  001778  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  5521  00177A  0E01               	movlw	1
  5522  00177C  6F92               	movwf	efgtoa@pp& (0+255),b
  5523  00177E  D010               	goto	l6702
  5524  001780                     l6694:
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 458:                 dbuf[n++] = '0';
  5528  001780  0EA4               	movlw	low _dbuf
  5529  001782  25B2               	addwf	efgtoa@n& (0+255),w,b
  5530  001784  6ED9               	movwf	fsr2l,c
  5531  001786  0E01               	movlw	high _dbuf
  5532  001788  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5533  00178A  6EDA               	movwf	fsr2h,c
  5534  00178C  0E30               	movlw	48
  5535  00178E  6EDF               	movwf	indf2,c
  5536                           
  5537                           ; BSR set to: 0
  5538  001790  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5539  001792  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 459:                 --w;
  5543  001794  079F               	decf	efgtoa@w& (0+255),f,b
  5544  001796  A0D8               	btfss	status,0,c
  5545  001798  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 460:                 --t;
  5549  00179A  0790               	decf	efgtoa@t& (0+255),f,b
  5550  00179C  A0D8               	btfss	status,0,c
  5551  00179E  0791               	decf	(efgtoa@t+1)& (0+255),f,b
  5552  0017A0                     l6702:
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 457:             while (t) {
  5556  0017A0  5190               	movf	efgtoa@t& (0+255),w,b
  5557  0017A2  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5558  0017A4  A4D8               	btfss	status,2,c
  5559  0017A6  D7EC               	goto	l6694
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 462:             dbuf[n++] = '0' + d;
  5563  0017A8  0EA4               	movlw	low _dbuf
  5564  0017AA  25B2               	addwf	efgtoa@n& (0+255),w,b
  5565  0017AC  6ED9               	movwf	fsr2l,c
  5566  0017AE  0E01               	movlw	high _dbuf
  5567  0017B0  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5568  0017B2  6EDA               	movwf	fsr2h,c
  5569  0017B4  5198               	movf	efgtoa@d& (0+255),w,b
  5570  0017B6  0F30               	addlw	48
  5571  0017B8  6EDF               	movwf	indf2,c
  5572                           
  5573                           ; BSR set to: 0
  5574  0017BA  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5575  0017BC  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5576                           
  5577                           ; BSR set to: 0
  5578                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 463:             --w;
  5579  0017BE  079F               	decf	efgtoa@w& (0+255),f,b
  5580  0017C0  A0D8               	btfss	status,0,c
  5581  0017C2  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5582  0017C4                     l6710:
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 465:         h -= l*u;
  5586  0017C4  C0A2  F058         	movff	efgtoa@h,___flsub@b
  5587  0017C8  C0A3  F059         	movff	efgtoa@h+1,___flsub@b+1
  5588  0017CC  C0A4  F05A         	movff	efgtoa@h+2,___flsub@b+2
  5589  0017D0  C0A5  F05B         	movff	efgtoa@h+3,___flsub@b+3
  5590  0017D4  C0B4  F043         	movff	efgtoa@u,___flmul@a
  5591  0017D8  C0B5  F044         	movff	efgtoa@u+1,___flmul@a+1
  5592  0017DC  C0B6  F045         	movff	efgtoa@u+2,___flmul@a+2
  5593  0017E0  C0B7  F046         	movff	efgtoa@u+3,___flmul@a+3
  5594  0017E4  C0A6  F03F         	movff	efgtoa@l,___flmul@b
  5595  0017E8  C0A7  F040         	movff	efgtoa@l+1,___flmul@b+1
  5596  0017EC  C0A8  F041         	movff	efgtoa@l+2,___flmul@b+2
  5597  0017F0  C0A9  F042         	movff	efgtoa@l+3,___flmul@b+3
  5598  0017F4  EC6B  F012         	call	___flmul	;wreg free
  5599  0017F8  C03F  F05C         	movff	?___flmul,___flsub@a
  5600  0017FC  C040  F05D         	movff	?___flmul+1,___flsub@a+1
  5601  001800  C041  F05E         	movff	?___flmul+2,___flsub@a+2
  5602  001804  C042  F05F         	movff	?___flmul+3,___flsub@a+3
  5603  001808  EC26  F021         	call	___flsub	;wreg free
  5604  00180C  C058  F0A2         	movff	?___flsub,efgtoa@h
  5605  001810  C059  F0A3         	movff	?___flsub+1,efgtoa@h+1
  5606  001814  C05A  F0A4         	movff	?___flsub+2,efgtoa@h+2
  5607  001818  C05B  F0A5         	movff	?___flsub+3,efgtoa@h+3
  5608                           
  5609                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 466:         u = u/10.0;
  5610  00181C  C0B4  F01B         	movff	efgtoa@u,___fldiv@b
  5611  001820  C0B5  F01C         	movff	efgtoa@u+1,___fldiv@b+1
  5612  001824  C0B6  F01D         	movff	efgtoa@u+2,___fldiv@b+2
  5613  001828  C0B7  F01E         	movff	efgtoa@u+3,___fldiv@b+3
  5614  00182C  0E00               	movlw	0
  5615  00182E  6E1F               	movwf	___fldiv@a,c
  5616  001830  0E00               	movlw	0
  5617  001832  6E20               	movwf	___fldiv@a+1,c
  5618  001834  0E20               	movlw	32
  5619  001836  6E21               	movwf	___fldiv@a+2,c
  5620  001838  0E41               	movlw	65
  5621  00183A  6E22               	movwf	___fldiv@a+3,c
  5622  00183C  EC9A  F015         	call	___fldiv	;wreg free
  5623  001840  C01B  F0B4         	movff	?___fldiv,efgtoa@u
  5624  001844  C01C  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  5625  001848  C01D  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  5626  00184C  C01E  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  5627                           
  5628                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 467:         --ne;
  5629  001850  0100               	movlb	0	; () banked
  5630  001852  0796               	decf	efgtoa@ne& (0+255),f,b
  5631  001854  A0D8               	btfss	status,0,c
  5632  001856  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 468:         ++i;
  5636  001858  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  5637  00185A  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  5638  00185C                     l6718:
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 446:     while ((i < m) && (n < (80 - 5))) {
  5642  00185C  5194               	movf	efgtoa@m& (0+255),w,b
  5643  00185E  5DAA               	subwf	efgtoa@i& (0+255),w,b
  5644  001860  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  5645  001862  0A80               	xorlw	128
  5646  001864  6E6B               	movwf	??_efgtoa& (0+255),c
  5647  001866  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  5648  001868  0A80               	xorlw	128
  5649  00186A  586B               	subwfb	??_efgtoa& (0+255),w,c
  5650  00186C  B0D8               	btfsc	status,0,c
  5651  00186E  D008               	goto	u8900
  5652                           
  5653                           ; BSR set to: 0
  5654  001870  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5655  001872  D72E               	goto	l6670
  5656  001874  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  5657  001876  E104               	bnz	u8900
  5658  001878  0E4B               	movlw	75
  5659  00187A  5DB2               	subwf	efgtoa@n& (0+255),w,b
  5660  00187C  A0D8               	btfss	status,0,c
  5661  00187E  D728               	goto	l6670
  5662  001880                     u8900:
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (flags & (1 << 4))) {
  5666  001880  5192               	movf	efgtoa@pp& (0+255),w,b
  5667  001882  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5668  001884  B4D8               	btfsc	status,2,c
  5669                           
  5670                           ; BSR set to: 0
  5671  001886  A9F8               	btfss	_flags& (0+255),4,b
  5672  001888  D00A               	goto	l6730
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++] = '.';
  5676  00188A  0EA4               	movlw	low _dbuf
  5677  00188C  25B2               	addwf	efgtoa@n& (0+255),w,b
  5678  00188E  6ED9               	movwf	fsr2l,c
  5679  001890  0E01               	movlw	high _dbuf
  5680  001892  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5681  001894  6EDA               	movwf	fsr2h,c
  5682  001896  0E2E               	movlw	46
  5683  001898  6EDF               	movwf	indf2,c
  5684                           
  5685                           ; BSR set to: 0
  5686  00189A  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  5687  00189C  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  5688  00189E                     l6730:
  5689                           
  5690                           ; BSR set to: 0
  5691                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\0';
  5692  00189E  0EA4               	movlw	low _dbuf
  5693  0018A0  25B2               	addwf	efgtoa@n& (0+255),w,b
  5694  0018A2  6ED9               	movwf	fsr2l,c
  5695  0018A4  0E01               	movlw	high _dbuf
  5696  0018A6  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5697  0018A8  6EDA               	movwf	fsr2h,c
  5698  0018AA  0E00               	movlw	0
  5699  0018AC  6EDF               	movwf	indf2,c
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 476:     if (nmode == 'e') {
  5703  0018AE  0E65               	movlw	101
  5704  0018B0  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  5705  0018B2  A4D8               	btfss	status,2,c
  5706  0018B4  D47F               	goto	l6542
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 477:         i = sizeof(dbuf) - 1;
  5710  0018B6  0E00               	movlw	0
  5711  0018B8  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  5712  0018BA  0E4F               	movlw	79
  5713  0018BC  6FAA               	movwf	efgtoa@i& (0+255),b
  5714                           
  5715                           ; BSR set to: 0
  5716                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] = '\0';
  5717  0018BE  0EA4               	movlw	low _dbuf
  5718  0018C0  25AA               	addwf	efgtoa@i& (0+255),w,b
  5719  0018C2  6ED9               	movwf	fsr2l,c
  5720  0018C4  0E01               	movlw	high _dbuf
  5721  0018C6  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5722  0018C8  6EDA               	movwf	fsr2h,c
  5723  0018CA  0E00               	movlw	0
  5724  0018CC  6EDF               	movwf	indf2,c
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 479:         sign = 0;
  5728  0018CE  0E00               	movlw	0
  5729  0018D0  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  5730  0018D2  0E00               	movlw	0
  5731  0018D4  6F9A               	movwf	efgtoa@sign& (0+255),b
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 480:         if (e < 0) {
  5735  0018D6  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  5736  0018D8  D008               	goto	l6746
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 481:             sign = 1;
  5740  0018DA  0E00               	movlw	0
  5741  0018DC  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  5742  0018DE  0E01               	movlw	1
  5743  0018E0  6F9A               	movwf	efgtoa@sign& (0+255),b
  5744                           
  5745                           ; BSR set to: 0
  5746                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 482:             e = -e;
  5747  0018E2  6DB0               	negf	efgtoa@e& (0+255),b
  5748  0018E4  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
  5749  0018E6  B0D8               	btfsc	status,0,c
  5750  0018E8  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  5751  0018EA                     l6746:
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  5755  0018EA  0E00               	movlw	0
  5756  0018EC  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  5757  0018EE  0E02               	movlw	2
  5758  0018F0  6F9C               	movwf	efgtoa@p& (0+255),b
  5759                           
  5760                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 485:         while (e || (0 < p)) {
  5761  0018F2  D02B               	goto	l6758
  5762  0018F4                     l6748:
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 486:             --i;
  5766  0018F4  07AA               	decf	efgtoa@i& (0+255),f,b
  5767  0018F6  A0D8               	btfss	status,0,c
  5768  0018F8  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  5769                           
  5770                           ; BSR set to: 0
  5771                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 487:             dbuf[i] = '0' + (e % 10);
  5772  0018FA  0EA4               	movlw	low _dbuf
  5773  0018FC  25AA               	addwf	efgtoa@i& (0+255),w,b
  5774  0018FE  6ED9               	movwf	fsr2l,c
  5775  001900  0E01               	movlw	high _dbuf
  5776  001902  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5777  001904  6EDA               	movwf	fsr2h,c
  5778  001906  C0B0  F007         	movff	efgtoa@e,___awmod@dividend
  5779  00190A  C0B1  F008         	movff	efgtoa@e+1,___awmod@dividend+1
  5780  00190E  0E00               	movlw	0
  5781  001910  6E0A               	movwf	___awmod@divisor+1,c
  5782  001912  0E0A               	movlw	10
  5783  001914  6E09               	movwf	___awmod@divisor,c
  5784  001916  EC9D  F01F         	call	___awmod	;wreg free
  5785  00191A  5007               	movf	?___awmod,w,c
  5786  00191C  0F30               	addlw	48
  5787  00191E  6EDF               	movwf	indf2,c
  5788                           
  5789                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 488:             e = e / 10;
  5790  001920  C0B0  F007         	movff	efgtoa@e,___awdiv@dividend
  5791  001924  C0B1  F008         	movff	efgtoa@e+1,___awdiv@dividend+1
  5792  001928  0E00               	movlw	0
  5793  00192A  6E0A               	movwf	___awdiv@divisor+1,c
  5794  00192C  0E0A               	movlw	10
  5795  00192E  6E09               	movwf	___awdiv@divisor,c
  5796  001930  EC1A  F01F         	call	___awdiv	;wreg free
  5797  001934  C007  F0B0         	movff	?___awdiv,efgtoa@e
  5798  001938  C008  F0B1         	movff	?___awdiv+1,efgtoa@e+1
  5799                           
  5800                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 489:             --p;
  5801  00193C  0100               	movlb	0	; () banked
  5802  00193E  079C               	decf	efgtoa@p& (0+255),f,b
  5803  001940  A0D8               	btfss	status,0,c
  5804  001942  079D               	decf	(efgtoa@p+1)& (0+255),f,b
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 490:             --w;
  5808  001944  079F               	decf	efgtoa@w& (0+255),f,b
  5809  001946  A0D8               	btfss	status,0,c
  5810  001948  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5811  00194A                     l6758:
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 485:         while (e || (0 < p)) {
  5815  00194A  51B0               	movf	efgtoa@e& (0+255),w,b
  5816  00194C  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5817  00194E  A4D8               	btfss	status,2,c
  5818  001950  D7D1               	goto	l6748
  5819                           
  5820                           ; BSR set to: 0
  5821  001952  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5822  001954  D005               	goto	u8960
  5823  001956  519D               	movf	(efgtoa@p+1)& (0+255),w,b
  5824  001958  E1CD               	bnz	l6748
  5825  00195A  059C               	decf	efgtoa@p& (0+255),w,b
  5826  00195C  B0D8               	btfsc	status,0,c
  5827  00195E  D7CA               	goto	l6748
  5828  001960                     u8960:
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 492:         --i;
  5832  001960  07AA               	decf	efgtoa@i& (0+255),f,b
  5833  001962  A0D8               	btfss	status,0,c
  5834  001964  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  5835                           
  5836                           ; BSR set to: 0
  5837                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] = sign ? '-' : '+';
  5838  001966  519A               	movf	efgtoa@sign& (0+255),w,b
  5839  001968  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5840  00196A  A4D8               	btfss	status,2,c
  5841  00196C  D004               	goto	l6768
  5842                           
  5843                           ; BSR set to: 0
  5844  00196E  0E00               	movlw	0
  5845  001970  6F8B               	movwf	(_efgtoa$927+1)& (0+255),b
  5846  001972  0E2B               	movlw	43
  5847  001974  D003               	goto	L8
  5848  001976                     l6768:
  5849                           
  5850                           ; BSR set to: 0
  5851  001976  0E00               	movlw	0
  5852  001978  6F8B               	movwf	(_efgtoa$927+1)& (0+255),b
  5853  00197A  0E2D               	movlw	45
  5854  00197C                     L8:
  5855  00197C  6F8A               	movwf	_efgtoa$927& (0+255),b
  5856                           
  5857                           ; BSR set to: 0
  5858  00197E  0EA4               	movlw	low _dbuf
  5859  001980  25AA               	addwf	efgtoa@i& (0+255),w,b
  5860  001982  6ED9               	movwf	fsr2l,c
  5861  001984  0E01               	movlw	high _dbuf
  5862  001986  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5863  001988  6EDA               	movwf	fsr2h,c
  5864  00198A  C08A  FFDF         	movff	_efgtoa$927,indf2
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 494:         --w;
  5868  00198E  079F               	decf	efgtoa@w& (0+255),f,b
  5869  001990  A0D8               	btfss	status,0,c
  5870  001992  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5871                           
  5872                           ; BSR set to: 0
  5873                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] = (0 ? isupper((int)c) :
      +                           ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5874  001994  07AA               	decf	efgtoa@i& (0+255),f,b
  5875  001996  A0D8               	btfss	status,0,c
  5876  001998  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  5877                           
  5878                           ; BSR set to: 0
  5879  00199A  0EBF               	movlw	191
  5880  00199C  6E6B               	movwf	??_efgtoa& (0+255),c
  5881  00199E  0EFF               	movlw	255
  5882  0019A0  6E6C               	movwf	(??_efgtoa+1)& (0+255),c
  5883  0019A2  506A               	movf	efgtoa@c,w,c
  5884  0019A4  6E6D               	movwf	(??_efgtoa+2)& (0+255),c
  5885  0019A6  6A6E               	clrf	(??_efgtoa+3)& (0+255),c
  5886  0019A8  506B               	movf	??_efgtoa,w,c
  5887  0019AA  266D               	addwf	??_efgtoa+2,f,c
  5888  0019AC  506C               	movf	??_efgtoa+1,w,c
  5889  0019AE  226E               	addwfc	??_efgtoa+3,f,c
  5890  0019B0  506E               	movf	??_efgtoa+3,w,c
  5891  0019B2  E106               	bnz	u8980
  5892  0019B4  0E1A               	movlw	26
  5893  0019B6  5C6D               	subwf	??_efgtoa+2,w,c
  5894  0019B8  B0D8               	btfsc	status,0,c
  5895  0019BA  D002               	goto	u8980
  5896  0019BC  0E01               	movlw	1
  5897  0019BE  D001               	goto	u8990
  5898  0019C0                     u8980:
  5899  0019C0  0E00               	movlw	0
  5900  0019C2                     u8990:
  5901  0019C2  6F8E               	movwf	_efgtoa$929& (0+255),b
  5902  0019C4  6B8F               	clrf	(_efgtoa$929+1)& (0+255),b
  5903                           
  5904                           ; BSR set to: 0
  5905  0019C6  518E               	movf	_efgtoa$929& (0+255),w,b
  5906  0019C8  118F               	iorwf	(_efgtoa$929+1)& (0+255),w,b
  5907  0019CA  A4D8               	btfss	status,2,c
  5908  0019CC  D004               	goto	l6784
  5909                           
  5910                           ; BSR set to: 0
  5911  0019CE  0E00               	movlw	0
  5912  0019D0  6F8D               	movwf	(_efgtoa$928+1)& (0+255),b
  5913  0019D2  0E65               	movlw	101
  5914  0019D4  D003               	goto	L9
  5915  0019D6                     l6784:
  5916                           
  5917                           ; BSR set to: 0
  5918  0019D6  0E00               	movlw	0
  5919  0019D8  6F8D               	movwf	(_efgtoa$928+1)& (0+255),b
  5920  0019DA  0E45               	movlw	69
  5921  0019DC                     L9:
  5922  0019DC  6F8C               	movwf	_efgtoa$928& (0+255),b
  5923                           
  5924                           ; BSR set to: 0
  5925  0019DE  0EA4               	movlw	low _dbuf
  5926  0019E0  25AA               	addwf	efgtoa@i& (0+255),w,b
  5927  0019E2  6ED9               	movwf	fsr2l,c
  5928  0019E4  0E01               	movlw	high _dbuf
  5929  0019E6  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5930  0019E8  6EDA               	movwf	fsr2h,c
  5931  0019EA  C08C  FFDF         	movff	_efgtoa$928,indf2
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 497:         --w;
  5935  0019EE  079F               	decf	efgtoa@w& (0+255),f,b
  5936  0019F0  A0D8               	btfss	status,0,c
  5937  0019F2  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  5938                           
  5939                           ; BSR set to: 0
  5940                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 498:         strcpy(&dbuf[n], &dbuf[i]);
  5941  0019F4  0EA4               	movlw	low _dbuf
  5942  0019F6  25B2               	addwf	efgtoa@n& (0+255),w,b
  5943  0019F8  6E07               	movwf	strcpy@dest,c
  5944  0019FA  0E01               	movlw	high _dbuf
  5945  0019FC  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5946  0019FE  6E08               	movwf	strcpy@dest+1,c
  5947  001A00  0EA4               	movlw	low _dbuf
  5948  001A02  25AA               	addwf	efgtoa@i& (0+255),w,b
  5949  001A04  6E09               	movwf	strcpy@src,c
  5950  001A06  0E01               	movlw	high _dbuf
  5951  001A08  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5952  001A0A  6E0A               	movwf	strcpy@src+1,c
  5953  001A0C  EC5F  F020         	call	_strcpy	;wreg free
  5954  001A10  EFDA  F008         	goto	l6542
  5955  001A14                     __end_of_efgtoa:
  5956                           	opt callstack 0
  5957                           
  5958 ;; *************** function _tolower *****************
  5959 ;; Defined at:
  5960 ;;		line 4 in file "D:\MPLAB\pic\sources\c99\common\tolower.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  c               2   12[COMRAM] int 
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;		None
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  2   12[COMRAM] int 
  5967 ;; Registers used:
  5968 ;;		wreg, status,2, status,0
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5978 ;;Total ram usage:        8 bytes
  5979 ;; Hardware stack levels used:    1
  5980 ;; Hardware stack levels required when called:    5
  5981 ;; This function calls:
  5982 ;;		_isupper
  5983 ;; This function is called by:
  5984 ;;		_efgtoa
  5985 ;;		_vfpfcnvrt
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           	psect	text13
  5990  004200                     __ptext13:
  5991                           	opt callstack 0
  5992  004200                     _tolower:
  5993                           	opt callstack 21
  5994                           
  5995                           ;incstack = 0
  5996  004200  0EBF               	movlw	191
  5997  004202  6E0F               	movwf	??_tolower& (0+255),c
  5998  004204  0EFF               	movlw	255
  5999  004206  6E10               	movwf	(??_tolower+1)& (0+255),c
  6000  004208  C00D  F011         	movff	tolower@c,??_tolower+2
  6001  00420C  C00E  F012         	movff	tolower@c+1,??_tolower+3
  6002  004210  500F               	movf	??_tolower,w,c
  6003  004212  2611               	addwf	??_tolower+2,f,c
  6004  004214  5010               	movf	??_tolower+1,w,c
  6005  004216  2212               	addwfc	??_tolower+3,f,c
  6006  004218  5012               	movf	??_tolower+3,w,c
  6007  00421A  E106               	bnz	u7340
  6008  00421C  0E1A               	movlw	26
  6009  00421E  5C11               	subwf	??_tolower+2,w,c
  6010  004220  B0D8               	btfsc	status,0,c
  6011  004222  D002               	goto	u7340
  6012  004224  0E01               	movlw	1
  6013  004226  D001               	goto	u7350
  6014  004228                     u7340:
  6015  004228  0E00               	movlw	0
  6016  00422A                     u7350:
  6017  00422A  6E13               	movwf	_tolower$1538,c
  6018  00422C  6A14               	clrf	_tolower$1538+1,c
  6019  00422E  5013               	movf	_tolower$1538,w,c
  6020  004230  1014               	iorwf	_tolower$1538+1,w,c
  6021  004232  B4D8               	btfsc	status,2,c
  6022  004234  D006               	goto	l1328
  6023  004236  0E20               	movlw	32
  6024  004238  100D               	iorwf	tolower@c,w,c
  6025  00423A  6E0D               	movwf	?_tolower,c
  6026  00423C  500E               	movf	tolower@c+1,w,c
  6027  00423E  6E0E               	movwf	?_tolower+1,c
  6028  004240  0012               	return	
  6029  004242                     l1328:
  6030  004242  C00D  F00D         	movff	tolower@c,?_tolower
  6031  004246  C00E  F00E         	movff	tolower@c+1,?_tolower+1
  6032  00424A  0012               	return		;funcret
  6033  00424C                     __end_of_tolower:
  6034                           	opt callstack 0
  6035                           
  6036 ;; *************** function _isupper *****************
  6037 ;; Defined at:
  6038 ;;		line 5 in file "D:\MPLAB\pic\sources\c99\common\isupper.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  c               2    6[COMRAM] int 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  2    6[COMRAM] int 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6054 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6055 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6056 ;;Total ram usage:        6 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    4
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		_efgtoa
  6063 ;;		_vfpfcnvrt
  6064 ;;		_tolower
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           	psect	text14
  6069  004420                     __ptext14:
  6070                           	opt callstack 0
  6071  004420                     _isupper:
  6072                           	opt callstack 21
  6073                           
  6074                           ;incstack = 0
  6075  004420  0EBF               	movlw	191
  6076  004422  6E09               	movwf	??_isupper& (0+255),c
  6077  004424  0EFF               	movlw	255
  6078  004426  6E0A               	movwf	(??_isupper+1)& (0+255),c
  6079  004428  C007  F00B         	movff	isupper@c,??_isupper+2
  6080  00442C  C008  F00C         	movff	isupper@c+1,??_isupper+3
  6081  004430  5009               	movf	??_isupper,w,c
  6082  004432  260B               	addwf	??_isupper+2,f,c
  6083  004434  500A               	movf	??_isupper+1,w,c
  6084  004436  220C               	addwfc	??_isupper+3,f,c
  6085  004438  500C               	movf	??_isupper+3,w,c
  6086  00443A  E106               	bnz	u6790
  6087  00443C  0E1A               	movlw	26
  6088  00443E  5C0B               	subwf	??_isupper+2,w,c
  6089  004440  B0D8               	btfsc	status,0,c
  6090  004442  D002               	goto	u6790
  6091  004444  0E01               	movlw	1
  6092  004446  D001               	goto	u6800
  6093  004448                     u6790:
  6094  004448  0E00               	movlw	0
  6095  00444A                     u6800:
  6096  00444A  6E07               	movwf	?_isupper,c
  6097  00444C  6A08               	clrf	?_isupper+1,c
  6098  00444E  0012               	return		;funcret
  6099  004450                     __end_of_isupper:
  6100                           	opt callstack 0
  6101                           
  6102 ;; *************** function _strcpy *****************
  6103 ;; Defined at:
  6104 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\strcpy.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  dest            2    6[COMRAM] PTR unsigned char 
  6107 ;;		 -> dbuf(80), 
  6108 ;;  src             2    8[COMRAM] PTR const unsigned char 
  6109 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  6110 ;;		 -> dbuf(80), 
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;  d               2   14[COMRAM] PTR unsigned char 
  6113 ;;		 -> dbuf(80), 
  6114 ;;  s               2   12[COMRAM] PTR const unsigned char 
  6115 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  6116 ;;		 -> dbuf(80), 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  2    6[COMRAM] PTR unsigned char 
  6119 ;; Registers used:
  6120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;Total ram usage:       10 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; Hardware stack levels required when called:    4
  6133 ;; This function calls:
  6134 ;;		Nothing
  6135 ;; This function is called by:
  6136 ;;		_efgtoa
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text15
  6141  0040BE                     __ptext15:
  6142                           	opt callstack 0
  6143  0040BE                     _strcpy:
  6144                           	opt callstack 21
  6145                           
  6146                           ;incstack = 0
  6147  0040BE  C009  F00D         	movff	strcpy@src,strcpy@s
  6148  0040C2  C00A  F00E         	movff	strcpy@src+1,strcpy@s+1
  6149  0040C6  C007  F00F         	movff	strcpy@dest,strcpy@d
  6150  0040CA  C008  F010         	movff	strcpy@dest+1,strcpy@d+1
  6151  0040CE                     l5850:
  6152  0040CE  500D               	movf	strcpy@s,w,c
  6153  0040D0  6E0B               	movwf	??_strcpy& (0+255),c
  6154  0040D2  500E               	movf	strcpy@s+1,w,c
  6155  0040D4  6E0C               	movwf	(??_strcpy+1)& (0+255),c
  6156  0040D6  4A0D               	infsnz	strcpy@s,f,c
  6157  0040D8  2A0E               	incf	strcpy@s+1,f,c
  6158  0040DA  C00B  FFF6         	movff	??_strcpy,tblptrl
  6159  0040DE  C00C  FFF7         	movff	??_strcpy+1,tblptrh
  6160  0040E2  0E00               	movlw	low (__smallconst shr (0+16))
  6161  0040E4  6EF8               	movwf	tblptru,c
  6162  0040E6  C00F  FFD9         	movff	strcpy@d,fsr2l
  6163  0040EA  C010  FFDA         	movff	strcpy@d+1,fsr2h
  6164  0040EE  4A0F               	infsnz	strcpy@d,f,c
  6165  0040F0  2A10               	incf	strcpy@d+1,f,c
  6166  0040F2  0E0F               	movlw	(high __ramtop+-1)
  6167  0040F4  64F7               	cpfsgt	tblptrh,c
  6168  0040F6  D003               	bra	u7327
  6169  0040F8  0008               	tblrd		*
  6170  0040FA  50F5               	movf	tablat,w,c
  6171  0040FC  D005               	bra	u7320
  6172  0040FE                     u7327:
  6173  0040FE  CFF6 FFE1          	movff	tblptrl,fsr1l
  6174  004102  CFF7 FFE2          	movff	tblptrh,fsr1h
  6175  004106  50E7               	movf	indf1,w,c
  6176  004108                     u7320:
  6177  004108  6EDF               	movwf	indf2,c
  6178  00410A  50DF               	movf	indf2,w,c
  6179  00410C  B4D8               	btfsc	status,2,c
  6180  00410E  0012               	return	
  6181  004110  D7DE               	goto	l5850
  6182  004112                     __end_of_strcpy:
  6183                           	opt callstack 0
  6184                           
  6185 ;; *************** function _floorf *****************
  6186 ;; Defined at:
  6187 ;;		line 3 in file "D:\MPLAB\pic\sources\c99\common\floorf.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  x               4   51[COMRAM] float 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;  u               4   67[COMRAM] struct .
  6192 ;;  m               4   61[COMRAM] unsigned long 
  6193 ;;  e               2   65[COMRAM] int 
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  4   51[COMRAM] float 
  6196 ;; Registers used:
  6197 ;;		wreg, status,2, status,0
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6203 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6204 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6205 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6206 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6207 ;;Total ram usage:       20 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; Hardware stack levels required when called:    4
  6210 ;; This function calls:
  6211 ;;		Nothing
  6212 ;; This function is called by:
  6213 ;;		_efgtoa
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           	psect	text16
  6218  003242                     __ptext16:
  6219                           	opt callstack 0
  6220  003242                     _floorf:
  6221                           	opt callstack 21
  6222                           
  6223                           ;incstack = 0
  6224  003242  C0EA  F044         	movff	floorf@F524,floorf@u
  6225  003246  C0EB  F045         	movff	floorf@F524+1,floorf@u+1
  6226  00324A  C0EC  F046         	movff	floorf@F524+2,floorf@u+2
  6227  00324E  C0ED  F047         	movff	floorf@F524+3,floorf@u+3
  6228  003252  C034  F044         	movff	floorf@x,floorf@u
  6229  003256  C035  F045         	movff	floorf@x+1,floorf@u+1
  6230  00325A  C036  F046         	movff	floorf@x+2,floorf@u+2
  6231  00325E  C037  F047         	movff	floorf@x+3,floorf@u+3
  6232  003262  0E81               	movlw	129
  6233  003264  6E38               	movwf	??_floorf& (0+255),c
  6234  003266  0EFF               	movlw	255
  6235  003268  6E39               	movwf	(??_floorf+1)& (0+255),c
  6236  00326A  C044  F03A         	movff	floorf@u,??_floorf+2
  6237  00326E  C045  F03B         	movff	floorf@u+1,??_floorf+3
  6238  003272  C046  F03C         	movff	floorf@u+2,??_floorf+4
  6239  003276  C047  F03D         	movff	floorf@u+3,??_floorf+5
  6240  00327A  0E18               	movlw	24
  6241  00327C  D005               	goto	u7370
  6242  00327E                     u7375:
  6243  00327E  90D8               	bcf	status,0,c
  6244  003280  323D               	rrcf	??_floorf+5,f,c
  6245  003282  323C               	rrcf	??_floorf+4,f,c
  6246  003284  323B               	rrcf	??_floorf+3,f,c
  6247  003286  323A               	rrcf	??_floorf+2,f,c
  6248  003288                     u7370:
  6249  003288  2EE8               	decfsz	wreg,f,c
  6250  00328A  D7F9               	goto	u7375
  6251  00328C  503A               	movf	??_floorf+2,w,c
  6252  00328E  2438               	addwf	??_floorf,w,c
  6253  003290  6E42               	movwf	floorf@e,c
  6254  003292  0E00               	movlw	0
  6255  003294  2039               	addwfc	??_floorf+1,w,c
  6256  003296  6E43               	movwf	floorf@e+1,c
  6257  003298  BE43               	btfsc	floorf@e+1,7,c
  6258  00329A  D00F               	goto	l5868
  6259  00329C  5043               	movf	floorf@e+1,w,c
  6260  00329E  E104               	bnz	u7380
  6261  0032A0  0E17               	movlw	23
  6262  0032A2  5C42               	subwf	floorf@e,w,c
  6263  0032A4  A0D8               	btfss	status,0,c
  6264  0032A6  D009               	goto	l5868
  6265  0032A8                     u7380:
  6266  0032A8  C034  F034         	movff	floorf@x,?_floorf
  6267  0032AC  C035  F035         	movff	floorf@x+1,?_floorf+1
  6268  0032B0  C036  F036         	movff	floorf@x+2,?_floorf+2
  6269  0032B4  C037  F037         	movff	floorf@x+3,?_floorf+3
  6270  0032B8  0012               	return	
  6271  0032BA                     l5868:
  6272  0032BA  BE43               	btfsc	floorf@e+1,7,c
  6273  0032BC  D05E               	goto	l5878
  6274  0032BE  C042  F038         	movff	floorf@e,??_floorf
  6275  0032C2  0EFF               	movlw	255
  6276  0032C4  6E39               	movwf	(??_floorf+1)& (0+255),c
  6277  0032C6  0EFF               	movlw	255
  6278  0032C8  6E3A               	movwf	(??_floorf+2)& (0+255),c
  6279  0032CA  0E7F               	movlw	127
  6280  0032CC  6E3B               	movwf	(??_floorf+3)& (0+255),c
  6281  0032CE  0E00               	movlw	0
  6282  0032D0  6E3C               	movwf	(??_floorf+4)& (0+255),c
  6283  0032D2                     u7405:
  6284  0032D2  6638               	tstfsz	??_floorf,c
  6285  0032D4  D001               	goto	u7406
  6286  0032D6  D007               	goto	u7407
  6287  0032D8                     u7406:
  6288  0032D8  343C               	rlcf	??_floorf+4,w,c
  6289  0032DA  323C               	rrcf	??_floorf+4,f,c
  6290  0032DC  323B               	rrcf	??_floorf+3,f,c
  6291  0032DE  323A               	rrcf	??_floorf+2,f,c
  6292  0032E0  3239               	rrcf	??_floorf+1,f,c
  6293  0032E2  2E38               	decfsz	??_floorf,f,c
  6294  0032E4  D7F6               	goto	u7405
  6295  0032E6                     u7407:
  6296  0032E6  C039  F03E         	movff	??_floorf+1,floorf@m
  6297  0032EA  C03A  F03F         	movff	??_floorf+2,floorf@m+1
  6298  0032EE  C03B  F040         	movff	??_floorf+3,floorf@m+2
  6299  0032F2  C03C  F041         	movff	??_floorf+4,floorf@m+3
  6300  0032F6  503E               	movf	floorf@m,w,c
  6301  0032F8  1444               	andwf	floorf@u,w,c
  6302  0032FA  6E38               	movwf	??_floorf& (0+255),c
  6303  0032FC  503F               	movf	floorf@m+1,w,c
  6304  0032FE  1445               	andwf	floorf@u+1,w,c
  6305  003300  6E39               	movwf	(??_floorf+1)& (0+255),c
  6306  003302  5040               	movf	floorf@m+2,w,c
  6307  003304  1446               	andwf	floorf@u+2,w,c
  6308  003306  6E3A               	movwf	(??_floorf+2)& (0+255),c
  6309  003308  5041               	movf	floorf@m+3,w,c
  6310  00330A  1447               	andwf	floorf@u+3,w,c
  6311  00330C  6E3B               	movwf	(??_floorf+3)& (0+255),c
  6312  00330E  5038               	movf	??_floorf,w,c
  6313  003310  1039               	iorwf	??_floorf+1,w,c
  6314  003312  103A               	iorwf	??_floorf+2,w,c
  6315  003314  103B               	iorwf	??_floorf+3,w,c
  6316  003316  B4D8               	btfsc	status,2,c
  6317  003318  D7C7               	goto	u7380
  6318  00331A  C044  F038         	movff	floorf@u,??_floorf
  6319  00331E  C045  F039         	movff	floorf@u+1,??_floorf+1
  6320  003322  C046  F03A         	movff	floorf@u+2,??_floorf+2
  6321  003326  C047  F03B         	movff	floorf@u+3,??_floorf+3
  6322  00332A  0E20               	movlw	32
  6323  00332C  D005               	goto	u7420
  6324  00332E                     u7425:
  6325  00332E  90D8               	bcf	status,0,c
  6326  003330  323B               	rrcf	??_floorf+3,f,c
  6327  003332  323A               	rrcf	??_floorf+2,f,c
  6328  003334  3239               	rrcf	??_floorf+1,f,c
  6329  003336  3238               	rrcf	??_floorf,f,c
  6330  003338                     u7420:
  6331  003338  2EE8               	decfsz	wreg,f,c
  6332  00333A  D7F9               	goto	u7425
  6333  00333C  5038               	movf	??_floorf,w,c
  6334  00333E  1039               	iorwf	??_floorf+1,w,c
  6335  003340  103A               	iorwf	??_floorf+2,w,c
  6336  003342  103B               	iorwf	??_floorf+3,w,c
  6337  003344  B4D8               	btfsc	status,2,c
  6338  003346  D008               	goto	l1248
  6339  003348  503E               	movf	floorf@m,w,c
  6340  00334A  2644               	addwf	floorf@u,f,c
  6341  00334C  503F               	movf	floorf@m+1,w,c
  6342  00334E  2245               	addwfc	floorf@u+1,f,c
  6343  003350  5040               	movf	floorf@m+2,w,c
  6344  003352  2246               	addwfc	floorf@u+2,f,c
  6345  003354  5041               	movf	floorf@m+3,w,c
  6346  003356  2247               	addwfc	floorf@u+3,f,c
  6347  003358                     l1248:
  6348  003358  1C3E               	comf	floorf@m,w,c
  6349  00335A  6E38               	movwf	??_floorf& (0+255),c
  6350  00335C  1C3F               	comf	floorf@m+1,w,c
  6351  00335E  6E39               	movwf	(??_floorf+1)& (0+255),c
  6352  003360  1C40               	comf	floorf@m+2,w,c
  6353  003362  6E3A               	movwf	(??_floorf+2)& (0+255),c
  6354  003364  1C41               	comf	floorf@m+3,w,c
  6355  003366  6E3B               	movwf	(??_floorf+3)& (0+255),c
  6356  003368  5038               	movf	??_floorf,w,c
  6357  00336A  1644               	andwf	floorf@u,f,c
  6358  00336C  5039               	movf	??_floorf+1,w,c
  6359  00336E  1645               	andwf	floorf@u+1,f,c
  6360  003370  503A               	movf	??_floorf+2,w,c
  6361  003372  1646               	andwf	floorf@u+2,f,c
  6362  003374  503B               	movf	??_floorf+3,w,c
  6363  003376  1647               	andwf	floorf@u+3,f,c
  6364  003378  D036               	goto	l5886
  6365  00337A                     l5878:
  6366  00337A  C044  F038         	movff	floorf@u,??_floorf
  6367  00337E  C045  F039         	movff	floorf@u+1,??_floorf+1
  6368  003382  C046  F03A         	movff	floorf@u+2,??_floorf+2
  6369  003386  C047  F03B         	movff	floorf@u+3,??_floorf+3
  6370  00338A  0E20               	movlw	32
  6371  00338C  D005               	goto	u7440
  6372  00338E                     u7445:
  6373  00338E  90D8               	bcf	status,0,c
  6374  003390  323B               	rrcf	??_floorf+3,f,c
  6375  003392  323A               	rrcf	??_floorf+2,f,c
  6376  003394  3239               	rrcf	??_floorf+1,f,c
  6377  003396  3238               	rrcf	??_floorf,f,c
  6378  003398                     u7440:
  6379  003398  2EE8               	decfsz	wreg,f,c
  6380  00339A  D7F9               	goto	u7445
  6381  00339C  5038               	movf	??_floorf,w,c
  6382  00339E  1039               	iorwf	??_floorf+1,w,c
  6383  0033A0  103A               	iorwf	??_floorf+2,w,c
  6384  0033A2  103B               	iorwf	??_floorf+3,w,c
  6385  0033A4  A4D8               	btfss	status,2,c
  6386  0033A6  D008               	goto	l5882
  6387  0033A8  0E00               	movlw	0
  6388  0033AA  6E44               	movwf	floorf@u,c
  6389  0033AC  0E00               	movlw	0
  6390  0033AE  6E45               	movwf	floorf@u+1,c
  6391  0033B0  0E00               	movlw	0
  6392  0033B2  6E46               	movwf	floorf@u+2,c
  6393  0033B4  0E00               	movlw	0
  6394  0033B6  D016               	goto	L10
  6395  0033B8                     l5882:
  6396  0033B8  90D8               	bcf	status,0,c
  6397  0033BA  3444               	rlcf	floorf@u,w,c
  6398  0033BC  6E38               	movwf	??_floorf& (0+255),c
  6399  0033BE  3445               	rlcf	floorf@u+1,w,c
  6400  0033C0  6E39               	movwf	(??_floorf+1)& (0+255),c
  6401  0033C2  3446               	rlcf	floorf@u+2,w,c
  6402  0033C4  6E3A               	movwf	(??_floorf+2)& (0+255),c
  6403  0033C6  3447               	rlcf	floorf@u+3,w,c
  6404  0033C8  6E3B               	movwf	(??_floorf+3)& (0+255),c
  6405  0033CA  5038               	movf	??_floorf,w,c
  6406  0033CC  1039               	iorwf	??_floorf+1,w,c
  6407  0033CE  103A               	iorwf	??_floorf+2,w,c
  6408  0033D0  103B               	iorwf	??_floorf+3,w,c
  6409  0033D2  B4D8               	btfsc	status,2,c
  6410  0033D4  D008               	goto	l5886
  6411  0033D6  0E00               	movlw	0
  6412  0033D8  6E44               	movwf	floorf@u,c
  6413  0033DA  0E00               	movlw	0
  6414  0033DC  6E45               	movwf	floorf@u+1,c
  6415  0033DE  0E80               	movlw	128
  6416  0033E0  6E46               	movwf	floorf@u+2,c
  6417  0033E2  0EBF               	movlw	191
  6418  0033E4                     L10:
  6419  0033E4  6E47               	movwf	floorf@u+3,c
  6420  0033E6                     l5886:
  6421  0033E6  C044  F034         	movff	floorf@u,?_floorf
  6422  0033EA  C045  F035         	movff	floorf@u+1,?_floorf+1
  6423  0033EE  C046  F036         	movff	floorf@u+2,?_floorf+2
  6424  0033F2  C047  F037         	movff	floorf@u+3,?_floorf+3
  6425  0033F6  0012               	return		;funcret
  6426  0033F8                     __end_of_floorf:
  6427                           	opt callstack 0
  6428                           
  6429 ;; *************** function ___fpclassifyf *****************
  6430 ;; Defined at:
  6431 ;;		line 4 in file "D:\MPLAB\pic\sources\c99\common\__fpclassifyf.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  x               4    6[COMRAM] float 
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;  u               4   16[COMRAM] struct .
  6436 ;;  e               2   14[COMRAM] int 
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  2    6[COMRAM] int 
  6439 ;; Registers used:
  6440 ;;		wreg, status,2, status,0
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6446 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6447 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6449 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;Total ram usage:       14 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; Hardware stack levels required when called:    4
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		_efgtoa
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text17
  6461  0039B4                     __ptext17:
  6462                           	opt callstack 0
  6463  0039B4                     ___fpclassifyf:
  6464                           	opt callstack 21
  6465                           
  6466                           ;incstack = 0
  6467  0039B4  C0EE  F011         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6468  0039B8  C0EF  F012         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6469  0039BC  C0F0  F013         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6470  0039C0  C0F1  F014         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6471  0039C4  C007  F011         	movff	___fpclassifyf@x,___fpclassifyf@u
  6472  0039C8  C008  F012         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6473  0039CC  C009  F013         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6474  0039D0  C00A  F014         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6475  0039D4  C011  F00B         	movff	___fpclassifyf@u,??___fpclassifyf
  6476  0039D8  C012  F00C         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6477  0039DC  C013  F00D         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6478  0039E0  C014  F00E         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6479  0039E4  0E18               	movlw	24
  6480  0039E6  D005               	goto	u7250
  6481  0039E8                     u7255:
  6482  0039E8  90D8               	bcf	status,0,c
  6483  0039EA  320E               	rrcf	??___fpclassifyf+3,f,c
  6484  0039EC  320D               	rrcf	??___fpclassifyf+2,f,c
  6485  0039EE  320C               	rrcf	??___fpclassifyf+1,f,c
  6486  0039F0  320B               	rrcf	??___fpclassifyf,f,c
  6487  0039F2                     u7250:
  6488  0039F2  2EE8               	decfsz	wreg,f,c
  6489  0039F4  D7F9               	goto	u7255
  6490  0039F6  500B               	movf	??___fpclassifyf,w,c
  6491  0039F8  6E0F               	movwf	___fpclassifyf@e,c
  6492  0039FA  6A10               	clrf	___fpclassifyf@e+1,c
  6493  0039FC  500F               	movf	___fpclassifyf@e,w,c
  6494  0039FE  1010               	iorwf	___fpclassifyf@e+1,w,c
  6495  003A00  A4D8               	btfss	status,2,c
  6496  003A02  D019               	goto	l5838
  6497  003A04  90D8               	bcf	status,0,c
  6498  003A06  3411               	rlcf	___fpclassifyf@u,w,c
  6499  003A08  6E0B               	movwf	??___fpclassifyf& (0+255),c
  6500  003A0A  3412               	rlcf	___fpclassifyf@u+1,w,c
  6501  003A0C  6E0C               	movwf	(??___fpclassifyf+1)& (0+255),c
  6502  003A0E  3413               	rlcf	___fpclassifyf@u+2,w,c
  6503  003A10  6E0D               	movwf	(??___fpclassifyf+2)& (0+255),c
  6504  003A12  3414               	rlcf	___fpclassifyf@u+3,w,c
  6505  003A14  6E0E               	movwf	(??___fpclassifyf+3)& (0+255),c
  6506  003A16  500B               	movf	??___fpclassifyf,w,c
  6507  003A18  100C               	iorwf	??___fpclassifyf+1,w,c
  6508  003A1A  100D               	iorwf	??___fpclassifyf+2,w,c
  6509  003A1C  100E               	iorwf	??___fpclassifyf+3,w,c
  6510  003A1E  A4D8               	btfss	status,2,c
  6511  003A20  D005               	goto	l5834
  6512  003A22  0E00               	movlw	0
  6513  003A24  6E08               	movwf	?___fpclassifyf+1,c
  6514  003A26  0E02               	movlw	2
  6515  003A28  6E07               	movwf	?___fpclassifyf,c
  6516  003A2A  0012               	return	
  6517  003A2C                     l5834:
  6518  003A2C  0E00               	movlw	0
  6519  003A2E  6E08               	movwf	?___fpclassifyf+1,c
  6520  003A30  0E03               	movlw	3
  6521  003A32  6E07               	movwf	?___fpclassifyf,c
  6522  003A34  0012               	return	
  6523  003A36                     l5838:
  6524  003A36  280F               	incf	___fpclassifyf@e,w,c
  6525  003A38  1010               	iorwf	___fpclassifyf@e+1,w,c
  6526  003A3A  A4D8               	btfss	status,2,c
  6527  003A3C  D01C               	goto	l5844
  6528  003A3E  C011  F00B         	movff	___fpclassifyf@u,??___fpclassifyf
  6529  003A42  C012  F00C         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6530  003A46  C013  F00D         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6531  003A4A  C014  F00E         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6532  003A4E  0E09               	movlw	9
  6533  003A50                     u7295:
  6534  003A50  90D8               	bcf	status,0,c
  6535  003A52  360B               	rlcf	??___fpclassifyf,f,c
  6536  003A54  360C               	rlcf	??___fpclassifyf+1,f,c
  6537  003A56  360D               	rlcf	??___fpclassifyf+2,f,c
  6538  003A58  360E               	rlcf	??___fpclassifyf+3,f,c
  6539  003A5A  2EE8               	decfsz	wreg,f,c
  6540  003A5C  D7F9               	goto	u7295
  6541  003A5E  500B               	movf	??___fpclassifyf,w,c
  6542  003A60  100C               	iorwf	??___fpclassifyf+1,w,c
  6543  003A62  100D               	iorwf	??___fpclassifyf+2,w,c
  6544  003A64  100E               	iorwf	??___fpclassifyf+3,w,c
  6545  003A66  A4D8               	btfss	status,2,c
  6546  003A68  D002               	goto	u7300
  6547  003A6A  0E01               	movlw	1
  6548  003A6C  D001               	goto	u7310
  6549  003A6E                     u7300:
  6550  003A6E  0E00               	movlw	0
  6551  003A70                     u7310:
  6552  003A70  6E07               	movwf	?___fpclassifyf,c
  6553  003A72  6A08               	clrf	?___fpclassifyf+1,c
  6554  003A74  0012               	return	
  6555  003A76                     l5844:
  6556  003A76  0E00               	movlw	0
  6557  003A78  6E08               	movwf	?___fpclassifyf+1,c
  6558  003A7A  0E04               	movlw	4
  6559  003A7C  6E07               	movwf	?___fpclassifyf,c
  6560  003A7E  0012               	return		;funcret
  6561  003A80                     __end_of___fpclassifyf:
  6562                           	opt callstack 0
  6563                           
  6564 ;; *************** function ___fltol *****************
  6565 ;; Defined at:
  6566 ;;		line 43 in file "D:\MPLAB\pic\sources\c99\common\fltol.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  f1              4    6[COMRAM] int 
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;  exp1            1   15[COMRAM] unsigned char 
  6571 ;;  sign1           1   14[COMRAM] unsigned char 
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  4    6[COMRAM] long 
  6574 ;; Registers used:
  6575 ;;		wreg, status,2, status,0
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6582 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6583 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6584 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6585 ;;Total ram usage:       10 bytes
  6586 ;; Hardware stack levels used:    1
  6587 ;; Hardware stack levels required when called:    4
  6588 ;; This function calls:
  6589 ;;		Nothing
  6590 ;; This function is called by:
  6591 ;;		_efgtoa
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           
  6595                           	psect	text18
  6596  003A80                     __ptext18:
  6597                           	opt callstack 0
  6598  003A80                     ___fltol:
  6599                           	opt callstack 21
  6600                           
  6601                           ;incstack = 0
  6602  003A80  3409               	rlcf	___fltol@f1+2,w,c
  6603  003A82  340A               	rlcf	___fltol@f1+3,w,c
  6604  003A84  6E10               	movwf	___fltol@exp1,c
  6605  003A86  5010               	movf	___fltol@exp1,w,c
  6606  003A88  A4D8               	btfss	status,2,c
  6607  003A8A  D009               	goto	l6386
  6608  003A8C                     u8250:
  6609  003A8C  0E00               	movlw	0
  6610  003A8E  6E07               	movwf	?___fltol,c
  6611  003A90  0E00               	movlw	0
  6612  003A92  6E08               	movwf	?___fltol+1,c
  6613  003A94  0E00               	movlw	0
  6614  003A96  6E09               	movwf	?___fltol+2,c
  6615  003A98  0E00               	movlw	0
  6616  003A9A  6E0A               	movwf	?___fltol+3,c
  6617  003A9C  0012               	return	
  6618  003A9E                     l6386:
  6619  003A9E  C007  F00B         	movff	___fltol@f1,??___fltol
  6620  003AA2  C008  F00C         	movff	___fltol@f1+1,??___fltol+1
  6621  003AA6  C009  F00D         	movff	___fltol@f1+2,??___fltol+2
  6622  003AAA  C00A  F00E         	movff	___fltol@f1+3,??___fltol+3
  6623  003AAE  0E20               	movlw	32
  6624  003AB0  D005               	goto	u8260
  6625  003AB2                     u8265:
  6626  003AB2  90D8               	bcf	status,0,c
  6627  003AB4  320E               	rrcf	??___fltol+3,f,c
  6628  003AB6  320D               	rrcf	??___fltol+2,f,c
  6629  003AB8  320C               	rrcf	??___fltol+1,f,c
  6630  003ABA  320B               	rrcf	??___fltol,f,c
  6631  003ABC                     u8260:
  6632  003ABC  2EE8               	decfsz	wreg,f,c
  6633  003ABE  D7F9               	goto	u8265
  6634  003AC0  500B               	movf	??___fltol,w,c
  6635  003AC2  6E0F               	movwf	___fltol@sign1,c
  6636  003AC4  8E09               	bsf	___fltol@f1+2,7,c
  6637  003AC6  0EFF               	movlw	255
  6638  003AC8  1607               	andwf	___fltol@f1,f,c
  6639  003ACA  0EFF               	movlw	255
  6640  003ACC  1608               	andwf	___fltol@f1+1,f,c
  6641  003ACE  0EFF               	movlw	255
  6642  003AD0  1609               	andwf	___fltol@f1+2,f,c
  6643  003AD2  0E00               	movlw	0
  6644  003AD4  160A               	andwf	___fltol@f1+3,f,c
  6645  003AD6  0E96               	movlw	150
  6646  003AD8  5E10               	subwf	___fltol@exp1,f,c
  6647  003ADA  AE10               	btfss	___fltol@exp1,7,c
  6648  003ADC  D00D               	goto	l6406
  6649  003ADE  5010               	movf	___fltol@exp1,w,c
  6650  003AE0  0A80               	xorlw	128
  6651  003AE2  0F97               	addlw	151
  6652  003AE4  A0D8               	btfss	status,0,c
  6653  003AE6  D7D2               	goto	u8250
  6654  003AE8                     l6402:
  6655  003AE8  90D8               	bcf	status,0,c
  6656  003AEA  320A               	rrcf	___fltol@f1+3,f,c
  6657  003AEC  3209               	rrcf	___fltol@f1+2,f,c
  6658  003AEE  3208               	rrcf	___fltol@f1+1,f,c
  6659  003AF0  3207               	rrcf	___fltol@f1,f,c
  6660  003AF2  3E10               	incfsz	___fltol@exp1,f,c
  6661  003AF4  D7F9               	goto	l6402
  6662  003AF6  D00D               	goto	u8300
  6663  003AF8                     l6406:
  6664  003AF8  0E1F               	movlw	31
  6665  003AFA  6410               	cpfsgt	___fltol@exp1,c
  6666  003AFC  D007               	goto	l6414
  6667  003AFE  D7C6               	goto	u8250
  6668  003B00                     l6412:
  6669  003B00  90D8               	bcf	status,0,c
  6670  003B02  3607               	rlcf	___fltol@f1,f,c
  6671  003B04  3608               	rlcf	___fltol@f1+1,f,c
  6672  003B06  3609               	rlcf	___fltol@f1+2,f,c
  6673  003B08  360A               	rlcf	___fltol@f1+3,f,c
  6674  003B0A  0610               	decf	___fltol@exp1,f,c
  6675  003B0C                     l6414:
  6676  003B0C  5010               	movf	___fltol@exp1,w,c
  6677  003B0E  A4D8               	btfss	status,2,c
  6678  003B10  D7F7               	goto	l6412
  6679  003B12                     u8300:
  6680  003B12  500F               	movf	___fltol@sign1,w,c
  6681  003B14  B4D8               	btfsc	status,2,c
  6682  003B16  D008               	goto	l6420
  6683  003B18  1E0A               	comf	___fltol@f1+3,f,c
  6684  003B1A  1E09               	comf	___fltol@f1+2,f,c
  6685  003B1C  1E08               	comf	___fltol@f1+1,f,c
  6686  003B1E  6C07               	negf	___fltol@f1,c
  6687  003B20  0E00               	movlw	0
  6688  003B22  2208               	addwfc	___fltol@f1+1,f,c
  6689  003B24  2209               	addwfc	___fltol@f1+2,f,c
  6690  003B26  220A               	addwfc	___fltol@f1+3,f,c
  6691  003B28                     l6420:
  6692  003B28  C007  F007         	movff	___fltol@f1,?___fltol
  6693  003B2C  C008  F008         	movff	___fltol@f1+1,?___fltol+1
  6694  003B30  C009  F009         	movff	___fltol@f1+2,?___fltol+2
  6695  003B34  C00A  F00A         	movff	___fltol@f1+3,?___fltol+3
  6696  003B38  0012               	return		;funcret
  6697  003B3A                     __end_of___fltol:
  6698                           	opt callstack 0
  6699                           
  6700 ;; *************** function ___flsub *****************
  6701 ;; Defined at:
  6702 ;;		line 245 in file "D:\MPLAB\pic\sources\c99\common\sprcadd.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;  b               4   87[COMRAM] long 
  6705 ;;  a               4   91[COMRAM] long 
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;		None
  6708 ;; Return value:  Size  Location     Type
  6709 ;;                  4   87[COMRAM] long 
  6710 ;; Registers used:
  6711 ;;		wreg, status,2, status,0, cstack
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6717 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6720 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6721 ;;Total ram usage:        8 bytes
  6722 ;; Hardware stack levels used:    1
  6723 ;; Hardware stack levels required when called:    5
  6724 ;; This function calls:
  6725 ;;		___fladd
  6726 ;; This function is called by:
  6727 ;;		_main
  6728 ;;		_efgtoa
  6729 ;; This function uses a non-reentrant model
  6730 ;;
  6731                           
  6732                           	psect	text19
  6733  00424C                     __ptext19:
  6734                           	opt callstack 0
  6735  00424C                     ___flsub:
  6736                           	opt callstack 20
  6737                           
  6738                           ;incstack = 0
  6739  00424C  0E00               	movlw	0
  6740  00424E  1A5C               	xorwf	___flsub@a,f,c
  6741  004250  0E00               	movlw	0
  6742  004252  1A5D               	xorwf	___flsub@a+1,f,c
  6743  004254  0E00               	movlw	0
  6744  004256  1A5E               	xorwf	___flsub@a+2,f,c
  6745  004258  0E80               	movlw	128
  6746  00425A  1A5F               	xorwf	___flsub@a+3,f,c
  6747  00425C  C058  F007         	movff	___flsub@b,___fladd@b
  6748  004260  C059  F008         	movff	___flsub@b+1,___fladd@b+1
  6749  004264  C05A  F009         	movff	___flsub@b+2,___fladd@b+2
  6750  004268  C05B  F00A         	movff	___flsub@b+3,___fladd@b+3
  6751  00426C  C05C  F00B         	movff	___flsub@a,___fladd@a
  6752  004270  C05D  F00C         	movff	___flsub@a+1,___fladd@a+1
  6753  004274  C05E  F00D         	movff	___flsub@a+2,___fladd@a+2
  6754  004278  C05F  F00E         	movff	___flsub@a+3,___fladd@a+3
  6755  00427C  EC14  F014         	call	___fladd	;wreg free
  6756  004280  C007  F058         	movff	?___fladd,?___flsub
  6757  004284  C008  F059         	movff	?___fladd+1,?___flsub+1
  6758  004288  C009  F05A         	movff	?___fladd+2,?___flsub+2
  6759  00428C  C00A  F05B         	movff	?___fladd+3,?___flsub+3
  6760  004290  0012               	return		;funcret
  6761  004292                     __end_of___flsub:
  6762                           	opt callstack 0
  6763                           
  6764 ;; *************** function ___fladd *****************
  6765 ;; Defined at:
  6766 ;;		line 10 in file "D:\MPLAB\pic\sources\c99\common\sprcadd.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;  b               4    6[COMRAM] long 
  6769 ;;  a               4   10[COMRAM] long 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;  grs             1   21[COMRAM] unsigned char 
  6772 ;;  bexp            1   20[COMRAM] unsigned char 
  6773 ;;  aexp            1   19[COMRAM] unsigned char 
  6774 ;;  signs           1   18[COMRAM] unsigned char 
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  4    6[COMRAM] unsigned char 
  6777 ;; Registers used:
  6778 ;;		wreg, status,2, status,0
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6784 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6785 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6786 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6787 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6788 ;;Total ram usage:       16 bytes
  6789 ;; Hardware stack levels used:    1
  6790 ;; Hardware stack levels required when called:    4
  6791 ;; This function calls:
  6792 ;;		Nothing
  6793 ;; This function is called by:
  6794 ;;		_main
  6795 ;;		_efgtoa
  6796 ;;		___flsub
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           	psect	text20
  6801  002828                     __ptext20:
  6802                           	opt callstack 0
  6803  002828                     ___fladd:
  6804                           	opt callstack 20
  6805                           
  6806                           ;incstack = 0
  6807  002828  500A               	movf	___fladd@b+3,w,c
  6808  00282A  0B80               	andlw	128
  6809  00282C  6E13               	movwf	___fladd@signs,c
  6810  00282E  500A               	movf	___fladd@b+3,w,c
  6811  002830  240A               	addwf	___fladd@b+3,w,c
  6812  002832  6E15               	movwf	___fladd@bexp,c
  6813  002834  BE09               	btfsc	___fladd@b+2,7,c
  6814  002836  8015               	bsf	___fladd@bexp,0,c
  6815  002838  5015               	movf	___fladd@bexp,w,c
  6816  00283A  B4D8               	btfsc	status,2,c
  6817  00283C  D00D               	goto	l5614
  6818  00283E  2815               	incf	___fladd@bexp,w,c
  6819  002840  A4D8               	btfss	status,2,c
  6820  002842  D008               	goto	l5610
  6821  002844  0E00               	movlw	0
  6822  002846  6E07               	movwf	___fladd@b,c
  6823  002848  0E00               	movlw	0
  6824  00284A  6E08               	movwf	___fladd@b+1,c
  6825  00284C  0E00               	movlw	0
  6826  00284E  6E09               	movwf	___fladd@b+2,c
  6827  002850  0E00               	movlw	0
  6828  002852  6E0A               	movwf	___fladd@b+3,c
  6829  002854                     l5610:
  6830  002854  8E09               	bsf	___fladd@b+2,7,c
  6831  002856  D006               	goto	L11
  6832  002858                     l5614:
  6833  002858  0E00               	movlw	0
  6834  00285A  6E07               	movwf	___fladd@b,c
  6835  00285C  0E00               	movlw	0
  6836  00285E  6E08               	movwf	___fladd@b+1,c
  6837  002860  0E00               	movlw	0
  6838  002862  6E09               	movwf	___fladd@b+2,c
  6839  002864                     L11:
  6840  002864  0E00               	movlw	0
  6841  002866  6E0A               	movwf	___fladd@b+3,c
  6842  002868  500E               	movf	___fladd@a+3,w,c
  6843  00286A  0B80               	andlw	128
  6844  00286C  6E14               	movwf	___fladd@aexp,c
  6845  00286E  5013               	movf	___fladd@signs,w,c
  6846  002870  1814               	xorwf	___fladd@aexp,w,c
  6847  002872  A4D8               	btfss	status,2,c
  6848  002874  8C13               	bsf	___fladd@signs,6,c
  6849  002876  500E               	movf	___fladd@a+3,w,c
  6850  002878  240E               	addwf	___fladd@a+3,w,c
  6851  00287A  6E14               	movwf	___fladd@aexp,c
  6852  00287C  BE0D               	btfsc	___fladd@a+2,7,c
  6853  00287E  8014               	bsf	___fladd@aexp,0,c
  6854  002880  5014               	movf	___fladd@aexp,w,c
  6855  002882  B4D8               	btfsc	status,2,c
  6856  002884  D00D               	goto	l5638
  6857  002886  2814               	incf	___fladd@aexp,w,c
  6858  002888  A4D8               	btfss	status,2,c
  6859  00288A  D008               	goto	l5634
  6860  00288C  0E00               	movlw	0
  6861  00288E  6E0B               	movwf	___fladd@a,c
  6862  002890  0E00               	movlw	0
  6863  002892  6E0C               	movwf	___fladd@a+1,c
  6864  002894  0E00               	movlw	0
  6865  002896  6E0D               	movwf	___fladd@a+2,c
  6866  002898  0E00               	movlw	0
  6867  00289A  6E0E               	movwf	___fladd@a+3,c
  6868  00289C                     l5634:
  6869  00289C  8E0D               	bsf	___fladd@a+2,7,c
  6870  00289E  D006               	goto	L12
  6871  0028A0                     l5638:
  6872  0028A0  0E00               	movlw	0
  6873  0028A2  6E0B               	movwf	___fladd@a,c
  6874  0028A4  0E00               	movlw	0
  6875  0028A6  6E0C               	movwf	___fladd@a+1,c
  6876  0028A8  0E00               	movlw	0
  6877  0028AA  6E0D               	movwf	___fladd@a+2,c
  6878  0028AC                     L12:
  6879  0028AC  0E00               	movlw	0
  6880  0028AE  6E0E               	movwf	___fladd@a+3,c
  6881  0028B0  5015               	movf	___fladd@bexp,w,c
  6882  0028B2  5C14               	subwf	___fladd@aexp,w,c
  6883  0028B4  B0D8               	btfsc	status,0,c
  6884  0028B6  D022               	goto	l5676
  6885  0028B8  AC13               	btfss	___fladd@signs,6,c
  6886  0028BA  D002               	goto	l5646
  6887  0028BC  0E80               	movlw	128
  6888  0028BE  1A13               	xorwf	___fladd@signs,f,c
  6889  0028C0                     l5646:
  6890  0028C0  C015  F016         	movff	___fladd@bexp,___fladd@grs
  6891  0028C4  C014  F015         	movff	___fladd@aexp,___fladd@bexp
  6892  0028C8  C016  F014         	movff	___fladd@grs,___fladd@aexp
  6893  0028CC  C007  F016         	movff	___fladd@b,___fladd@grs
  6894  0028D0  C00B  F007         	movff	___fladd@a,___fladd@b
  6895  0028D4  C016  F00B         	movff	___fladd@grs,___fladd@a
  6896  0028D8  C008  F016         	movff	___fladd@b+1,___fladd@grs
  6897  0028DC  C00C  F008         	movff	___fladd@a+1,___fladd@b+1
  6898  0028E0  C016  F00C         	movff	___fladd@grs,___fladd@a+1
  6899  0028E4  C009  F016         	movff	___fladd@b+2,___fladd@grs
  6900  0028E8  C00D  F009         	movff	___fladd@a+2,___fladd@b+2
  6901  0028EC  C016  F00D         	movff	___fladd@grs,___fladd@a+2
  6902  0028F0  C00A  F016         	movff	___fladd@b+3,___fladd@grs
  6903  0028F4  C00E  F00A         	movff	___fladd@a+3,___fladd@b+3
  6904  0028F8  C016  F00E         	movff	___fladd@grs,___fladd@a+3
  6905  0028FC                     l5676:
  6906  0028FC  0E00               	movlw	0
  6907  0028FE  6E16               	movwf	___fladd@grs,c
  6908  002900  5015               	movf	___fladd@bexp,w,c
  6909  002902  C014  F00F         	movff	___fladd@aexp,??___fladd
  6910  002906  6A10               	clrf	(??___fladd+1)& (0+255),c
  6911  002908  5E0F               	subwf	??___fladd,f,c
  6912  00290A  0E00               	movlw	0
  6913  00290C  5A10               	subwfb	??___fladd+1,f,c
  6914  00290E  BE10               	btfsc	??___fladd+1,7,c
  6915  002910  D02C               	goto	l1048
  6916  002912  5010               	movf	??___fladd+1,w,c
  6917  002914  E104               	bnz	u6900
  6918  002916  0E1A               	movlw	26
  6919  002918  5C0F               	subwf	??___fladd,w,c
  6920  00291A  A0D8               	btfss	status,0,c
  6921  00291C  D026               	goto	l1048
  6922  00291E                     u6900:
  6923  00291E  5007               	movf	___fladd@b,w,c
  6924  002920  1008               	iorwf	___fladd@b+1,w,c
  6925  002922  1009               	iorwf	___fladd@b+2,w,c
  6926  002924  100A               	iorwf	___fladd@b+3,w,c
  6927  002926  B4D8               	btfsc	status,2,c
  6928  002928  D002               	goto	u6910
  6929  00292A  0E01               	movlw	1
  6930  00292C  D001               	goto	u6920
  6931  00292E                     u6910:
  6932  00292E  0E00               	movlw	0
  6933  002930                     u6920:
  6934  002930  6E16               	movwf	___fladd@grs,c
  6935  002932  0E00               	movlw	0
  6936  002934  6E07               	movwf	___fladd@b,c
  6937  002936  0E00               	movlw	0
  6938  002938  6E08               	movwf	___fladd@b+1,c
  6939  00293A  0E00               	movlw	0
  6940  00293C  6E09               	movwf	___fladd@b+2,c
  6941  00293E  0E00               	movlw	0
  6942  002940  6E0A               	movwf	___fladd@b+3,c
  6943  002942  C014  F015         	movff	___fladd@aexp,___fladd@bexp
  6944  002946  D015               	goto	u6950
  6945  002948                     l1049:
  6946  002948  A016               	btfss	___fladd@grs,0,c
  6947  00294A  D005               	goto	l5688
  6948  00294C  90D8               	bcf	status,0,c
  6949  00294E  3016               	rrcf	___fladd@grs,w,c
  6950  002950  0901               	iorlw	1
  6951  002952  6E16               	movwf	___fladd@grs,c
  6952  002954  D002               	goto	l5690
  6953  002956                     l5688:
  6954  002956  90D8               	bcf	status,0,c
  6955  002958  3216               	rrcf	___fladd@grs,f,c
  6956  00295A                     l5690:
  6957  00295A  B007               	btfsc	___fladd@b,0,c
  6958  00295C  8E16               	bsf	___fladd@grs,7,c
  6959  00295E  340A               	rlcf	___fladd@b+3,w,c
  6960  002960  320A               	rrcf	___fladd@b+3,f,c
  6961  002962  3209               	rrcf	___fladd@b+2,f,c
  6962  002964  3208               	rrcf	___fladd@b+1,f,c
  6963  002966  3207               	rrcf	___fladd@b,f,c
  6964  002968  2A15               	incf	___fladd@bexp,f,c
  6965  00296A                     l1048:
  6966  00296A  5014               	movf	___fladd@aexp,w,c
  6967  00296C  5C15               	subwf	___fladd@bexp,w,c
  6968  00296E  A0D8               	btfss	status,0,c
  6969  002970  D7EB               	goto	l1049
  6970  002972                     u6950:
  6971  002972  BC13               	btfsc	___fladd@signs,6,c
  6972  002974  D028               	goto	l5722
  6973  002976  5015               	movf	___fladd@bexp,w,c
  6974  002978  A4D8               	btfss	status,2,c
  6975  00297A  D009               	goto	l5704
  6976  00297C  0E00               	movlw	0
  6977  00297E  6E07               	movwf	?___fladd,c
  6978  002980  0E00               	movlw	0
  6979  002982  6E08               	movwf	?___fladd+1,c
  6980  002984  0E00               	movlw	0
  6981  002986  6E09               	movwf	?___fladd+2,c
  6982  002988  0E00               	movlw	0
  6983  00298A  6E0A               	movwf	?___fladd+3,c
  6984  00298C  0012               	return	
  6985  00298E                     l5704:
  6986  00298E  500B               	movf	___fladd@a,w,c
  6987  002990  2607               	addwf	___fladd@b,f,c
  6988  002992  500C               	movf	___fladd@a+1,w,c
  6989  002994  2208               	addwfc	___fladd@b+1,f,c
  6990  002996  500D               	movf	___fladd@a+2,w,c
  6991  002998  2209               	addwfc	___fladd@b+2,f,c
  6992  00299A  500E               	movf	___fladd@a+3,w,c
  6993  00299C  220A               	addwfc	___fladd@b+3,f,c
  6994  00299E  A00A               	btfss	___fladd@b+3,0,c
  6995  0029A0  D071               	goto	u7080
  6996  0029A2  A016               	btfss	___fladd@grs,0,c
  6997  0029A4  D005               	goto	l5712
  6998  0029A6  90D8               	bcf	status,0,c
  6999  0029A8  3016               	rrcf	___fladd@grs,w,c
  7000  0029AA  0901               	iorlw	1
  7001  0029AC  6E16               	movwf	___fladd@grs,c
  7002  0029AE  D002               	goto	l5714
  7003  0029B0                     l5712:
  7004  0029B0  90D8               	bcf	status,0,c
  7005  0029B2  3216               	rrcf	___fladd@grs,f,c
  7006  0029B4                     l5714:
  7007  0029B4  B007               	btfsc	___fladd@b,0,c
  7008  0029B6  8E16               	bsf	___fladd@grs,7,c
  7009  0029B8  340A               	rlcf	___fladd@b+3,w,c
  7010  0029BA  320A               	rrcf	___fladd@b+3,f,c
  7011  0029BC  3209               	rrcf	___fladd@b+2,f,c
  7012  0029BE  3208               	rrcf	___fladd@b+1,f,c
  7013  0029C0  3207               	rrcf	___fladd@b,f,c
  7014  0029C2  2A15               	incf	___fladd@bexp,f,c
  7015  0029C4  D05F               	goto	u7080
  7016  0029C6                     l5722:
  7017  0029C6  500B               	movf	___fladd@a,w,c
  7018  0029C8  5C07               	subwf	___fladd@b,w,c
  7019  0029CA  500C               	movf	___fladd@a+1,w,c
  7020  0029CC  5808               	subwfb	___fladd@b+1,w,c
  7021  0029CE  500D               	movf	___fladd@a+2,w,c
  7022  0029D0  5809               	subwfb	___fladd@b+2,w,c
  7023  0029D2  500A               	movf	___fladd@b+3,w,c
  7024  0029D4  0A80               	xorlw	128
  7025  0029D6  6E0F               	movwf	??___fladd& (0+255),c
  7026  0029D8  500E               	movf	___fladd@a+3,w,c
  7027  0029DA  0A80               	xorlw	128
  7028  0029DC  580F               	subwfb	??___fladd& (0+255),w,c
  7029  0029DE  B0D8               	btfsc	status,0,c
  7030  0029E0  D025               	goto	l5732
  7031  0029E2  5007               	movf	___fladd@b,w,c
  7032  0029E4  5C0B               	subwf	___fladd@a,w,c
  7033  0029E6  6E0F               	movwf	??___fladd& (0+255),c
  7034  0029E8  5008               	movf	___fladd@b+1,w,c
  7035  0029EA  580C               	subwfb	___fladd@a+1,w,c
  7036  0029EC  6E10               	movwf	(??___fladd+1)& (0+255),c
  7037  0029EE  5009               	movf	___fladd@b+2,w,c
  7038  0029F0  580D               	subwfb	___fladd@a+2,w,c
  7039  0029F2  6E11               	movwf	(??___fladd+2)& (0+255),c
  7040  0029F4  500A               	movf	___fladd@b+3,w,c
  7041  0029F6  580E               	subwfb	___fladd@a+3,w,c
  7042  0029F8  6E12               	movwf	(??___fladd+3)& (0+255),c
  7043  0029FA  0EFF               	movlw	255
  7044  0029FC  240F               	addwf	??___fladd,w,c
  7045  0029FE  6E07               	movwf	___fladd@b,c
  7046  002A00  0EFF               	movlw	255
  7047  002A02  2010               	addwfc	??___fladd+1,w,c
  7048  002A04  6E08               	movwf	___fladd@b+1,c
  7049  002A06  0EFF               	movlw	255
  7050  002A08  2011               	addwfc	??___fladd+2,w,c
  7051  002A0A  6E09               	movwf	___fladd@b+2,c
  7052  002A0C  0EFF               	movlw	255
  7053  002A0E  2012               	addwfc	??___fladd+3,w,c
  7054  002A10  6E0A               	movwf	___fladd@b+3,c
  7055  002A12  0E80               	movlw	128
  7056  002A14  1A13               	xorwf	___fladd@signs,f,c
  7057  002A16  6C16               	negf	___fladd@grs,c
  7058  002A18  5016               	movf	___fladd@grs,w,c
  7059  002A1A  A4D8               	btfss	status,2,c
  7060  002A1C  D00F               	goto	l1064
  7061  002A1E  0E01               	movlw	1
  7062  002A20  2607               	addwf	___fladd@b,f,c
  7063  002A22  0E00               	movlw	0
  7064  002A24  2208               	addwfc	___fladd@b+1,f,c
  7065  002A26  2209               	addwfc	___fladd@b+2,f,c
  7066  002A28  220A               	addwfc	___fladd@b+3,f,c
  7067  002A2A  D008               	goto	l1064
  7068  002A2C                     l5732:
  7069  002A2C  500B               	movf	___fladd@a,w,c
  7070  002A2E  5E07               	subwf	___fladd@b,f,c
  7071  002A30  500C               	movf	___fladd@a+1,w,c
  7072  002A32  5A08               	subwfb	___fladd@b+1,f,c
  7073  002A34  500D               	movf	___fladd@a+2,w,c
  7074  002A36  5A09               	subwfb	___fladd@b+2,f,c
  7075  002A38  500E               	movf	___fladd@a+3,w,c
  7076  002A3A  5A0A               	subwfb	___fladd@b+3,f,c
  7077  002A3C                     l1064:
  7078  002A3C  5007               	movf	___fladd@b,w,c
  7079  002A3E  1008               	iorwf	___fladd@b+1,w,c
  7080  002A40  1009               	iorwf	___fladd@b+2,w,c
  7081  002A42  100A               	iorwf	___fladd@b+3,w,c
  7082  002A44  A4D8               	btfss	status,2,c
  7083  002A46  D01C               	goto	l5756
  7084  002A48  5016               	movf	___fladd@grs,w,c
  7085  002A4A  A4D8               	btfss	status,2,c
  7086  002A4C  D019               	goto	l5756
  7087  002A4E  0E00               	movlw	0
  7088  002A50  6E07               	movwf	?___fladd,c
  7089  002A52  0E00               	movlw	0
  7090  002A54  6E08               	movwf	?___fladd+1,c
  7091  002A56  0E00               	movlw	0
  7092  002A58  6E09               	movwf	?___fladd+2,c
  7093  002A5A  0E00               	movlw	0
  7094  002A5C  6E0A               	movwf	?___fladd+3,c
  7095  002A5E  0012               	return	
  7096  002A60                     l5740:
  7097  002A60  90D8               	bcf	status,0,c
  7098  002A62  3607               	rlcf	___fladd@b,f,c
  7099  002A64  3608               	rlcf	___fladd@b+1,f,c
  7100  002A66  3609               	rlcf	___fladd@b+2,f,c
  7101  002A68  360A               	rlcf	___fladd@b+3,f,c
  7102  002A6A  BE16               	btfsc	___fladd@grs,7,c
  7103  002A6C  8007               	bsf	___fladd@b,0,c
  7104  002A6E  A016               	btfss	___fladd@grs,0,c
  7105  002A70  D002               	goto	l5750
  7106  002A72  80D8               	bsf	status,0,c
  7107  002A74  D001               	goto	L13
  7108  002A76                     l5750:
  7109  002A76  90D8               	bcf	status,0,c
  7110  002A78                     L13:
  7111  002A78  3616               	rlcf	___fladd@grs,f,c
  7112  002A7A  5015               	movf	___fladd@bexp,w,c
  7113  002A7C  A4D8               	btfss	status,2,c
  7114  002A7E  0615               	decf	___fladd@bexp,f,c
  7115  002A80                     l5756:
  7116  002A80  AE09               	btfss	___fladd@b+2,7,c
  7117  002A82  D7EE               	goto	l5740
  7118  002A84                     u7080:
  7119  002A84  0E00               	movlw	0
  7120  002A86  6E14               	movwf	___fladd@aexp,c
  7121  002A88  AE16               	btfss	___fladd@grs,7,c
  7122  002A8A  D00B               	goto	l1073
  7123  002A8C  C016  F00F         	movff	___fladd@grs,??___fladd
  7124  002A90  0E7F               	movlw	127
  7125  002A92  160F               	andwf	??___fladd,f,c
  7126  002A94  B4D8               	btfsc	status,2,c
  7127  002A96  D003               	goto	l1074
  7128  002A98                     u7100:
  7129  002A98  0E01               	movlw	1
  7130  002A9A  6E14               	movwf	___fladd@aexp,c
  7131  002A9C  D002               	goto	l1073
  7132  002A9E                     l1074:
  7133  002A9E  B007               	btfsc	___fladd@b,0,c
  7134  002AA0  D7FB               	goto	u7100
  7135  002AA2                     l1073:
  7136  002AA2  5014               	movf	___fladd@aexp,w,c
  7137  002AA4  B4D8               	btfsc	status,2,c
  7138  002AA6  D020               	goto	l5776
  7139  002AA8  0E01               	movlw	1
  7140  002AAA  2607               	addwf	___fladd@b,f,c
  7141  002AAC  0E00               	movlw	0
  7142  002AAE  2208               	addwfc	___fladd@b+1,f,c
  7143  002AB0  2209               	addwfc	___fladd@b+2,f,c
  7144  002AB2  220A               	addwfc	___fladd@b+3,f,c
  7145  002AB4  A00A               	btfss	___fladd@b+3,0,c
  7146  002AB6  D018               	goto	l5776
  7147  002AB8  C007  F00F         	movff	___fladd@b,??___fladd
  7148  002ABC  C008  F010         	movff	___fladd@b+1,??___fladd+1
  7149  002AC0  C009  F011         	movff	___fladd@b+2,??___fladd+2
  7150  002AC4  C00A  F012         	movff	___fladd@b+3,??___fladd+3
  7151  002AC8  3412               	rlcf	??___fladd+3,w,c
  7152  002ACA  3212               	rrcf	??___fladd+3,f,c
  7153  002ACC  3211               	rrcf	??___fladd+2,f,c
  7154  002ACE  3210               	rrcf	??___fladd+1,f,c
  7155  002AD0  320F               	rrcf	??___fladd,f,c
  7156  002AD2  C00F  F007         	movff	??___fladd,___fladd@b
  7157  002AD6  C010  F008         	movff	??___fladd+1,___fladd@b+1
  7158  002ADA  C011  F009         	movff	??___fladd+2,___fladd@b+2
  7159  002ADE  C012  F00A         	movff	??___fladd+3,___fladd@b+3
  7160  002AE2  2815               	incf	___fladd@bexp,w,c
  7161  002AE4  A4D8               	btfss	status,2,c
  7162  002AE6  2A15               	incf	___fladd@bexp,f,c
  7163  002AE8                     l5776:
  7164  002AE8  2815               	incf	___fladd@bexp,w,c
  7165  002AEA  B4D8               	btfsc	status,2,c
  7166  002AEC  D003               	goto	u7160
  7167  002AEE  5015               	movf	___fladd@bexp,w,c
  7168  002AF0  A4D8               	btfss	status,2,c
  7169  002AF2  D00D               	goto	l5784
  7170  002AF4                     u7160:
  7171  002AF4  0E00               	movlw	0
  7172  002AF6  6E07               	movwf	___fladd@b,c
  7173  002AF8  0E00               	movlw	0
  7174  002AFA  6E08               	movwf	___fladd@b+1,c
  7175  002AFC  0E00               	movlw	0
  7176  002AFE  6E09               	movwf	___fladd@b+2,c
  7177  002B00  0E00               	movlw	0
  7178  002B02  6E0A               	movwf	___fladd@b+3,c
  7179  002B04  5015               	movf	___fladd@bexp,w,c
  7180  002B06  A4D8               	btfss	status,2,c
  7181  002B08  D002               	goto	l5784
  7182  002B0A  0E00               	movlw	0
  7183  002B0C  6E13               	movwf	___fladd@signs,c
  7184  002B0E                     l5784:
  7185  002B0E  A015               	btfss	___fladd@bexp,0,c
  7186  002B10  D002               	goto	l5788
  7187  002B12  8E09               	bsf	___fladd@b+2,7,c
  7188  002B14  D001               	goto	l5790
  7189  002B16                     l5788:
  7190  002B16  9E09               	bcf	___fladd@b+2,7,c
  7191  002B18                     l5790:
  7192  002B18  90D8               	bcf	status,0,c
  7193  002B1A  3015               	rrcf	___fladd@bexp,w,c
  7194  002B1C  6E0A               	movwf	___fladd@b+3,c
  7195  002B1E  BE13               	btfsc	___fladd@signs,7,c
  7196  002B20  8E0A               	bsf	___fladd@b+3,7,c
  7197  002B22  C007  F007         	movff	___fladd@b,?___fladd
  7198  002B26  C008  F008         	movff	___fladd@b+1,?___fladd+1
  7199  002B2A  C009  F009         	movff	___fladd@b+2,?___fladd+2
  7200  002B2E  C00A  F00A         	movff	___fladd@b+3,?___fladd+3
  7201  002B32  0012               	return		;funcret
  7202  002B34                     __end_of___fladd:
  7203                           	opt callstack 0
  7204                           
  7205 ;; *************** function ___flneg *****************
  7206 ;; Defined at:
  7207 ;;		line 15 in file "D:\MPLAB\pic\sources\c99\common\flneg.c"
  7208 ;; Parameters:    Size  Location     Type
  7209 ;;  f1              4    6[COMRAM] unsigned char 
  7210 ;; Auto vars:     Size  Location     Type
  7211 ;;		None
  7212 ;; Return value:  Size  Location     Type
  7213 ;;                  4    6[COMRAM] unsigned char 
  7214 ;; Registers used:
  7215 ;;		wreg, status,2, status,0
  7216 ;; Tracked objects:
  7217 ;;		On entry : 0/0
  7218 ;;		On exit  : 0/0
  7219 ;;		Unchanged: 0/0
  7220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7221 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7224 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7225 ;;Total ram usage:        4 bytes
  7226 ;; Hardware stack levels used:    1
  7227 ;; Hardware stack levels required when called:    4
  7228 ;; This function calls:
  7229 ;;		Nothing
  7230 ;; This function is called by:
  7231 ;;		_efgtoa
  7232 ;; This function uses a non-reentrant model
  7233 ;;
  7234                           
  7235                           	psect	text21
  7236  004480                     __ptext21:
  7237                           	opt callstack 0
  7238  004480                     ___flneg:
  7239                           	opt callstack 21
  7240                           
  7241                           ;incstack = 0
  7242  004480  5007               	movf	___flneg@f1,w,c
  7243  004482  1008               	iorwf	___flneg@f1+1,w,c
  7244  004484  1009               	iorwf	___flneg@f1+2,w,c
  7245  004486  100A               	iorwf	___flneg@f1+3,w,c
  7246  004488  B4D8               	btfsc	status,2,c
  7247  00448A  D008               	goto	l6376
  7248  00448C  0E00               	movlw	0
  7249  00448E  1A07               	xorwf	___flneg@f1,f,c
  7250  004490  0E00               	movlw	0
  7251  004492  1A08               	xorwf	___flneg@f1+1,f,c
  7252  004494  0E00               	movlw	0
  7253  004496  1A09               	xorwf	___flneg@f1+2,f,c
  7254  004498  0E80               	movlw	128
  7255  00449A  1A0A               	xorwf	___flneg@f1+3,f,c
  7256  00449C                     l6376:
  7257  00449C  C007  F007         	movff	___flneg@f1,?___flneg
  7258  0044A0  C008  F008         	movff	___flneg@f1+1,?___flneg+1
  7259  0044A4  C009  F009         	movff	___flneg@f1+2,?___flneg+2
  7260  0044A8  C00A  F00A         	movff	___flneg@f1+3,?___flneg+3
  7261  0044AC  0012               	return		;funcret
  7262  0044AE                     __end_of___flneg:
  7263                           	opt callstack 0
  7264                           
  7265 ;; *************** function ___flmul *****************
  7266 ;; Defined at:
  7267 ;;		line 8 in file "D:\MPLAB\pic\sources\c99\common\sprcmul.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;  b               4   62[COMRAM] unsigned char 
  7270 ;;  a               4   66[COMRAM] unsigned char 
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;  prod            4   81[COMRAM] struct .
  7273 ;;  grs             4   76[COMRAM] unsigned long 
  7274 ;;  temp            2   85[COMRAM] struct .
  7275 ;;  bexp            1   80[COMRAM] unsigned char 
  7276 ;;  aexp            1   75[COMRAM] unsigned char 
  7277 ;;  sign            1   74[COMRAM] unsigned char 
  7278 ;; Return value:  Size  Location     Type
  7279 ;;                  4   62[COMRAM] unsigned char 
  7280 ;; Registers used:
  7281 ;;		wreg, status,2, status,0, prodl, prodh
  7282 ;; Tracked objects:
  7283 ;;		On entry : 0/0
  7284 ;;		On exit  : 0/0
  7285 ;;		Unchanged: 0/0
  7286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7287 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7288 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7289 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7290 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7291 ;;Total ram usage:       25 bytes
  7292 ;; Hardware stack levels used:    1
  7293 ;; Hardware stack levels required when called:    4
  7294 ;; This function calls:
  7295 ;;		Nothing
  7296 ;; This function is called by:
  7297 ;;		_main
  7298 ;;		_efgtoa
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text22
  7303  0024D6                     __ptext22:
  7304                           	opt callstack 0
  7305  0024D6                     ___flmul:
  7306                           	opt callstack 21
  7307                           
  7308                           ;incstack = 0
  7309  0024D6  5042               	movf	___flmul@b+3,w,c
  7310  0024D8  0B80               	andlw	128
  7311  0024DA  6E4B               	movwf	___flmul@sign,c
  7312  0024DC  5042               	movf	___flmul@b+3,w,c
  7313  0024DE  2442               	addwf	___flmul@b+3,w,c
  7314  0024E0  6E51               	movwf	___flmul@bexp,c
  7315  0024E2  BE41               	btfsc	___flmul@b+2,7,c
  7316  0024E4  8051               	bsf	___flmul@bexp,0,c
  7317  0024E6  5051               	movf	___flmul@bexp,w,c
  7318  0024E8  B4D8               	btfsc	status,2,c
  7319  0024EA  D00D               	goto	l6132
  7320  0024EC  2851               	incf	___flmul@bexp,w,c
  7321  0024EE  A4D8               	btfss	status,2,c
  7322  0024F0  D008               	goto	l6130
  7323  0024F2  0E00               	movlw	0
  7324  0024F4  6E3F               	movwf	___flmul@b,c
  7325  0024F6  0E00               	movlw	0
  7326  0024F8  6E40               	movwf	___flmul@b+1,c
  7327  0024FA  0E00               	movlw	0
  7328  0024FC  6E41               	movwf	___flmul@b+2,c
  7329  0024FE  0E00               	movlw	0
  7330  002500  6E42               	movwf	___flmul@b+3,c
  7331  002502                     l6130:
  7332  002502  8E41               	bsf	___flmul@b+2,7,c
  7333  002504  D008               	goto	l6134
  7334  002506                     l6132:
  7335  002506  0E00               	movlw	0
  7336  002508  6E3F               	movwf	___flmul@b,c
  7337  00250A  0E00               	movlw	0
  7338  00250C  6E40               	movwf	___flmul@b+1,c
  7339  00250E  0E00               	movlw	0
  7340  002510  6E41               	movwf	___flmul@b+2,c
  7341  002512  0E00               	movlw	0
  7342  002514  6E42               	movwf	___flmul@b+3,c
  7343  002516                     l6134:
  7344  002516  5046               	movf	___flmul@a+3,w,c
  7345  002518  0B80               	andlw	128
  7346  00251A  1A4B               	xorwf	___flmul@sign,f,c
  7347  00251C  5046               	movf	___flmul@a+3,w,c
  7348  00251E  2446               	addwf	___flmul@a+3,w,c
  7349  002520  6E4C               	movwf	___flmul@aexp,c
  7350  002522  BE45               	btfsc	___flmul@a+2,7,c
  7351  002524  804C               	bsf	___flmul@aexp,0,c
  7352  002526  504C               	movf	___flmul@aexp,w,c
  7353  002528  B4D8               	btfsc	status,2,c
  7354  00252A  D00D               	goto	l6150
  7355  00252C  284C               	incf	___flmul@aexp,w,c
  7356  00252E  A4D8               	btfss	status,2,c
  7357  002530  D008               	goto	l6148
  7358  002532  0E00               	movlw	0
  7359  002534  6E43               	movwf	___flmul@a,c
  7360  002536  0E00               	movlw	0
  7361  002538  6E44               	movwf	___flmul@a+1,c
  7362  00253A  0E00               	movlw	0
  7363  00253C  6E45               	movwf	___flmul@a+2,c
  7364  00253E  0E00               	movlw	0
  7365  002540  6E46               	movwf	___flmul@a+3,c
  7366  002542                     l6148:
  7367  002542  8E45               	bsf	___flmul@a+2,7,c
  7368  002544  D008               	goto	l1133
  7369  002546                     l6150:
  7370  002546  0E00               	movlw	0
  7371  002548  6E43               	movwf	___flmul@a,c
  7372  00254A  0E00               	movlw	0
  7373  00254C  6E44               	movwf	___flmul@a+1,c
  7374  00254E  0E00               	movlw	0
  7375  002550  6E45               	movwf	___flmul@a+2,c
  7376  002552  0E00               	movlw	0
  7377  002554  6E46               	movwf	___flmul@a+3,c
  7378  002556                     l1133:
  7379  002556  504C               	movf	___flmul@aexp,w,c
  7380  002558  B4D8               	btfsc	status,2,c
  7381  00255A  D003               	goto	u7920
  7382  00255C  5051               	movf	___flmul@bexp,w,c
  7383  00255E  A4D8               	btfss	status,2,c
  7384  002560  D009               	goto	l6158
  7385  002562                     u7920:
  7386  002562  0E00               	movlw	0
  7387  002564  6E3F               	movwf	?___flmul,c
  7388  002566  0E00               	movlw	0
  7389  002568  6E40               	movwf	?___flmul+1,c
  7390  00256A  0E00               	movlw	0
  7391  00256C  6E41               	movwf	?___flmul+2,c
  7392  00256E  0E00               	movlw	0
  7393  002570  6E42               	movwf	?___flmul+3,c
  7394  002572  0012               	return	
  7395  002574                     l6158:
  7396  002574  5045               	movf	___flmul@a+2,w,c
  7397  002576  023F               	mulwf	___flmul@b,c
  7398  002578  CFF3 F056          	movff	prodl,___flmul@temp
  7399  00257C  CFF4 F057          	movff	prodh,___flmul@temp+1
  7400  002580  5056               	movf	___flmul@temp,w,c
  7401  002582  6E4D               	movwf	___flmul@grs,c
  7402  002584  6A4E               	clrf	___flmul@grs+1,c
  7403  002586  6A4F               	clrf	___flmul@grs+2,c
  7404  002588  6A50               	clrf	___flmul@grs+3,c
  7405  00258A  5057               	movf	___flmul@temp+1,w,c
  7406  00258C  6E52               	movwf	___flmul@prod,c
  7407  00258E  6A53               	clrf	___flmul@prod+1,c
  7408  002590  6A54               	clrf	___flmul@prod+2,c
  7409  002592  6A55               	clrf	___flmul@prod+3,c
  7410  002594  5044               	movf	___flmul@a+1,w,c
  7411  002596  0240               	mulwf	___flmul@b+1,c
  7412  002598  CFF3 F056          	movff	prodl,___flmul@temp
  7413  00259C  CFF4 F057          	movff	prodh,___flmul@temp+1
  7414  0025A0  5056               	movf	___flmul@temp,w,c
  7415  0025A2  264D               	addwf	___flmul@grs,f,c
  7416  0025A4  0E00               	movlw	0
  7417  0025A6  224E               	addwfc	___flmul@grs+1,f,c
  7418  0025A8  224F               	addwfc	___flmul@grs+2,f,c
  7419  0025AA  2250               	addwfc	___flmul@grs+3,f,c
  7420  0025AC  5057               	movf	___flmul@temp+1,w,c
  7421  0025AE  2652               	addwf	___flmul@prod,f,c
  7422  0025B0  0E00               	movlw	0
  7423  0025B2  2253               	addwfc	___flmul@prod+1,f,c
  7424  0025B4  2254               	addwfc	___flmul@prod+2,f,c
  7425  0025B6  2255               	addwfc	___flmul@prod+3,f,c
  7426  0025B8  5043               	movf	___flmul@a,w,c
  7427  0025BA  0241               	mulwf	___flmul@b+2,c
  7428  0025BC  CFF3 F056          	movff	prodl,___flmul@temp
  7429  0025C0  CFF4 F057          	movff	prodh,___flmul@temp+1
  7430  0025C4  5056               	movf	___flmul@temp,w,c
  7431  0025C6  264D               	addwf	___flmul@grs,f,c
  7432  0025C8  0E00               	movlw	0
  7433  0025CA  224E               	addwfc	___flmul@grs+1,f,c
  7434  0025CC  224F               	addwfc	___flmul@grs+2,f,c
  7435  0025CE  2250               	addwfc	___flmul@grs+3,f,c
  7436  0025D0  5057               	movf	___flmul@temp+1,w,c
  7437  0025D2  2652               	addwf	___flmul@prod,f,c
  7438  0025D4  0E00               	movlw	0
  7439  0025D6  2253               	addwfc	___flmul@prod+1,f,c
  7440  0025D8  2254               	addwfc	___flmul@prod+2,f,c
  7441  0025DA  2255               	addwfc	___flmul@prod+3,f,c
  7442  0025DC  C04F  F050         	movff	___flmul@grs+2,___flmul@grs+3
  7443  0025E0  C04E  F04F         	movff	___flmul@grs+1,___flmul@grs+2
  7444  0025E4  C04D  F04E         	movff	___flmul@grs,___flmul@grs+1
  7445  0025E8  6A4D               	clrf	___flmul@grs,c
  7446  0025EA  5043               	movf	___flmul@a,w,c
  7447  0025EC  0240               	mulwf	___flmul@b+1,c
  7448  0025EE  CFF3 F056          	movff	prodl,___flmul@temp
  7449  0025F2  CFF4 F057          	movff	prodh,___flmul@temp+1
  7450  0025F6  5056               	movf	___flmul@temp,w,c
  7451  0025F8  264D               	addwf	___flmul@grs,f,c
  7452  0025FA  5057               	movf	___flmul@temp+1,w,c
  7453  0025FC  224E               	addwfc	___flmul@grs+1,f,c
  7454  0025FE  0E00               	movlw	0
  7455  002600  224F               	addwfc	___flmul@grs+2,f,c
  7456  002602  0E00               	movlw	0
  7457  002604  2250               	addwfc	___flmul@grs+3,f,c
  7458  002606  5044               	movf	___flmul@a+1,w,c
  7459  002608  023F               	mulwf	___flmul@b,c
  7460  00260A  CFF3 F056          	movff	prodl,___flmul@temp
  7461  00260E  CFF4 F057          	movff	prodh,___flmul@temp+1
  7462  002612  5056               	movf	___flmul@temp,w,c
  7463  002614  264D               	addwf	___flmul@grs,f,c
  7464  002616  5057               	movf	___flmul@temp+1,w,c
  7465  002618  224E               	addwfc	___flmul@grs+1,f,c
  7466  00261A  0E00               	movlw	0
  7467  00261C  224F               	addwfc	___flmul@grs+2,f,c
  7468  00261E  0E00               	movlw	0
  7469  002620  2250               	addwfc	___flmul@grs+3,f,c
  7470  002622  C04F  F050         	movff	___flmul@grs+2,___flmul@grs+3
  7471  002626  C04E  F04F         	movff	___flmul@grs+1,___flmul@grs+2
  7472  00262A  C04D  F04E         	movff	___flmul@grs,___flmul@grs+1
  7473  00262E  6A4D               	clrf	___flmul@grs,c
  7474  002630  5043               	movf	___flmul@a,w,c
  7475  002632  023F               	mulwf	___flmul@b,c
  7476  002634  CFF3 F056          	movff	prodl,___flmul@temp
  7477  002638  CFF4 F057          	movff	prodh,___flmul@temp+1
  7478  00263C  5056               	movf	___flmul@temp,w,c
  7479  00263E  264D               	addwf	___flmul@grs,f,c
  7480  002640  5057               	movf	___flmul@temp+1,w,c
  7481  002642  224E               	addwfc	___flmul@grs+1,f,c
  7482  002644  0E00               	movlw	0
  7483  002646  224F               	addwfc	___flmul@grs+2,f,c
  7484  002648  0E00               	movlw	0
  7485  00264A  2250               	addwfc	___flmul@grs+3,f,c
  7486  00264C  5045               	movf	___flmul@a+2,w,c
  7487  00264E  0240               	mulwf	___flmul@b+1,c
  7488  002650  CFF3 F056          	movff	prodl,___flmul@temp
  7489  002654  CFF4 F057          	movff	prodh,___flmul@temp+1
  7490  002658  5056               	movf	___flmul@temp,w,c
  7491  00265A  2652               	addwf	___flmul@prod,f,c
  7492  00265C  5057               	movf	___flmul@temp+1,w,c
  7493  00265E  2253               	addwfc	___flmul@prod+1,f,c
  7494  002660  0E00               	movlw	0
  7495  002662  2254               	addwfc	___flmul@prod+2,f,c
  7496  002664  0E00               	movlw	0
  7497  002666  2255               	addwfc	___flmul@prod+3,f,c
  7498  002668  5044               	movf	___flmul@a+1,w,c
  7499  00266A  0241               	mulwf	___flmul@b+2,c
  7500  00266C  CFF3 F056          	movff	prodl,___flmul@temp
  7501  002670  CFF4 F057          	movff	prodh,___flmul@temp+1
  7502  002674  5056               	movf	___flmul@temp,w,c
  7503  002676  2652               	addwf	___flmul@prod,f,c
  7504  002678  5057               	movf	___flmul@temp+1,w,c
  7505  00267A  2253               	addwfc	___flmul@prod+1,f,c
  7506  00267C  0E00               	movlw	0
  7507  00267E  2254               	addwfc	___flmul@prod+2,f,c
  7508  002680  0E00               	movlw	0
  7509  002682  2255               	addwfc	___flmul@prod+3,f,c
  7510  002684  5045               	movf	___flmul@a+2,w,c
  7511  002686  0241               	mulwf	___flmul@b+2,c
  7512  002688  CFF3 F056          	movff	prodl,___flmul@temp
  7513  00268C  CFF4 F057          	movff	prodh,___flmul@temp+1
  7514  002690  5056               	movf	___flmul@temp,w,c
  7515  002692  6E47               	movwf	??___flmul& (0+255),c
  7516  002694  5057               	movf	___flmul@temp+1,w,c
  7517  002696  6E48               	movwf	(??___flmul+1)& (0+255),c
  7518  002698  6A49               	clrf	(??___flmul+2)& (0+255),c
  7519  00269A  6A4A               	clrf	(??___flmul+3)& (0+255),c
  7520  00269C  C049  F04A         	movff	??___flmul+2,??___flmul+3
  7521  0026A0  C048  F049         	movff	??___flmul+1,??___flmul+2
  7522  0026A4  C047  F048         	movff	??___flmul,??___flmul+1
  7523  0026A8  6A47               	clrf	??___flmul,c
  7524  0026AA  5047               	movf	??___flmul,w,c
  7525  0026AC  2652               	addwf	___flmul@prod,f,c
  7526  0026AE  5048               	movf	??___flmul+1,w,c
  7527  0026B0  2253               	addwfc	___flmul@prod+1,f,c
  7528  0026B2  5049               	movf	??___flmul+2,w,c
  7529  0026B4  2254               	addwfc	___flmul@prod+2,f,c
  7530  0026B6  504A               	movf	??___flmul+3,w,c
  7531  0026B8  2255               	addwfc	___flmul@prod+3,f,c
  7532  0026BA  C04D  F047         	movff	___flmul@grs,??___flmul
  7533  0026BE  C04E  F048         	movff	___flmul@grs+1,??___flmul+1
  7534  0026C2  C04F  F049         	movff	___flmul@grs+2,??___flmul+2
  7535  0026C6  C050  F04A         	movff	___flmul@grs+3,??___flmul+3
  7536  0026CA  0E19               	movlw	25
  7537  0026CC  D005               	goto	u7930
  7538  0026CE                     u7935:
  7539  0026CE  90D8               	bcf	status,0,c
  7540  0026D0  324A               	rrcf	??___flmul+3,f,c
  7541  0026D2  3249               	rrcf	??___flmul+2,f,c
  7542  0026D4  3248               	rrcf	??___flmul+1,f,c
  7543  0026D6  3247               	rrcf	??___flmul,f,c
  7544  0026D8                     u7930:
  7545  0026D8  2EE8               	decfsz	wreg,f,c
  7546  0026DA  D7F9               	goto	u7935
  7547  0026DC  5047               	movf	??___flmul,w,c
  7548  0026DE  2652               	addwf	___flmul@prod,f,c
  7549  0026E0  5048               	movf	??___flmul+1,w,c
  7550  0026E2  2253               	addwfc	___flmul@prod+1,f,c
  7551  0026E4  5049               	movf	??___flmul+2,w,c
  7552  0026E6  2254               	addwfc	___flmul@prod+2,f,c
  7553  0026E8  504A               	movf	??___flmul+3,w,c
  7554  0026EA  2255               	addwfc	___flmul@prod+3,f,c
  7555  0026EC  C04F  F050         	movff	___flmul@grs+2,___flmul@grs+3
  7556  0026F0  C04E  F04F         	movff	___flmul@grs+1,___flmul@grs+2
  7557  0026F4  C04D  F04E         	movff	___flmul@grs,___flmul@grs+1
  7558  0026F8  6A4D               	clrf	___flmul@grs,c
  7559  0026FA  504C               	movf	___flmul@aexp,w,c
  7560  0026FC  C051  F047         	movff	___flmul@bexp,??___flmul
  7561  002700  6A48               	clrf	(??___flmul+1)& (0+255),c
  7562  002702  2647               	addwf	??___flmul,f,c
  7563  002704  0E00               	movlw	0
  7564  002706  2248               	addwfc	??___flmul+1,f,c
  7565  002708  0E82               	movlw	130
  7566  00270A  2447               	addwf	??___flmul,w,c
  7567  00270C  6E56               	movwf	___flmul@temp,c
  7568  00270E  0EFF               	movlw	255
  7569  002710  2048               	addwfc	??___flmul+1,w,c
  7570  002712  6E57               	movwf	___flmul@temp+1,c
  7571  002714  D00F               	goto	l6206
  7572  002716                     l6200:
  7573  002716  90D8               	bcf	status,0,c
  7574  002718  3652               	rlcf	___flmul@prod,f,c
  7575  00271A  3653               	rlcf	___flmul@prod+1,f,c
  7576  00271C  3654               	rlcf	___flmul@prod+2,f,c
  7577  00271E  3655               	rlcf	___flmul@prod+3,f,c
  7578  002720  BE50               	btfsc	___flmul@grs+3,7,c
  7579  002722  8052               	bsf	___flmul@prod,0,c
  7580  002724  90D8               	bcf	status,0,c
  7581  002726  364D               	rlcf	___flmul@grs,f,c
  7582  002728  364E               	rlcf	___flmul@grs+1,f,c
  7583  00272A  364F               	rlcf	___flmul@grs+2,f,c
  7584  00272C  3650               	rlcf	___flmul@grs+3,f,c
  7585  00272E  0656               	decf	___flmul@temp,f,c
  7586  002730  A0D8               	btfss	status,0,c
  7587  002732  0657               	decf	___flmul@temp+1,f,c
  7588  002734                     l6206:
  7589  002734  AE54               	btfss	___flmul@prod+2,7,c
  7590  002736  D7EF               	goto	l6200
  7591  002738  0E00               	movlw	0
  7592  00273A  6E4C               	movwf	___flmul@aexp,c
  7593  00273C  AE50               	btfss	___flmul@grs+3,7,c
  7594  00273E  D017               	goto	l1142
  7595  002740  0EFF               	movlw	255
  7596  002742  144D               	andwf	___flmul@grs,w,c
  7597  002744  6E47               	movwf	??___flmul& (0+255),c
  7598  002746  0EFF               	movlw	255
  7599  002748  144E               	andwf	___flmul@grs+1,w,c
  7600  00274A  6E48               	movwf	(??___flmul+1)& (0+255),c
  7601  00274C  0EFF               	movlw	255
  7602  00274E  144F               	andwf	___flmul@grs+2,w,c
  7603  002750  6E49               	movwf	(??___flmul+2)& (0+255),c
  7604  002752  0E7F               	movlw	127
  7605  002754  1450               	andwf	___flmul@grs+3,w,c
  7606  002756  6E4A               	movwf	(??___flmul+3)& (0+255),c
  7607  002758  5047               	movf	??___flmul,w,c
  7608  00275A  1048               	iorwf	??___flmul+1,w,c
  7609  00275C  1049               	iorwf	??___flmul+2,w,c
  7610  00275E  104A               	iorwf	??___flmul+3,w,c
  7611  002760  B4D8               	btfsc	status,2,c
  7612  002762  D003               	goto	l1143
  7613  002764                     u7970:
  7614  002764  0E01               	movlw	1
  7615  002766  6E4C               	movwf	___flmul@aexp,c
  7616  002768  D002               	goto	l1142
  7617  00276A                     l1143:
  7618  00276A  B052               	btfsc	___flmul@prod,0,c
  7619  00276C  D7FB               	goto	u7970
  7620  00276E                     l1142:
  7621  00276E  504C               	movf	___flmul@aexp,w,c
  7622  002770  B4D8               	btfsc	status,2,c
  7623  002772  D01F               	goto	l6226
  7624  002774  0E01               	movlw	1
  7625  002776  2652               	addwf	___flmul@prod,f,c
  7626  002778  0E00               	movlw	0
  7627  00277A  2253               	addwfc	___flmul@prod+1,f,c
  7628  00277C  2254               	addwfc	___flmul@prod+2,f,c
  7629  00277E  2255               	addwfc	___flmul@prod+3,f,c
  7630  002780  A055               	btfss	___flmul@prod+3,0,c
  7631  002782  D017               	goto	l6226
  7632  002784  C052  F047         	movff	___flmul@prod,??___flmul
  7633  002788  C053  F048         	movff	___flmul@prod+1,??___flmul+1
  7634  00278C  C054  F049         	movff	___flmul@prod+2,??___flmul+2
  7635  002790  C055  F04A         	movff	___flmul@prod+3,??___flmul+3
  7636  002794  344A               	rlcf	??___flmul+3,w,c
  7637  002796  324A               	rrcf	??___flmul+3,f,c
  7638  002798  3249               	rrcf	??___flmul+2,f,c
  7639  00279A  3248               	rrcf	??___flmul+1,f,c
  7640  00279C  3247               	rrcf	??___flmul,f,c
  7641  00279E  C047  F052         	movff	??___flmul,___flmul@prod
  7642  0027A2  C048  F053         	movff	??___flmul+1,___flmul@prod+1
  7643  0027A6  C049  F054         	movff	??___flmul+2,___flmul@prod+2
  7644  0027AA  C04A  F055         	movff	??___flmul+3,___flmul@prod+3
  7645  0027AE  4A56               	infsnz	___flmul@temp,f,c
  7646  0027B0  2A57               	incf	___flmul@temp+1,f,c
  7647  0027B2                     l6226:
  7648  0027B2  BE57               	btfsc	___flmul@temp+1,7,c
  7649  0027B4  D00D               	goto	l6230
  7650  0027B6  5057               	movf	___flmul@temp+1,w,c
  7651  0027B8  E103               	bnz	u8010
  7652  0027BA  2856               	incf	___flmul@temp,w,c
  7653  0027BC  A0D8               	btfss	status,0,c
  7654  0027BE  D008               	goto	l6230
  7655  0027C0                     u8010:
  7656  0027C0  0E00               	movlw	0
  7657  0027C2  6E52               	movwf	___flmul@prod,c
  7658  0027C4  0E00               	movlw	0
  7659  0027C6  6E53               	movwf	___flmul@prod+1,c
  7660  0027C8  0E80               	movlw	128
  7661  0027CA  6E54               	movwf	___flmul@prod+2,c
  7662  0027CC  0E7F               	movlw	127
  7663  0027CE  D020               	goto	L14
  7664  0027D0                     l6230:
  7665  0027D0  BE57               	btfsc	___flmul@temp+1,7,c
  7666  0027D2  D005               	goto	u8020
  7667  0027D4  5057               	movf	___flmul@temp+1,w,c
  7668  0027D6  E10E               	bnz	l1150
  7669  0027D8  0456               	decf	___flmul@temp,w,c
  7670  0027DA  B0D8               	btfsc	status,0,c
  7671  0027DC  D00B               	goto	l1150
  7672  0027DE                     u8020:
  7673  0027DE  0E00               	movlw	0
  7674  0027E0  6E52               	movwf	___flmul@prod,c
  7675  0027E2  0E00               	movlw	0
  7676  0027E4  6E53               	movwf	___flmul@prod+1,c
  7677  0027E6  0E00               	movlw	0
  7678  0027E8  6E54               	movwf	___flmul@prod+2,c
  7679  0027EA  0E00               	movlw	0
  7680  0027EC  6E55               	movwf	___flmul@prod+3,c
  7681  0027EE  0E00               	movlw	0
  7682  0027F0  6E4B               	movwf	___flmul@sign,c
  7683  0027F2  D00F               	goto	l6242
  7684  0027F4                     l1150:
  7685  0027F4  C056  F051         	movff	___flmul@temp,___flmul@bexp
  7686  0027F8  0EFF               	movlw	255
  7687  0027FA  1652               	andwf	___flmul@prod,f,c
  7688  0027FC  0EFF               	movlw	255
  7689  0027FE  1653               	andwf	___flmul@prod+1,f,c
  7690  002800  0E7F               	movlw	127
  7691  002802  1654               	andwf	___flmul@prod+2,f,c
  7692  002804  0E00               	movlw	0
  7693  002806  1655               	andwf	___flmul@prod+3,f,c
  7694  002808  B051               	btfsc	___flmul@bexp,0,c
  7695  00280A  8E54               	bsf	___flmul@prod+2,7,c
  7696  00280C  90D8               	bcf	status,0,c
  7697  00280E  3051               	rrcf	___flmul@bexp,w,c
  7698  002810                     L14:
  7699  002810  6E55               	movwf	___flmul@prod+3,c
  7700  002812                     l6242:
  7701  002812  504B               	movf	___flmul@sign,w,c
  7702  002814  1255               	iorwf	___flmul@prod+3,f,c
  7703  002816  C052  F03F         	movff	___flmul@prod,?___flmul
  7704  00281A  C053  F040         	movff	___flmul@prod+1,?___flmul+1
  7705  00281E  C054  F041         	movff	___flmul@prod+2,?___flmul+2
  7706  002822  C055  F042         	movff	___flmul@prod+3,?___flmul+3
  7707  002826  0012               	return		;funcret
  7708  002828                     __end_of___flmul:
  7709                           	opt callstack 0
  7710                           
  7711 ;; *************** function ___flge *****************
  7712 ;; Defined at:
  7713 ;;		line 4 in file "D:\MPLAB\pic\sources\c99\common\flge.c"
  7714 ;; Parameters:    Size  Location     Type
  7715 ;;  ff1             4   87[COMRAM] unsigned char 
  7716 ;;  ff2             4   91[COMRAM] unsigned char 
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;		None
  7719 ;; Return value:  Size  Location     Type
  7720 ;;		None               void
  7721 ;; Registers used:
  7722 ;;		wreg, status,2, status,0
  7723 ;; Tracked objects:
  7724 ;;		On entry : 0/0
  7725 ;;		On exit  : 0/0
  7726 ;;		Unchanged: 0/0
  7727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7728 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7730 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7731 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7732 ;;Total ram usage:       12 bytes
  7733 ;; Hardware stack levels used:    1
  7734 ;; Hardware stack levels required when called:    4
  7735 ;; This function calls:
  7736 ;;		Nothing
  7737 ;; This function is called by:
  7738 ;;		_main
  7739 ;;		_efgtoa
  7740 ;; This function uses a non-reentrant model
  7741 ;;
  7742                           
  7743                           	psect	text23
  7744  0038E4                     __ptext23:
  7745                           	opt callstack 0
  7746  0038E4                     ___flge:
  7747                           	opt callstack 21
  7748                           
  7749                           ;incstack = 0
  7750  0038E4  0E00               	movlw	0
  7751  0038E6  1458               	andwf	___flge@ff1,w,c
  7752  0038E8  6E60               	movwf	??___flge& (0+255),c
  7753  0038EA  0E00               	movlw	0
  7754  0038EC  1459               	andwf	___flge@ff1+1,w,c
  7755  0038EE  6E61               	movwf	(??___flge+1)& (0+255),c
  7756  0038F0  0E80               	movlw	128
  7757  0038F2  145A               	andwf	___flge@ff1+2,w,c
  7758  0038F4  6E62               	movwf	(??___flge+2)& (0+255),c
  7759  0038F6  0E7F               	movlw	127
  7760  0038F8  145B               	andwf	___flge@ff1+3,w,c
  7761  0038FA  6E63               	movwf	(??___flge+3)& (0+255),c
  7762  0038FC  5060               	movf	??___flge,w,c
  7763  0038FE  1061               	iorwf	??___flge+1,w,c
  7764  003900  1062               	iorwf	??___flge+2,w,c
  7765  003902  1063               	iorwf	??___flge+3,w,c
  7766  003904  A4D8               	btfss	status,2,c
  7767  003906  D008               	goto	l6354
  7768  003908  0E00               	movlw	0
  7769  00390A  6E58               	movwf	___flge@ff1,c
  7770  00390C  0E00               	movlw	0
  7771  00390E  6E59               	movwf	___flge@ff1+1,c
  7772  003910  0E00               	movlw	0
  7773  003912  6E5A               	movwf	___flge@ff1+2,c
  7774  003914  0E00               	movlw	0
  7775  003916  6E5B               	movwf	___flge@ff1+3,c
  7776  003918                     l6354:
  7777  003918  0E00               	movlw	0
  7778  00391A  145C               	andwf	___flge@ff2,w,c
  7779  00391C  6E60               	movwf	??___flge& (0+255),c
  7780  00391E  0E00               	movlw	0
  7781  003920  145D               	andwf	___flge@ff2+1,w,c
  7782  003922  6E61               	movwf	(??___flge+1)& (0+255),c
  7783  003924  0E80               	movlw	128
  7784  003926  145E               	andwf	___flge@ff2+2,w,c
  7785  003928  6E62               	movwf	(??___flge+2)& (0+255),c
  7786  00392A  0E7F               	movlw	127
  7787  00392C  145F               	andwf	___flge@ff2+3,w,c
  7788  00392E  6E63               	movwf	(??___flge+3)& (0+255),c
  7789  003930  5060               	movf	??___flge,w,c
  7790  003932  1061               	iorwf	??___flge+1,w,c
  7791  003934  1062               	iorwf	??___flge+2,w,c
  7792  003936  1063               	iorwf	??___flge+3,w,c
  7793  003938  A4D8               	btfss	status,2,c
  7794  00393A  D008               	goto	l6358
  7795  00393C  0E00               	movlw	0
  7796  00393E  6E5C               	movwf	___flge@ff2,c
  7797  003940  0E00               	movlw	0
  7798  003942  6E5D               	movwf	___flge@ff2+1,c
  7799  003944  0E00               	movlw	0
  7800  003946  6E5E               	movwf	___flge@ff2+2,c
  7801  003948  0E00               	movlw	0
  7802  00394A  6E5F               	movwf	___flge@ff2+3,c
  7803  00394C                     l6358:
  7804  00394C  AE5B               	btfss	___flge@ff1+3,7,c
  7805  00394E  D009               	goto	l6362
  7806  003950  6C58               	negf	___flge@ff1,c
  7807  003952  1E59               	comf	___flge@ff1+1,f,c
  7808  003954  B0D8               	btfsc	status,0,c
  7809  003956  2A59               	incf	___flge@ff1+1,f,c
  7810  003958  1E5A               	comf	___flge@ff1+2,f,c
  7811  00395A  B0D8               	btfsc	status,0,c
  7812  00395C  2A5A               	incf	___flge@ff1+2,f,c
  7813  00395E  0E80               	movlw	128
  7814  003960  565B               	subfwb	___flge@ff1+3,f,c
  7815  003962                     l6362:
  7816  003962  AE5F               	btfss	___flge@ff2+3,7,c
  7817  003964  D009               	goto	l784
  7818  003966  6C5C               	negf	___flge@ff2,c
  7819  003968  1E5D               	comf	___flge@ff2+1,f,c
  7820  00396A  B0D8               	btfsc	status,0,c
  7821  00396C  2A5D               	incf	___flge@ff2+1,f,c
  7822  00396E  1E5E               	comf	___flge@ff2+2,f,c
  7823  003970  B0D8               	btfsc	status,0,c
  7824  003972  2A5E               	incf	___flge@ff2+2,f,c
  7825  003974  0E80               	movlw	128
  7826  003976  565F               	subfwb	___flge@ff2+3,f,c
  7827  003978                     l784:
  7828  003978  0E00               	movlw	0
  7829  00397A  1A58               	xorwf	___flge@ff1,f,c
  7830  00397C  0E00               	movlw	0
  7831  00397E  1A59               	xorwf	___flge@ff1+1,f,c
  7832  003980  0E00               	movlw	0
  7833  003982  1A5A               	xorwf	___flge@ff1+2,f,c
  7834  003984  0E80               	movlw	128
  7835  003986  1A5B               	xorwf	___flge@ff1+3,f,c
  7836  003988  0E00               	movlw	0
  7837  00398A  1A5C               	xorwf	___flge@ff2,f,c
  7838  00398C  0E00               	movlw	0
  7839  00398E  1A5D               	xorwf	___flge@ff2+1,f,c
  7840  003990  0E00               	movlw	0
  7841  003992  1A5E               	xorwf	___flge@ff2+2,f,c
  7842  003994  0E80               	movlw	128
  7843  003996  1A5F               	xorwf	___flge@ff2+3,f,c
  7844  003998  505C               	movf	___flge@ff2,w,c
  7845  00399A  5C58               	subwf	___flge@ff1,w,c
  7846  00399C  505D               	movf	___flge@ff2+1,w,c
  7847  00399E  5859               	subwfb	___flge@ff1+1,w,c
  7848  0039A0  505E               	movf	___flge@ff2+2,w,c
  7849  0039A2  585A               	subwfb	___flge@ff1+2,w,c
  7850  0039A4  505F               	movf	___flge@ff2+3,w,c
  7851  0039A6  585B               	subwfb	___flge@ff1+3,w,c
  7852  0039A8  B0D8               	btfsc	status,0,c
  7853  0039AA  D002               	goto	l6368
  7854  0039AC  90D8               	bcf	status,0,c
  7855  0039AE  0012               	return	
  7856  0039B0                     l6368:
  7857  0039B0  80D8               	bsf	status,0,c
  7858  0039B2  0012               	return		;funcret
  7859  0039B4                     __end_of___flge:
  7860                           	opt callstack 0
  7861                           
  7862 ;; *************** function ___fleq *****************
  7863 ;; Defined at:
  7864 ;;		line 4 in file "D:\MPLAB\pic\sources\c99\common\fleq.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;  ff1             4    6[COMRAM] unsigned char 
  7867 ;;  ff2             4   10[COMRAM] unsigned char 
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;		None
  7870 ;; Return value:  Size  Location     Type
  7871 ;;		None               void
  7872 ;; Registers used:
  7873 ;;		wreg, status,2, status,0
  7874 ;; Tracked objects:
  7875 ;;		On entry : 0/0
  7876 ;;		On exit  : 0/0
  7877 ;;		Unchanged: 0/0
  7878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7879 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7881 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7882 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7883 ;;Total ram usage:       12 bytes
  7884 ;; Hardware stack levels used:    1
  7885 ;; Hardware stack levels required when called:    4
  7886 ;; This function calls:
  7887 ;;		Nothing
  7888 ;; This function is called by:
  7889 ;;		_efgtoa
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           	psect	text24
  7894  003DAA                     __ptext24:
  7895                           	opt callstack 0
  7896  003DAA                     ___fleq:
  7897                           	opt callstack 21
  7898                           
  7899                           ;incstack = 0
  7900  003DAA  0E00               	movlw	0
  7901  003DAC  1407               	andwf	___fleq@ff1,w,c
  7902  003DAE  6E0F               	movwf	??___fleq& (0+255),c
  7903  003DB0  0E00               	movlw	0
  7904  003DB2  1408               	andwf	___fleq@ff1+1,w,c
  7905  003DB4  6E10               	movwf	(??___fleq+1)& (0+255),c
  7906  003DB6  0E80               	movlw	128
  7907  003DB8  1409               	andwf	___fleq@ff1+2,w,c
  7908  003DBA  6E11               	movwf	(??___fleq+2)& (0+255),c
  7909  003DBC  0E7F               	movlw	127
  7910  003DBE  140A               	andwf	___fleq@ff1+3,w,c
  7911  003DC0  6E12               	movwf	(??___fleq+3)& (0+255),c
  7912  003DC2  500F               	movf	??___fleq,w,c
  7913  003DC4  1010               	iorwf	??___fleq+1,w,c
  7914  003DC6  1011               	iorwf	??___fleq+2,w,c
  7915  003DC8  1012               	iorwf	??___fleq+3,w,c
  7916  003DCA  A4D8               	btfss	status,2,c
  7917  003DCC  D008               	goto	l6338
  7918  003DCE  0E00               	movlw	0
  7919  003DD0  6E07               	movwf	___fleq@ff1,c
  7920  003DD2  0E00               	movlw	0
  7921  003DD4  6E08               	movwf	___fleq@ff1+1,c
  7922  003DD6  0E00               	movlw	0
  7923  003DD8  6E09               	movwf	___fleq@ff1+2,c
  7924  003DDA  0E00               	movlw	0
  7925  003DDC  6E0A               	movwf	___fleq@ff1+3,c
  7926  003DDE                     l6338:
  7927  003DDE  0E00               	movlw	0
  7928  003DE0  140B               	andwf	___fleq@ff2,w,c
  7929  003DE2  6E0F               	movwf	??___fleq& (0+255),c
  7930  003DE4  0E00               	movlw	0
  7931  003DE6  140C               	andwf	___fleq@ff2+1,w,c
  7932  003DE8  6E10               	movwf	(??___fleq+1)& (0+255),c
  7933  003DEA  0E80               	movlw	128
  7934  003DEC  140D               	andwf	___fleq@ff2+2,w,c
  7935  003DEE  6E11               	movwf	(??___fleq+2)& (0+255),c
  7936  003DF0  0E7F               	movlw	127
  7937  003DF2  140E               	andwf	___fleq@ff2+3,w,c
  7938  003DF4  6E12               	movwf	(??___fleq+3)& (0+255),c
  7939  003DF6  500F               	movf	??___fleq,w,c
  7940  003DF8  1010               	iorwf	??___fleq+1,w,c
  7941  003DFA  1011               	iorwf	??___fleq+2,w,c
  7942  003DFC  1012               	iorwf	??___fleq+3,w,c
  7943  003DFE  A4D8               	btfss	status,2,c
  7944  003E00  D008               	goto	l6342
  7945  003E02  0E00               	movlw	0
  7946  003E04  6E0B               	movwf	___fleq@ff2,c
  7947  003E06  0E00               	movlw	0
  7948  003E08  6E0C               	movwf	___fleq@ff2+1,c
  7949  003E0A  0E00               	movlw	0
  7950  003E0C  6E0D               	movwf	___fleq@ff2+2,c
  7951  003E0E  0E00               	movlw	0
  7952  003E10  6E0E               	movwf	___fleq@ff2+3,c
  7953  003E12                     l6342:
  7954  003E12  500B               	movf	___fleq@ff2,w,c
  7955  003E14  1807               	xorwf	___fleq@ff1,w,c
  7956  003E16  E10A               	bnz	u8180
  7957  003E18  500C               	movf	___fleq@ff2+1,w,c
  7958  003E1A  1808               	xorwf	___fleq@ff1+1,w,c
  7959  003E1C  E107               	bnz	u8180
  7960  003E1E  500D               	movf	___fleq@ff2+2,w,c
  7961  003E20  1809               	xorwf	___fleq@ff1+2,w,c
  7962  003E22  E104               	bnz	u8180
  7963  003E24  500E               	movf	___fleq@ff2+3,w,c
  7964  003E26  180A               	xorwf	___fleq@ff1+3,w,c
  7965  003E28  B4D8               	btfsc	status,2,c
  7966  003E2A  D002               	goto	l6346
  7967  003E2C                     u8180:
  7968  003E2C  90D8               	bcf	status,0,c
  7969  003E2E  0012               	return	
  7970  003E30                     l6346:
  7971  003E30  80D8               	bsf	status,0,c
  7972  003E32  0012               	return		;funcret
  7973  003E34                     __end_of___fleq:
  7974                           	opt callstack 0
  7975                           
  7976 ;; *************** function ___fldiv *****************
  7977 ;; Defined at:
  7978 ;;		line 11 in file "D:\MPLAB\pic\sources\c99\common\sprcdiv.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;  b               4   26[COMRAM] unsigned char 
  7981 ;;  a               4   30[COMRAM] unsigned char 
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;  grs             4   45[COMRAM] unsigned long 
  7984 ;;  rem             4   38[COMRAM] unsigned long 
  7985 ;;  new_exp         2   43[COMRAM] short 
  7986 ;;  aexp            1   50[COMRAM] unsigned char 
  7987 ;;  bexp            1   49[COMRAM] unsigned char 
  7988 ;;  sign            1   42[COMRAM] unsigned char 
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  4   26[COMRAM] unsigned char 
  7991 ;; Registers used:
  7992 ;;		wreg, status,2, status,0
  7993 ;; Tracked objects:
  7994 ;;		On entry : 0/0
  7995 ;;		On exit  : 0/0
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7998 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7999 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8000 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8001 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8002 ;;Total ram usage:       25 bytes
  8003 ;; Hardware stack levels used:    1
  8004 ;; Hardware stack levels required when called:    4
  8005 ;; This function calls:
  8006 ;;		Nothing
  8007 ;; This function is called by:
  8008 ;;		_read_adc_voltage
  8009 ;;		_efgtoa
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           
  8013                           	psect	text25
  8014  002B34                     __ptext25:
  8015                           	opt callstack 0
  8016  002B34                     ___fldiv:
  8017                           	opt callstack 25
  8018                           
  8019                           ;incstack = 0
  8020  002B34  501E               	movf	___fldiv@b+3,w,c
  8021  002B36  0B80               	andlw	128
  8022  002B38  6E2B               	movwf	___fldiv@sign,c
  8023  002B3A  501E               	movf	___fldiv@b+3,w,c
  8024  002B3C  241E               	addwf	___fldiv@b+3,w,c
  8025  002B3E  6E32               	movwf	___fldiv@bexp,c
  8026  002B40  BE1D               	btfsc	___fldiv@b+2,7,c
  8027  002B42  8032               	bsf	___fldiv@bexp,0,c
  8028  002B44  5032               	movf	___fldiv@bexp,w,c
  8029  002B46  B4D8               	btfsc	status,2,c
  8030  002B48  D00D               	goto	l5996
  8031  002B4A  2832               	incf	___fldiv@bexp,w,c
  8032  002B4C  A4D8               	btfss	status,2,c
  8033  002B4E  D008               	goto	l5992
  8034  002B50  0E00               	movlw	0
  8035  002B52  6E1B               	movwf	___fldiv@b,c
  8036  002B54  0E00               	movlw	0
  8037  002B56  6E1C               	movwf	___fldiv@b+1,c
  8038  002B58  0E00               	movlw	0
  8039  002B5A  6E1D               	movwf	___fldiv@b+2,c
  8040  002B5C  0E00               	movlw	0
  8041  002B5E  6E1E               	movwf	___fldiv@b+3,c
  8042  002B60                     l5992:
  8043  002B60  8E1D               	bsf	___fldiv@b+2,7,c
  8044  002B62  D006               	goto	L15
  8045  002B64                     l5996:
  8046  002B64  0E00               	movlw	0
  8047  002B66  6E1B               	movwf	___fldiv@b,c
  8048  002B68  0E00               	movlw	0
  8049  002B6A  6E1C               	movwf	___fldiv@b+1,c
  8050  002B6C  0E00               	movlw	0
  8051  002B6E  6E1D               	movwf	___fldiv@b+2,c
  8052  002B70                     L15:
  8053  002B70  0E00               	movlw	0
  8054  002B72  6E1E               	movwf	___fldiv@b+3,c
  8055  002B74  5022               	movf	___fldiv@a+3,w,c
  8056  002B76  0B80               	andlw	128
  8057  002B78  1A2B               	xorwf	___fldiv@sign,f,c
  8058  002B7A  5022               	movf	___fldiv@a+3,w,c
  8059  002B7C  2422               	addwf	___fldiv@a+3,w,c
  8060  002B7E  6E33               	movwf	___fldiv@aexp,c
  8061  002B80  BE21               	btfsc	___fldiv@a+2,7,c
  8062  002B82  8033               	bsf	___fldiv@aexp,0,c
  8063  002B84  5033               	movf	___fldiv@aexp,w,c
  8064  002B86  B4D8               	btfsc	status,2,c
  8065  002B88  D00D               	goto	l6016
  8066  002B8A  2833               	incf	___fldiv@aexp,w,c
  8067  002B8C  A4D8               	btfss	status,2,c
  8068  002B8E  D008               	goto	l6012
  8069  002B90  0E00               	movlw	0
  8070  002B92  6E1F               	movwf	___fldiv@a,c
  8071  002B94  0E00               	movlw	0
  8072  002B96  6E20               	movwf	___fldiv@a+1,c
  8073  002B98  0E00               	movlw	0
  8074  002B9A  6E21               	movwf	___fldiv@a+2,c
  8075  002B9C  0E00               	movlw	0
  8076  002B9E  6E22               	movwf	___fldiv@a+3,c
  8077  002BA0                     l6012:
  8078  002BA0  8E21               	bsf	___fldiv@a+2,7,c
  8079  002BA2  D006               	goto	L16
  8080  002BA4                     l6016:
  8081  002BA4  0E00               	movlw	0
  8082  002BA6  6E1F               	movwf	___fldiv@a,c
  8083  002BA8  0E00               	movlw	0
  8084  002BAA  6E20               	movwf	___fldiv@a+1,c
  8085  002BAC  0E00               	movlw	0
  8086  002BAE  6E21               	movwf	___fldiv@a+2,c
  8087  002BB0                     L16:
  8088  002BB0  0E00               	movlw	0
  8089  002BB2  6E22               	movwf	___fldiv@a+3,c
  8090  002BB4  501F               	movf	___fldiv@a,w,c
  8091  002BB6  1020               	iorwf	___fldiv@a+1,w,c
  8092  002BB8  1021               	iorwf	___fldiv@a+2,w,c
  8093  002BBA  1022               	iorwf	___fldiv@a+3,w,c
  8094  002BBC  A4D8               	btfss	status,2,c
  8095  002BBE  D017               	goto	l6030
  8096  002BC0  0E00               	movlw	0
  8097  002BC2  6E1B               	movwf	___fldiv@b,c
  8098  002BC4  0E00               	movlw	0
  8099  002BC6  6E1C               	movwf	___fldiv@b+1,c
  8100  002BC8  0E00               	movlw	0
  8101  002BCA  6E1D               	movwf	___fldiv@b+2,c
  8102  002BCC  0E00               	movlw	0
  8103  002BCE  6E1E               	movwf	___fldiv@b+3,c
  8104  002BD0  0E80               	movlw	128
  8105  002BD2  121D               	iorwf	___fldiv@b+2,f,c
  8106  002BD4  0E7F               	movlw	127
  8107  002BD6  121E               	iorwf	___fldiv@b+3,f,c
  8108  002BD8                     l6024:
  8109  002BD8  502B               	movf	___fldiv@sign,w,c
  8110  002BDA  121E               	iorwf	___fldiv@b+3,f,c
  8111  002BDC  C01B  F01B         	movff	___fldiv@b,?___fldiv
  8112  002BE0  C01C  F01C         	movff	___fldiv@b+1,?___fldiv+1
  8113  002BE4  C01D  F01D         	movff	___fldiv@b+2,?___fldiv+2
  8114  002BE8  C01E  F01E         	movff	___fldiv@b+3,?___fldiv+3
  8115  002BEC  0012               	return	
  8116  002BEE                     l6030:
  8117  002BEE  5032               	movf	___fldiv@bexp,w,c
  8118  002BF0  A4D8               	btfss	status,2,c
  8119  002BF2  D009               	goto	l6038
  8120  002BF4  0E00               	movlw	0
  8121  002BF6  6E1B               	movwf	?___fldiv,c
  8122  002BF8  0E00               	movlw	0
  8123  002BFA  6E1C               	movwf	?___fldiv+1,c
  8124  002BFC  0E00               	movlw	0
  8125  002BFE  6E1D               	movwf	?___fldiv+2,c
  8126  002C00  0E00               	movlw	0
  8127  002C02  6E1E               	movwf	?___fldiv+3,c
  8128  002C04  0012               	return	
  8129  002C06                     l6038:
  8130  002C06  5033               	movf	___fldiv@aexp,w,c
  8131  002C08  C032  F023         	movff	___fldiv@bexp,??___fldiv
  8132  002C0C  6A24               	clrf	(??___fldiv+1)& (0+255),c
  8133  002C0E  5E23               	subwf	??___fldiv,f,c
  8134  002C10  0E00               	movlw	0
  8135  002C12  5A24               	subwfb	??___fldiv+1,f,c
  8136  002C14  0E7F               	movlw	127
  8137  002C16  2423               	addwf	??___fldiv,w,c
  8138  002C18  6E2C               	movwf	___fldiv@new_exp,c
  8139  002C1A  0E00               	movlw	0
  8140  002C1C  2024               	addwfc	??___fldiv+1,w,c
  8141  002C1E  6E2D               	movwf	___fldiv@new_exp+1,c
  8142  002C20  C01B  F027         	movff	___fldiv@b,___fldiv@rem
  8143  002C24  C01C  F028         	movff	___fldiv@b+1,___fldiv@rem+1
  8144  002C28  C01D  F029         	movff	___fldiv@b+2,___fldiv@rem+2
  8145  002C2C  C01E  F02A         	movff	___fldiv@b+3,___fldiv@rem+3
  8146  002C30  0E00               	movlw	0
  8147  002C32  6E1B               	movwf	___fldiv@b,c
  8148  002C34  0E00               	movlw	0
  8149  002C36  6E1C               	movwf	___fldiv@b+1,c
  8150  002C38  0E00               	movlw	0
  8151  002C3A  6E1D               	movwf	___fldiv@b+2,c
  8152  002C3C  0E00               	movlw	0
  8153  002C3E  6E1E               	movwf	___fldiv@b+3,c
  8154  002C40  0E00               	movlw	0
  8155  002C42  6E2E               	movwf	___fldiv@grs,c
  8156  002C44  0E00               	movlw	0
  8157  002C46  6E2F               	movwf	___fldiv@grs+1,c
  8158  002C48  0E00               	movlw	0
  8159  002C4A  6E30               	movwf	___fldiv@grs+2,c
  8160  002C4C  0E00               	movlw	0
  8161  002C4E  6E31               	movwf	___fldiv@grs+3,c
  8162  002C50  0E00               	movlw	0
  8163  002C52  6E33               	movwf	___fldiv@aexp,c
  8164  002C54  D028               	goto	l1103
  8165  002C56                     l6048:
  8166  002C56  5033               	movf	___fldiv@aexp,w,c
  8167  002C58  B4D8               	btfsc	status,2,c
  8168  002C5A  D011               	goto	l6056
  8169  002C5C  90D8               	bcf	status,0,c
  8170  002C5E  3627               	rlcf	___fldiv@rem,f,c
  8171  002C60  3628               	rlcf	___fldiv@rem+1,f,c
  8172  002C62  3629               	rlcf	___fldiv@rem+2,f,c
  8173  002C64  362A               	rlcf	___fldiv@rem+3,f,c
  8174  002C66  90D8               	bcf	status,0,c
  8175  002C68  361B               	rlcf	___fldiv@b,f,c
  8176  002C6A  361C               	rlcf	___fldiv@b+1,f,c
  8177  002C6C  361D               	rlcf	___fldiv@b+2,f,c
  8178  002C6E  361E               	rlcf	___fldiv@b+3,f,c
  8179  002C70  BE31               	btfsc	___fldiv@grs+3,7,c
  8180  002C72  801B               	bsf	___fldiv@b,0,c
  8181  002C74  90D8               	bcf	status,0,c
  8182  002C76  362E               	rlcf	___fldiv@grs,f,c
  8183  002C78  362F               	rlcf	___fldiv@grs+1,f,c
  8184  002C7A  3630               	rlcf	___fldiv@grs+2,f,c
  8185  002C7C  3631               	rlcf	___fldiv@grs+3,f,c
  8186  002C7E                     l6056:
  8187  002C7E  501F               	movf	___fldiv@a,w,c
  8188  002C80  5C27               	subwf	___fldiv@rem,w,c
  8189  002C82  5020               	movf	___fldiv@a+1,w,c
  8190  002C84  5828               	subwfb	___fldiv@rem+1,w,c
  8191  002C86  5021               	movf	___fldiv@a+2,w,c
  8192  002C88  5829               	subwfb	___fldiv@rem+2,w,c
  8193  002C8A  5022               	movf	___fldiv@a+3,w,c
  8194  002C8C  582A               	subwfb	___fldiv@rem+3,w,c
  8195  002C8E  A0D8               	btfss	status,0,c
  8196  002C90  D009               	goto	l6062
  8197  002C92  8C31               	bsf	___fldiv@grs+3,6,c
  8198  002C94  501F               	movf	___fldiv@a,w,c
  8199  002C96  5E27               	subwf	___fldiv@rem,f,c
  8200  002C98  5020               	movf	___fldiv@a+1,w,c
  8201  002C9A  5A28               	subwfb	___fldiv@rem+1,f,c
  8202  002C9C  5021               	movf	___fldiv@a+2,w,c
  8203  002C9E  5A29               	subwfb	___fldiv@rem+2,f,c
  8204  002CA0  5022               	movf	___fldiv@a+3,w,c
  8205  002CA2  5A2A               	subwfb	___fldiv@rem+3,f,c
  8206  002CA4                     l6062:
  8207  002CA4  2A33               	incf	___fldiv@aexp,f,c
  8208  002CA6                     l1103:
  8209  002CA6  0E19               	movlw	25
  8210  002CA8  6433               	cpfsgt	___fldiv@aexp,c
  8211  002CAA  D7D5               	goto	l6048
  8212  002CAC  5027               	movf	___fldiv@rem,w,c
  8213  002CAE  1028               	iorwf	___fldiv@rem+1,w,c
  8214  002CB0  1029               	iorwf	___fldiv@rem+2,w,c
  8215  002CB2  102A               	iorwf	___fldiv@rem+3,w,c
  8216  002CB4  B4D8               	btfsc	status,2,c
  8217  002CB6  D011               	goto	l6074
  8218  002CB8  802E               	bsf	___fldiv@grs,0,c
  8219  002CBA  D00F               	goto	l6074
  8220  002CBC                     l6068:
  8221  002CBC  90D8               	bcf	status,0,c
  8222  002CBE  361B               	rlcf	___fldiv@b,f,c
  8223  002CC0  361C               	rlcf	___fldiv@b+1,f,c
  8224  002CC2  361D               	rlcf	___fldiv@b+2,f,c
  8225  002CC4  361E               	rlcf	___fldiv@b+3,f,c
  8226  002CC6  BE31               	btfsc	___fldiv@grs+3,7,c
  8227  002CC8  801B               	bsf	___fldiv@b,0,c
  8228  002CCA  90D8               	bcf	status,0,c
  8229  002CCC  362E               	rlcf	___fldiv@grs,f,c
  8230  002CCE  362F               	rlcf	___fldiv@grs+1,f,c
  8231  002CD0  3630               	rlcf	___fldiv@grs+2,f,c
  8232  002CD2  3631               	rlcf	___fldiv@grs+3,f,c
  8233  002CD4  062C               	decf	___fldiv@new_exp,f,c
  8234  002CD6  A0D8               	btfss	status,0,c
  8235  002CD8  062D               	decf	___fldiv@new_exp+1,f,c
  8236  002CDA                     l6074:
  8237  002CDA  AE1D               	btfss	___fldiv@b+2,7,c
  8238  002CDC  D7EF               	goto	l6068
  8239  002CDE  0E00               	movlw	0
  8240  002CE0  6E33               	movwf	___fldiv@aexp,c
  8241  002CE2  AE31               	btfss	___fldiv@grs+3,7,c
  8242  002CE4  D017               	goto	l1114
  8243  002CE6  0EFF               	movlw	255
  8244  002CE8  142E               	andwf	___fldiv@grs,w,c
  8245  002CEA  6E23               	movwf	??___fldiv& (0+255),c
  8246  002CEC  0EFF               	movlw	255
  8247  002CEE  142F               	andwf	___fldiv@grs+1,w,c
  8248  002CF0  6E24               	movwf	(??___fldiv+1)& (0+255),c
  8249  002CF2  0EFF               	movlw	255
  8250  002CF4  1430               	andwf	___fldiv@grs+2,w,c
  8251  002CF6  6E25               	movwf	(??___fldiv+2)& (0+255),c
  8252  002CF8  0E7F               	movlw	127
  8253  002CFA  1431               	andwf	___fldiv@grs+3,w,c
  8254  002CFC  6E26               	movwf	(??___fldiv+3)& (0+255),c
  8255  002CFE  5023               	movf	??___fldiv,w,c
  8256  002D00  1024               	iorwf	??___fldiv+1,w,c
  8257  002D02  1025               	iorwf	??___fldiv+2,w,c
  8258  002D04  1026               	iorwf	??___fldiv+3,w,c
  8259  002D06  B4D8               	btfsc	status,2,c
  8260  002D08  D003               	goto	l1115
  8261  002D0A                     u7780:
  8262  002D0A  0E01               	movlw	1
  8263  002D0C  6E33               	movwf	___fldiv@aexp,c
  8264  002D0E  D002               	goto	l1114
  8265  002D10                     l1115:
  8266  002D10  B01B               	btfsc	___fldiv@b,0,c
  8267  002D12  D7FB               	goto	u7780
  8268  002D14                     l1114:
  8269  002D14  5033               	movf	___fldiv@aexp,w,c
  8270  002D16  B4D8               	btfsc	status,2,c
  8271  002D18  D01F               	goto	l6094
  8272  002D1A  0E01               	movlw	1
  8273  002D1C  261B               	addwf	___fldiv@b,f,c
  8274  002D1E  0E00               	movlw	0
  8275  002D20  221C               	addwfc	___fldiv@b+1,f,c
  8276  002D22  221D               	addwfc	___fldiv@b+2,f,c
  8277  002D24  221E               	addwfc	___fldiv@b+3,f,c
  8278  002D26  A01E               	btfss	___fldiv@b+3,0,c
  8279  002D28  D017               	goto	l6094
  8280  002D2A  C01B  F023         	movff	___fldiv@b,??___fldiv
  8281  002D2E  C01C  F024         	movff	___fldiv@b+1,??___fldiv+1
  8282  002D32  C01D  F025         	movff	___fldiv@b+2,??___fldiv+2
  8283  002D36  C01E  F026         	movff	___fldiv@b+3,??___fldiv+3
  8284  002D3A  3426               	rlcf	??___fldiv+3,w,c
  8285  002D3C  3226               	rrcf	??___fldiv+3,f,c
  8286  002D3E  3225               	rrcf	??___fldiv+2,f,c
  8287  002D40  3224               	rrcf	??___fldiv+1,f,c
  8288  002D42  3223               	rrcf	??___fldiv,f,c
  8289  002D44  C023  F01B         	movff	??___fldiv,___fldiv@b
  8290  002D48  C024  F01C         	movff	??___fldiv+1,___fldiv@b+1
  8291  002D4C  C025  F01D         	movff	??___fldiv+2,___fldiv@b+2
  8292  002D50  C026  F01E         	movff	??___fldiv+3,___fldiv@b+3
  8293  002D54  4A2C               	infsnz	___fldiv@new_exp,f,c
  8294  002D56  2A2D               	incf	___fldiv@new_exp+1,f,c
  8295  002D58                     l6094:
  8296  002D58  BE2D               	btfsc	___fldiv@new_exp+1,7,c
  8297  002D5A  D010               	goto	l6098
  8298  002D5C  502D               	movf	___fldiv@new_exp+1,w,c
  8299  002D5E  E103               	bnz	u7820
  8300  002D60  282C               	incf	___fldiv@new_exp,w,c
  8301  002D62  A0D8               	btfss	status,0,c
  8302  002D64  D00B               	goto	l6098
  8303  002D66                     u7820:
  8304  002D66  0E00               	movlw	0
  8305  002D68  6E2D               	movwf	___fldiv@new_exp+1,c
  8306  002D6A  682C               	setf	___fldiv@new_exp,c
  8307  002D6C  0E00               	movlw	0
  8308  002D6E  6E1B               	movwf	___fldiv@b,c
  8309  002D70  0E00               	movlw	0
  8310  002D72  6E1C               	movwf	___fldiv@b+1,c
  8311  002D74  0E00               	movlw	0
  8312  002D76  6E1D               	movwf	___fldiv@b+2,c
  8313  002D78  0E00               	movlw	0
  8314  002D7A  6E1E               	movwf	___fldiv@b+3,c
  8315  002D7C                     l6098:
  8316  002D7C  BE2D               	btfsc	___fldiv@new_exp+1,7,c
  8317  002D7E  D005               	goto	u7830
  8318  002D80  502D               	movf	___fldiv@new_exp+1,w,c
  8319  002D82  E111               	bnz	l6102
  8320  002D84  042C               	decf	___fldiv@new_exp,w,c
  8321  002D86  B0D8               	btfsc	status,0,c
  8322  002D88  D00E               	goto	l6102
  8323  002D8A                     u7830:
  8324  002D8A  0E00               	movlw	0
  8325  002D8C  6E2D               	movwf	___fldiv@new_exp+1,c
  8326  002D8E  0E00               	movlw	0
  8327  002D90  6E2C               	movwf	___fldiv@new_exp,c
  8328  002D92  0E00               	movlw	0
  8329  002D94  6E1B               	movwf	___fldiv@b,c
  8330  002D96  0E00               	movlw	0
  8331  002D98  6E1C               	movwf	___fldiv@b+1,c
  8332  002D9A  0E00               	movlw	0
  8333  002D9C  6E1D               	movwf	___fldiv@b+2,c
  8334  002D9E  0E00               	movlw	0
  8335  002DA0  6E1E               	movwf	___fldiv@b+3,c
  8336  002DA2  0E00               	movlw	0
  8337  002DA4  6E2B               	movwf	___fldiv@sign,c
  8338  002DA6                     l6102:
  8339  002DA6  C02C  F032         	movff	___fldiv@new_exp,___fldiv@bexp
  8340  002DAA  A032               	btfss	___fldiv@bexp,0,c
  8341  002DAC  D002               	goto	l6108
  8342  002DAE  8E1D               	bsf	___fldiv@b+2,7,c
  8343  002DB0  D001               	goto	l6110
  8344  002DB2                     l6108:
  8345  002DB2  9E1D               	bcf	___fldiv@b+2,7,c
  8346  002DB4                     l6110:
  8347  002DB4  90D8               	bcf	status,0,c
  8348  002DB6  3032               	rrcf	___fldiv@bexp,w,c
  8349  002DB8  6E1E               	movwf	___fldiv@b+3,c
  8350  002DBA  D70E               	goto	l6024
  8351  002DBC                     __end_of___fldiv:
  8352                           	opt callstack 0
  8353                           
  8354 ;; *************** function ___awmod *****************
  8355 ;; Defined at:
  8356 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\awmod.c"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;  dividend        2    6[COMRAM] int 
  8359 ;;  divisor         2    8[COMRAM] int 
  8360 ;; Auto vars:     Size  Location     Type
  8361 ;;  sign            1   11[COMRAM] unsigned char 
  8362 ;;  counter         1   10[COMRAM] unsigned char 
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  2    6[COMRAM] int 
  8365 ;; Registers used:
  8366 ;;		wreg, status,2, status,0
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8373 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8375 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8376 ;;Total ram usage:        6 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; Hardware stack levels required when called:    4
  8379 ;; This function calls:
  8380 ;;		Nothing
  8381 ;; This function is called by:
  8382 ;;		_efgtoa
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385                           
  8386                           	psect	text26
  8387  003F3A                     __ptext26:
  8388                           	opt callstack 0
  8389  003F3A                     ___awmod:
  8390                           	opt callstack 21
  8391                           
  8392                           ;incstack = 0
  8393  003F3A  0E00               	movlw	0
  8394  003F3C  6E0C               	movwf	___awmod@sign,c
  8395  003F3E  AE08               	btfss	___awmod@dividend+1,7,c
  8396  003F40  D006               	goto	l6306
  8397  003F42  6C07               	negf	___awmod@dividend,c
  8398  003F44  1E08               	comf	___awmod@dividend+1,f,c
  8399  003F46  B0D8               	btfsc	status,0,c
  8400  003F48  2A08               	incf	___awmod@dividend+1,f,c
  8401  003F4A  0E01               	movlw	1
  8402  003F4C  6E0C               	movwf	___awmod@sign,c
  8403  003F4E                     l6306:
  8404  003F4E  AE0A               	btfss	___awmod@divisor+1,7,c
  8405  003F50  D004               	goto	l6310
  8406  003F52  6C09               	negf	___awmod@divisor,c
  8407  003F54  1E0A               	comf	___awmod@divisor+1,f,c
  8408  003F56  B0D8               	btfsc	status,0,c
  8409  003F58  2A0A               	incf	___awmod@divisor+1,f,c
  8410  003F5A                     l6310:
  8411  003F5A  5009               	movf	___awmod@divisor,w,c
  8412  003F5C  100A               	iorwf	___awmod@divisor+1,w,c
  8413  003F5E  B4D8               	btfsc	status,2,c
  8414  003F60  D018               	goto	l6326
  8415  003F62  0E01               	movlw	1
  8416  003F64  6E0B               	movwf	___awmod@counter,c
  8417  003F66  D004               	goto	l6316
  8418  003F68                     l6314:
  8419  003F68  90D8               	bcf	status,0,c
  8420  003F6A  3609               	rlcf	___awmod@divisor,f,c
  8421  003F6C  360A               	rlcf	___awmod@divisor+1,f,c
  8422  003F6E  2A0B               	incf	___awmod@counter,f,c
  8423  003F70                     l6316:
  8424  003F70  AE0A               	btfss	___awmod@divisor+1,7,c
  8425  003F72  D7FA               	goto	l6314
  8426  003F74                     u8130:
  8427  003F74  5009               	movf	___awmod@divisor,w,c
  8428  003F76  5C07               	subwf	___awmod@dividend,w,c
  8429  003F78  500A               	movf	___awmod@divisor+1,w,c
  8430  003F7A  5808               	subwfb	___awmod@dividend+1,w,c
  8431  003F7C  A0D8               	btfss	status,0,c
  8432  003F7E  D004               	goto	l6322
  8433  003F80  5009               	movf	___awmod@divisor,w,c
  8434  003F82  5E07               	subwf	___awmod@dividend,f,c
  8435  003F84  500A               	movf	___awmod@divisor+1,w,c
  8436  003F86  5A08               	subwfb	___awmod@dividend+1,f,c
  8437  003F88                     l6322:
  8438  003F88  90D8               	bcf	status,0,c
  8439  003F8A  320A               	rrcf	___awmod@divisor+1,f,c
  8440  003F8C  3209               	rrcf	___awmod@divisor,f,c
  8441  003F8E  2E0B               	decfsz	___awmod@counter,f,c
  8442  003F90  D7F1               	goto	u8130
  8443  003F92                     l6326:
  8444  003F92  500C               	movf	___awmod@sign,w,c
  8445  003F94  B4D8               	btfsc	status,2,c
  8446  003F96  D004               	goto	l6330
  8447  003F98  6C07               	negf	___awmod@dividend,c
  8448  003F9A  1E08               	comf	___awmod@dividend+1,f,c
  8449  003F9C  B0D8               	btfsc	status,0,c
  8450  003F9E  2A08               	incf	___awmod@dividend+1,f,c
  8451  003FA0                     l6330:
  8452  003FA0  C007  F007         	movff	___awmod@dividend,?___awmod
  8453  003FA4  C008  F008         	movff	___awmod@dividend+1,?___awmod+1
  8454  003FA8  0012               	return		;funcret
  8455  003FAA                     __end_of___awmod:
  8456                           	opt callstack 0
  8457                           
  8458 ;; *************** function ___awdiv *****************
  8459 ;; Defined at:
  8460 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\awdiv.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;  dividend        2    6[COMRAM] int 
  8463 ;;  divisor         2    8[COMRAM] int 
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;  quotient        2   12[COMRAM] int 
  8466 ;;  sign            1   11[COMRAM] unsigned char 
  8467 ;;  counter         1   10[COMRAM] unsigned char 
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  2    6[COMRAM] int 
  8470 ;; Registers used:
  8471 ;;		wreg, status,2, status,0
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8478 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8480 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8481 ;;Total ram usage:        8 bytes
  8482 ;; Hardware stack levels used:    1
  8483 ;; Hardware stack levels required when called:    4
  8484 ;; This function calls:
  8485 ;;		Nothing
  8486 ;; This function is called by:
  8487 ;;		_efgtoa
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491                           	psect	text27
  8492  003E34                     __ptext27:
  8493                           	opt callstack 0
  8494  003E34                     ___awdiv:
  8495                           	opt callstack 21
  8496                           
  8497                           ;incstack = 0
  8498  003E34  0E00               	movlw	0
  8499  003E36  6E0C               	movwf	___awdiv@sign,c
  8500  003E38  AE0A               	btfss	___awdiv@divisor+1,7,c
  8501  003E3A  D006               	goto	l6262
  8502  003E3C  6C09               	negf	___awdiv@divisor,c
  8503  003E3E  1E0A               	comf	___awdiv@divisor+1,f,c
  8504  003E40  B0D8               	btfsc	status,0,c
  8505  003E42  2A0A               	incf	___awdiv@divisor+1,f,c
  8506  003E44  0E01               	movlw	1
  8507  003E46  6E0C               	movwf	___awdiv@sign,c
  8508  003E48                     l6262:
  8509  003E48  AE08               	btfss	___awdiv@dividend+1,7,c
  8510  003E4A  D006               	goto	l6268
  8511  003E4C  6C07               	negf	___awdiv@dividend,c
  8512  003E4E  1E08               	comf	___awdiv@dividend+1,f,c
  8513  003E50  B0D8               	btfsc	status,0,c
  8514  003E52  2A08               	incf	___awdiv@dividend+1,f,c
  8515  003E54  0E01               	movlw	1
  8516  003E56  1A0C               	xorwf	___awdiv@sign,f,c
  8517  003E58                     l6268:
  8518  003E58  0E00               	movlw	0
  8519  003E5A  6E0E               	movwf	___awdiv@quotient+1,c
  8520  003E5C  0E00               	movlw	0
  8521  003E5E  6E0D               	movwf	___awdiv@quotient,c
  8522  003E60  5009               	movf	___awdiv@divisor,w,c
  8523  003E62  100A               	iorwf	___awdiv@divisor+1,w,c
  8524  003E64  B4D8               	btfsc	status,2,c
  8525  003E66  D01C               	goto	l6290
  8526  003E68  0E01               	movlw	1
  8527  003E6A  6E0B               	movwf	___awdiv@counter,c
  8528  003E6C  D004               	goto	l6276
  8529  003E6E                     l6274:
  8530  003E6E  90D8               	bcf	status,0,c
  8531  003E70  3609               	rlcf	___awdiv@divisor,f,c
  8532  003E72  360A               	rlcf	___awdiv@divisor+1,f,c
  8533  003E74  2A0B               	incf	___awdiv@counter,f,c
  8534  003E76                     l6276:
  8535  003E76  AE0A               	btfss	___awdiv@divisor+1,7,c
  8536  003E78  D7FA               	goto	l6274
  8537  003E7A                     u8070:
  8538  003E7A  90D8               	bcf	status,0,c
  8539  003E7C  360D               	rlcf	___awdiv@quotient,f,c
  8540  003E7E  360E               	rlcf	___awdiv@quotient+1,f,c
  8541  003E80  5009               	movf	___awdiv@divisor,w,c
  8542  003E82  5C07               	subwf	___awdiv@dividend,w,c
  8543  003E84  500A               	movf	___awdiv@divisor+1,w,c
  8544  003E86  5808               	subwfb	___awdiv@dividend+1,w,c
  8545  003E88  A0D8               	btfss	status,0,c
  8546  003E8A  D005               	goto	l6286
  8547  003E8C  5009               	movf	___awdiv@divisor,w,c
  8548  003E8E  5E07               	subwf	___awdiv@dividend,f,c
  8549  003E90  500A               	movf	___awdiv@divisor+1,w,c
  8550  003E92  5A08               	subwfb	___awdiv@dividend+1,f,c
  8551  003E94  800D               	bsf	___awdiv@quotient,0,c
  8552  003E96                     l6286:
  8553  003E96  90D8               	bcf	status,0,c
  8554  003E98  320A               	rrcf	___awdiv@divisor+1,f,c
  8555  003E9A  3209               	rrcf	___awdiv@divisor,f,c
  8556  003E9C  2E0B               	decfsz	___awdiv@counter,f,c
  8557  003E9E  D7ED               	goto	u8070
  8558  003EA0                     l6290:
  8559  003EA0  500C               	movf	___awdiv@sign,w,c
  8560  003EA2  B4D8               	btfsc	status,2,c
  8561  003EA4  D004               	goto	l6294
  8562  003EA6  6C0D               	negf	___awdiv@quotient,c
  8563  003EA8  1E0E               	comf	___awdiv@quotient+1,f,c
  8564  003EAA  B0D8               	btfsc	status,0,c
  8565  003EAC  2A0E               	incf	___awdiv@quotient+1,f,c
  8566  003EAE                     l6294:
  8567  003EAE  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  8568  003EB2  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  8569  003EB6  0012               	return		;funcret
  8570  003EB8                     __end_of___awdiv:
  8571                           	opt callstack 0
  8572                           
  8573 ;; *************** function _dtoa *****************
  8574 ;; Defined at:
  8575 ;;		line 274 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;  fp              2   33[COMRAM] PTR struct _IO_FILE
  8578 ;;		 -> sprintf@f(6), 
  8579 ;;  d               8   35[COMRAM] long long 
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;  n               8   59[COMRAM] long long 
  8582 ;;  i               2   67[COMRAM] int 
  8583 ;;  s               2   57[COMRAM] int 
  8584 ;;  w               2   55[COMRAM] int 
  8585 ;;  p               2   53[COMRAM] int 
  8586 ;; Return value:  Size  Location     Type
  8587 ;;                  2   33[COMRAM] int 
  8588 ;; Registers used:
  8589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8590 ;; Tracked objects:
  8591 ;;		On entry : 0/0
  8592 ;;		On exit  : 0/0
  8593 ;;		Unchanged: 0/0
  8594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8595 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8599 ;;Total ram usage:       36 bytes
  8600 ;; Hardware stack levels used:    1
  8601 ;; Hardware stack levels required when called:    8
  8602 ;; This function calls:
  8603 ;;		___aodiv
  8604 ;;		___aomod
  8605 ;;		_abs
  8606 ;;		_pad
  8607 ;; This function is called by:
  8608 ;;		_vfpfcnvrt
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           	psect	text28
  8613  002DBC                     __ptext28:
  8614                           	opt callstack 0
  8615  002DBC                     _dtoa:
  8616                           	opt callstack 18
  8617                           
  8618                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 274: static int dtoa(FILE *fp, long long d);D
      +                          :\MPLAB\pic\sources\c99\common\doprnt.c: 275: {;D:\MPLAB\pic\sources\c99\common\doprnt.c
      +                          : 276:     int i, p, s, w;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 277:     long long 
      +                          n;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8619                           
  8620                           ;incstack = 0
  8621  002DBC  C024  F03C         	movff	dtoa@d,dtoa@n
  8622  002DC0  C025  F03D         	movff	dtoa@d+1,dtoa@n+1
  8623  002DC4  C026  F03E         	movff	dtoa@d+2,dtoa@n+2
  8624  002DC8  C027  F03F         	movff	dtoa@d+3,dtoa@n+3
  8625  002DCC  C028  F040         	movff	dtoa@d+4,dtoa@n+4
  8626  002DD0  C029  F041         	movff	dtoa@d+5,dtoa@n+5
  8627  002DD4  C02A  F042         	movff	dtoa@d+6,dtoa@n+6
  8628  002DD8  C02B  F043         	movff	dtoa@d+7,dtoa@n+7
  8629                           
  8630                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 281:     s = n < 0 ? 1 : 0;
  8631  002DDC  AE43               	btfss	dtoa@n+7,7,c
  8632  002DDE  D002               	goto	u8340
  8633  002DE0  0E01               	movlw	1
  8634  002DE2  D001               	goto	u8350
  8635  002DE4                     u8340:
  8636  002DE4  0E00               	movlw	0
  8637  002DE6                     u8350:
  8638  002DE6  6E3A               	movwf	dtoa@s,c
  8639  002DE8  6A3B               	clrf	dtoa@s+1,c
  8640                           
  8641                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  8642  002DEA  503A               	movf	dtoa@s,w,c
  8643  002DEC  103B               	iorwf	dtoa@s+1,w,c
  8644  002DEE  B4D8               	btfsc	status,2,c
  8645  002DF0  D010               	goto	l6442
  8646                           
  8647                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 283:         n = -n;
  8648  002DF2  1E43               	comf	dtoa@n+7,f,c
  8649  002DF4  1E42               	comf	dtoa@n+6,f,c
  8650  002DF6  1E41               	comf	dtoa@n+5,f,c
  8651  002DF8  1E40               	comf	dtoa@n+4,f,c
  8652  002DFA  1E3F               	comf	dtoa@n+3,f,c
  8653  002DFC  1E3E               	comf	dtoa@n+2,f,c
  8654  002DFE  1E3D               	comf	dtoa@n+1,f,c
  8655  002E00  6C3C               	negf	dtoa@n,c
  8656  002E02  0E00               	movlw	0
  8657  002E04  223D               	addwfc	dtoa@n+1,f,c
  8658  002E06  223E               	addwfc	dtoa@n+2,f,c
  8659  002E08  223F               	addwfc	dtoa@n+3,f,c
  8660  002E0A  2240               	addwfc	dtoa@n+4,f,c
  8661  002E0C  2241               	addwfc	dtoa@n+5,f,c
  8662  002E0E  2242               	addwfc	dtoa@n+6,f,c
  8663  002E10  2243               	addwfc	dtoa@n+7,f,c
  8664  002E12                     l6442:
  8665                           
  8666                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 287:     if (!(prec < 0)) {
  8667  002E12  0100               	movlb	0	; () banked
  8668  002E14  AFF7               	btfss	(_prec+1)& (0+255),7,b
  8669                           
  8670                           ; BSR set to: 0
  8671                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 288:         flags &= ~(1 << 1);
  8672  002E16  93F8               	bcf	_flags& (0+255),1,b
  8673                           
  8674                           ; BSR set to: 0
  8675                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 290:     p = (0 < prec) ? prec : 1;
  8676  002E18  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  8677  002E1A  D005               	goto	u8380
  8678  002E1C  51F7               	movf	(_prec+1)& (0+255),w,b
  8679  002E1E  E108               	bnz	l361
  8680  002E20  05F6               	decf	_prec& (0+255),w,b
  8681  002E22  B0D8               	btfsc	status,0,c
  8682  002E24  D005               	goto	l361
  8683  002E26                     u8380:
  8684                           
  8685                           ; BSR set to: 0
  8686  002E26  0E00               	movlw	0
  8687  002E28  6E37               	movwf	dtoa@p+1,c
  8688  002E2A  0E01               	movlw	1
  8689  002E2C  6E36               	movwf	dtoa@p,c
  8690  002E2E  D004               	goto	l363
  8691  002E30                     l361:
  8692                           
  8693                           ; BSR set to: 0
  8694  002E30  C0F6  F036         	movff	_prec,dtoa@p
  8695  002E34  C0F7  F037         	movff	_prec+1,dtoa@p+1
  8696  002E38                     l363:
  8697                           
  8698                           ; BSR set to: 0
  8699                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 291:     w = width;
  8700  002E38  C0F4  F038         	movff	_width,dtoa@w
  8701  002E3C  C0F5  F039         	movff	_width+1,dtoa@w+1
  8702                           
  8703                           ; BSR set to: 0
  8704                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 292:     if (s || (flags & (1 << 2))) {
  8705  002E40  503A               	movf	dtoa@s,w,c
  8706  002E42  103B               	iorwf	dtoa@s+1,w,c
  8707  002E44  A4D8               	btfss	status,2,c
  8708  002E46  D002               	goto	u8400
  8709                           
  8710                           ; BSR set to: 0
  8711  002E48  A5F8               	btfss	_flags& (0+255),2,b
  8712  002E4A  D003               	goto	l6456
  8713  002E4C                     u8400:
  8714                           
  8715                           ; BSR set to: 0
  8716                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 293:         --w;
  8717  002E4C  0638               	decf	dtoa@w,f,c
  8718  002E4E  A0D8               	btfss	status,0,c
  8719  002E50  0639               	decf	dtoa@w+1,f,c
  8720  002E52                     l6456:
  8721                           
  8722                           ; BSR set to: 0
  8723                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 297:     i = sizeof(dbuf) - 1;
  8724  002E52  0E00               	movlw	0
  8725  002E54  6E45               	movwf	dtoa@i+1,c
  8726  002E56  0E4F               	movlw	79
  8727  002E58  6E44               	movwf	dtoa@i,c
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] = '\0';
  8731  002E5A  0E00               	movlw	0
  8732  002E5C  0101               	movlb	1	; () banked
  8733  002E5E  6FF3               	movwf	(_dbuf+79)& (0+255),b
  8734                           
  8735                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1) && (n || (0 < p) || 
      +                          ((0 < w) && (flags & (1 << 1))))) {
  8736  002E60  D07C               	goto	l6470
  8737  002E62                     l6460:
  8738                           
  8739                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 300:         --i;
  8740  002E62  0644               	decf	dtoa@i,f,c
  8741  002E64  A0D8               	btfss	status,0,c
  8742  002E66  0645               	decf	dtoa@i+1,f,c
  8743                           
  8744                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 301:         dbuf[i] = '0' + abs(n % 10);
  8745  002E68  0EA4               	movlw	low _dbuf
  8746  002E6A  2444               	addwf	dtoa@i,w,c
  8747  002E6C  6ED9               	movwf	fsr2l,c
  8748  002E6E  0E01               	movlw	high _dbuf
  8749  002E70  2045               	addwfc	dtoa@i+1,w,c
  8750  002E72  6EDA               	movwf	fsr2h,c
  8751  002E74  C03C  F007         	movff	dtoa@n,___aomod@dividend
  8752  002E78  C03D  F008         	movff	dtoa@n+1,___aomod@dividend+1
  8753  002E7C  C03E  F009         	movff	dtoa@n+2,___aomod@dividend+2
  8754  002E80  C03F  F00A         	movff	dtoa@n+3,___aomod@dividend+3
  8755  002E84  C040  F00B         	movff	dtoa@n+4,___aomod@dividend+4
  8756  002E88  C041  F00C         	movff	dtoa@n+5,___aomod@dividend+5
  8757  002E8C  C042  F00D         	movff	dtoa@n+6,___aomod@dividend+6
  8758  002E90  C043  F00E         	movff	dtoa@n+7,___aomod@dividend+7
  8759  002E94  0E0A               	movlw	10
  8760  002E96  6E0F               	movwf	___aomod@divisor,c
  8761  002E98  0E00               	movlw	0
  8762  002E9A  6E10               	movwf	___aomod@divisor+1,c
  8763  002E9C  0E00               	movlw	0
  8764  002E9E  6E11               	movwf	___aomod@divisor+2,c
  8765  002EA0  0E00               	movlw	0
  8766  002EA2  6E12               	movwf	___aomod@divisor+3,c
  8767  002EA4  0E00               	movlw	0
  8768  002EA6  6E13               	movwf	___aomod@divisor+4,c
  8769  002EA8  0E00               	movlw	0
  8770  002EAA  6E14               	movwf	___aomod@divisor+5,c
  8771  002EAC  0E00               	movlw	0
  8772  002EAE  6E15               	movwf	___aomod@divisor+6,c
  8773  002EB0  0E00               	movlw	0
  8774  002EB2  6E16               	movwf	___aomod@divisor+7,c
  8775  002EB4  ECE0  F01B         	call	___aomod	;wreg free
  8776  002EB8  C007  F02C         	movff	?___aomod,??_dtoa
  8777  002EBC  C008  F02D         	movff	?___aomod+1,??_dtoa+1
  8778  002EC0  C009  F02E         	movff	?___aomod+2,??_dtoa+2
  8779  002EC4  C00A  F02F         	movff	?___aomod+3,??_dtoa+3
  8780  002EC8  C00B  F030         	movff	?___aomod+4,??_dtoa+4
  8781  002ECC  C00C  F031         	movff	?___aomod+5,??_dtoa+5
  8782  002ED0  C00D  F032         	movff	?___aomod+6,??_dtoa+6
  8783  002ED4  C00E  F033         	movff	?___aomod+7,??_dtoa+7
  8784  002ED8  C02C  F019         	movff	??_dtoa,abs@a
  8785  002EDC  C02E  F01A         	movff	??_dtoa+2,abs@a+1
  8786  002EE0  ECDE  F021         	call	_abs	;wreg free
  8787  002EE4  5019               	movf	?_abs,w,c
  8788  002EE6  0F30               	addlw	48
  8789  002EE8  6EDF               	movwf	indf2,c
  8790                           
  8791                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 302:         --p;
  8792  002EEA  0636               	decf	dtoa@p,f,c
  8793  002EEC  A0D8               	btfss	status,0,c
  8794  002EEE  0637               	decf	dtoa@p+1,f,c
  8795                           
  8796                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 303:         --w;
  8797  002EF0  0638               	decf	dtoa@w,f,c
  8798  002EF2  A0D8               	btfss	status,0,c
  8799  002EF4  0639               	decf	dtoa@w+1,f,c
  8800                           
  8801                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 304:         n = n / 10;
  8802  002EF6  C03C  F007         	movff	dtoa@n,___aodiv@dividend
  8803  002EFA  C03D  F008         	movff	dtoa@n+1,___aodiv@dividend+1
  8804  002EFE  C03E  F009         	movff	dtoa@n+2,___aodiv@dividend+2
  8805  002F02  C03F  F00A         	movff	dtoa@n+3,___aodiv@dividend+3
  8806  002F06  C040  F00B         	movff	dtoa@n+4,___aodiv@dividend+4
  8807  002F0A  C041  F00C         	movff	dtoa@n+5,___aodiv@dividend+5
  8808  002F0E  C042  F00D         	movff	dtoa@n+6,___aodiv@dividend+6
  8809  002F12  C043  F00E         	movff	dtoa@n+7,___aodiv@dividend+7
  8810  002F16  0E0A               	movlw	10
  8811  002F18  6E0F               	movwf	___aodiv@divisor,c
  8812  002F1A  0E00               	movlw	0
  8813  002F1C  6E10               	movwf	___aodiv@divisor+1,c
  8814  002F1E  0E00               	movlw	0
  8815  002F20  6E11               	movwf	___aodiv@divisor+2,c
  8816  002F22  0E00               	movlw	0
  8817  002F24  6E12               	movwf	___aodiv@divisor+3,c
  8818  002F26  0E00               	movlw	0
  8819  002F28  6E13               	movwf	___aodiv@divisor+4,c
  8820  002F2A  0E00               	movlw	0
  8821  002F2C  6E14               	movwf	___aodiv@divisor+5,c
  8822  002F2E  0E00               	movlw	0
  8823  002F30  6E15               	movwf	___aodiv@divisor+6,c
  8824  002F32  0E00               	movlw	0
  8825  002F34  6E16               	movwf	___aodiv@divisor+7,c
  8826  002F36  ECFC  F019         	call	___aodiv	;wreg free
  8827  002F3A  C007  F03C         	movff	?___aodiv,dtoa@n
  8828  002F3E  C008  F03D         	movff	?___aodiv+1,dtoa@n+1
  8829  002F42  C009  F03E         	movff	?___aodiv+2,dtoa@n+2
  8830  002F46  C00A  F03F         	movff	?___aodiv+3,dtoa@n+3
  8831  002F4A  C00B  F040         	movff	?___aodiv+4,dtoa@n+4
  8832  002F4E  C00C  F041         	movff	?___aodiv+5,dtoa@n+5
  8833  002F52  C00D  F042         	movff	?___aodiv+6,dtoa@n+6
  8834  002F56  C00E  F043         	movff	?___aodiv+7,dtoa@n+7
  8835  002F5A                     l6470:
  8836                           
  8837                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1) && (n || (0 < p) || 
      +                          ((0 < w) && (flags & (1 << 1))))) {
  8838  002F5A  BE45               	btfsc	dtoa@i+1,7,c
  8839  002F5C  D020               	goto	u8450
  8840  002F5E  5045               	movf	dtoa@i+1,w,c
  8841  002F60  E103               	bnz	u8410
  8842  002F62  0444               	decf	dtoa@i,w,c
  8843  002F64  A0D8               	btfss	status,0,c
  8844  002F66  D01B               	goto	u8450
  8845  002F68                     u8410:
  8846  002F68  503C               	movf	dtoa@n,w,c
  8847  002F6A  103D               	iorwf	dtoa@n+1,w,c
  8848  002F6C  103E               	iorwf	dtoa@n+2,w,c
  8849  002F6E  103F               	iorwf	dtoa@n+3,w,c
  8850  002F70  1040               	iorwf	dtoa@n+4,w,c
  8851  002F72  1041               	iorwf	dtoa@n+5,w,c
  8852  002F74  1042               	iorwf	dtoa@n+6,w,c
  8853  002F76  1043               	iorwf	dtoa@n+7,w,c
  8854  002F78  A4D8               	btfss	status,2,c
  8855  002F7A  D773               	goto	l6460
  8856  002F7C  BE37               	btfsc	dtoa@p+1,7,c
  8857  002F7E  D005               	goto	u8430
  8858  002F80  5037               	movf	dtoa@p+1,w,c
  8859  002F82  E102               	bnz	u8431
  8860  002F84  0436               	decf	dtoa@p,w,c
  8861  002F86  B0D8               	btfsc	status,0,c
  8862  002F88                     u8431:
  8863  002F88  D76C               	goto	l6460
  8864  002F8A                     u8430:
  8865  002F8A  BE39               	btfsc	dtoa@w+1,7,c
  8866  002F8C  D008               	goto	u8450
  8867  002F8E  5039               	movf	dtoa@w+1,w,c
  8868  002F90  E103               	bnz	u8440
  8869  002F92  0438               	decf	dtoa@w,w,c
  8870  002F94  A0D8               	btfss	status,0,c
  8871  002F96  D003               	goto	u8450
  8872  002F98                     u8440:
  8873  002F98  0100               	movlb	0	; () banked
  8874  002F9A  B3F8               	btfsc	_flags& (0+255),1,b
  8875  002F9C  D762               	goto	l6460
  8876  002F9E                     u8450:
  8877                           
  8878                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 308:     if (s || (flags & (1 << 2))) {
  8879  002F9E  503A               	movf	dtoa@s,w,c
  8880  002FA0  103B               	iorwf	dtoa@s+1,w,c
  8881  002FA2  A4D8               	btfss	status,2,c
  8882  002FA4  D003               	goto	u8470
  8883  002FA6  0100               	movlb	0	; () banked
  8884  002FA8  A5F8               	btfss	_flags& (0+255),2,b
  8885  002FAA  D017               	goto	l6494
  8886  002FAC                     u8470:
  8887                           
  8888                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 309:         --i;
  8889  002FAC  0644               	decf	dtoa@i,f,c
  8890  002FAE  A0D8               	btfss	status,0,c
  8891  002FB0  0645               	decf	dtoa@i+1,f,c
  8892                           
  8893                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 310:         dbuf[i] = s ? '-' : '+';
  8894  002FB2  503A               	movf	dtoa@s,w,c
  8895  002FB4  103B               	iorwf	dtoa@s+1,w,c
  8896  002FB6  A4D8               	btfss	status,2,c
  8897  002FB8  D004               	goto	l6490
  8898  002FBA  0E00               	movlw	0
  8899  002FBC  6E35               	movwf	_dtoa$894+1,c
  8900  002FBE  0E2B               	movlw	43
  8901  002FC0  D003               	goto	L17
  8902  002FC2                     l6490:
  8903  002FC2  0E00               	movlw	0
  8904  002FC4  6E35               	movwf	_dtoa$894+1,c
  8905  002FC6  0E2D               	movlw	45
  8906  002FC8                     L17:
  8907  002FC8  6E34               	movwf	_dtoa$894,c
  8908  002FCA  0EA4               	movlw	low _dbuf
  8909  002FCC  2444               	addwf	dtoa@i,w,c
  8910  002FCE  6ED9               	movwf	fsr2l,c
  8911  002FD0  0E01               	movlw	high _dbuf
  8912  002FD2  2045               	addwfc	dtoa@i+1,w,c
  8913  002FD4  6EDA               	movwf	fsr2h,c
  8914  002FD6  C034  FFDF         	movff	_dtoa$894,indf2
  8915  002FDA                     l6494:
  8916                           
  8917                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 314:     return pad(fp, &dbuf[i], w);
  8918  002FDA  C022  F017         	movff	dtoa@fp,pad@fp
  8919  002FDE  C023  F018         	movff	dtoa@fp+1,pad@fp+1
  8920  002FE2  0EA4               	movlw	low _dbuf
  8921  002FE4  2444               	addwf	dtoa@i,w,c
  8922  002FE6  6E19               	movwf	pad@buf,c
  8923  002FE8  0E01               	movlw	high _dbuf
  8924  002FEA  2045               	addwfc	dtoa@i+1,w,c
  8925  002FEC  6E1A               	movwf	pad@buf+1,c
  8926  002FEE  C038  F01B         	movff	dtoa@w,pad@p
  8927  002FF2  C039  F01C         	movff	dtoa@w+1,pad@p+1
  8928  002FF6  EC3E  F01E         	call	_pad	;wreg free
  8929  002FFA  C017  F022         	movff	?_pad,?_dtoa
  8930  002FFE  C018  F023         	movff	?_pad+1,?_dtoa+1
  8931  003002  0012               	return		;funcret
  8932  003004                     __end_of_dtoa:
  8933                           	opt callstack 0
  8934                           
  8935 ;; *************** function _pad *****************
  8936 ;; Defined at:
  8937 ;;		line 72 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  8938 ;; Parameters:    Size  Location     Type
  8939 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  8940 ;;		 -> sprintf@f(6), 
  8941 ;;  buf             2   24[COMRAM] PTR unsigned char 
  8942 ;;		 -> dbuf(80), 
  8943 ;;  p               2   26[COMRAM] int 
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;  w               2   31[COMRAM] int 
  8946 ;;  i               2   29[COMRAM] int 
  8947 ;; Return value:  Size  Location     Type
  8948 ;;                  2   22[COMRAM] int 
  8949 ;; Registers used:
  8950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8951 ;; Tracked objects:
  8952 ;;		On entry : 0/0
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8956 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8957 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8958 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8959 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8960 ;;Total ram usage:       11 bytes
  8961 ;; Hardware stack levels used:    1
  8962 ;; Hardware stack levels required when called:    7
  8963 ;; This function calls:
  8964 ;;		_fputc
  8965 ;;		_fputs
  8966 ;;		_strlen
  8967 ;; This function is called by:
  8968 ;;		_dtoa
  8969 ;;		_efgtoa
  8970 ;; This function uses a non-reentrant model
  8971 ;;
  8972                           
  8973                           	psect	text29
  8974  003C7C                     __ptext29:
  8975                           	opt callstack 0
  8976  003C7C                     _pad:
  8977                           	opt callstack 18
  8978                           
  8979                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 72: static int pad(FILE *fp, char *buf, int p
      +                          );D:\MPLAB\pic\sources\c99\common\doprnt.c: 73: {;D:\MPLAB\pic\sources\c99\common\doprnt
      +                          .c: 74:     int i, w;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 77:     if (flags & (1 <
      +                          < 0)) {
  8980                           
  8981                           ;incstack = 0
  8982  003C7C  0100               	movlb	0	; () banked
  8983  003C7E  A1F8               	btfss	_flags& (0+255),0,b
  8984  003C80  D00A               	goto	l5804
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 78:         fputs((const char *)buf, fp);
  8988  003C82  C019  F010         	movff	pad@buf,fputs@s
  8989  003C86  C01A  F011         	movff	pad@buf+1,fputs@s+1
  8990  003C8A  C017  F012         	movff	pad@fp,fputs@fp
  8991  003C8E  C018  F013         	movff	pad@fp+1,fputs@fp+1
  8992  003C92  ECC2  F021         	call	_fputs	;wreg free
  8993  003C96                     l5804:
  8994                           
  8995                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 0 : p;
  8996  003C96  BE1C               	btfsc	pad@p+1,7,c
  8997  003C98  D005               	goto	l5808
  8998  003C9A  C01B  F020         	movff	pad@p,pad@w
  8999  003C9E  C01C  F021         	movff	pad@p+1,pad@w+1
  9000  003CA2  D004               	goto	l350
  9001  003CA4                     l5808:
  9002  003CA4  0E00               	movlw	0
  9003  003CA6  6E21               	movwf	pad@w+1,c
  9004  003CA8  0E00               	movlw	0
  9005  003CAA  6E20               	movwf	pad@w,c
  9006  003CAC                     l350:
  9007                           
  9008                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9009  003CAC  0E00               	movlw	0
  9010  003CAE  6E1F               	movwf	pad@i+1,c
  9011  003CB0  0E00               	movlw	0
  9012  003CB2  6E1E               	movwf	pad@i,c
  9013                           
  9014                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  9015  003CB4  D00C               	goto	l5814
  9016  003CB6                     l5810:
  9017                           
  9018                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 85:         fputc(' ', fp);
  9019  003CB6  0E00               	movlw	0
  9020  003CB8  6E08               	movwf	fputc@c+1,c
  9021  003CBA  0E20               	movlw	32
  9022  003CBC  6E07               	movwf	fputc@c,c
  9023  003CBE  C017  F009         	movff	pad@fp,fputc@fp
  9024  003CC2  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  9025  003CC6  ECEE  F01D         	call	_fputc	;wreg free
  9026                           
  9027                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9028  003CCA  4A1E               	infsnz	pad@i,f,c
  9029  003CCC  2A1F               	incf	pad@i+1,f,c
  9030  003CCE                     l5814:
  9031                           
  9032                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  9033  003CCE  5020               	movf	pad@w,w,c
  9034  003CD0  5C1E               	subwf	pad@i,w,c
  9035  003CD2  501F               	movf	pad@i+1,w,c
  9036  003CD4  0A80               	xorlw	128
  9037  003CD6  6E1D               	movwf	??_pad& (0+255),c
  9038  003CD8  5021               	movf	pad@w+1,w,c
  9039  003CDA  0A80               	xorlw	128
  9040  003CDC  581D               	subwfb	??_pad& (0+255),w,c
  9041  003CDE  A0D8               	btfss	status,0,c
  9042  003CE0  D7EA               	goto	l5810
  9043                           
  9044                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & (1 << 0))) {
  9045  003CE2  0100               	movlb	0	; () banked
  9046  003CE4  B1F8               	btfsc	_flags& (0+255),0,b
  9047  003CE6  D00A               	goto	l5818
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 91:         fputs((const char *)buf, fp);
  9051  003CE8  C019  F010         	movff	pad@buf,fputs@s
  9052  003CEC  C01A  F011         	movff	pad@buf+1,fputs@s+1
  9053  003CF0  C017  F012         	movff	pad@fp,fputs@fp
  9054  003CF4  C018  F013         	movff	pad@fp+1,fputs@fp+1
  9055  003CF8  ECC2  F021         	call	_fputs	;wreg free
  9056  003CFC                     l5818:
  9057                           
  9058                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 94:     return strlen(buf) + w;
  9059  003CFC  C019  F007         	movff	pad@buf,strlen@s
  9060  003D00  C01A  F008         	movff	pad@buf+1,strlen@s+1
  9061  003D04  EC6E  F022         	call	_strlen	;wreg free
  9062  003D08  5020               	movf	pad@w,w,c
  9063  003D0A  2407               	addwf	?_strlen,w,c
  9064  003D0C  6E17               	movwf	?_pad,c
  9065  003D0E  5021               	movf	pad@w+1,w,c
  9066  003D10  2008               	addwfc	?_strlen+1,w,c
  9067  003D12  6E18               	movwf	?_pad+1,c
  9068  003D14  0012               	return		;funcret
  9069  003D16                     __end_of_pad:
  9070                           	opt callstack 0
  9071                           
  9072 ;; *************** function _strlen *****************
  9073 ;; Defined at:
  9074 ;;		line 12 in file "D:\MPLAB\pic\sources\c99\common\strlen.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;  s               2    6[COMRAM] PTR const unsigned char 
  9077 ;;		 -> dbuf(80), 
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;  a               2    8[COMRAM] PTR const unsigned char 
  9080 ;;		 -> dbuf(80), 
  9081 ;; Return value:  Size  Location     Type
  9082 ;;                  2    6[COMRAM] unsigned int 
  9083 ;; Registers used:
  9084 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 0/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9093 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9094 ;;Total ram usage:        4 bytes
  9095 ;; Hardware stack levels used:    1
  9096 ;; Hardware stack levels required when called:    4
  9097 ;; This function calls:
  9098 ;;		Nothing
  9099 ;; This function is called by:
  9100 ;;		_pad
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104                           	psect	text30
  9105  0044DC                     __ptext30:
  9106                           	opt callstack 0
  9107  0044DC                     _strlen:
  9108                           	opt callstack 20
  9109                           
  9110                           ;incstack = 0
  9111  0044DC  C007  F009         	movff	strlen@s,strlen@a
  9112  0044E0  C008  F00A         	movff	strlen@s+1,strlen@a+1
  9113  0044E4  D002               	goto	l5588
  9114  0044E6                     l5586:
  9115  0044E6  4A07               	infsnz	strlen@s,f,c
  9116  0044E8  2A08               	incf	strlen@s+1,f,c
  9117  0044EA                     l5588:
  9118  0044EA  C007  FFD9         	movff	strlen@s,fsr2l
  9119  0044EE  C008  FFDA         	movff	strlen@s+1,fsr2h
  9120  0044F2  50DF               	movf	indf2,w,c
  9121  0044F4  A4D8               	btfss	status,2,c
  9122  0044F6  D7F7               	goto	l5586
  9123  0044F8  5009               	movf	strlen@a,w,c
  9124  0044FA  5C07               	subwf	strlen@s,w,c
  9125  0044FC  6E07               	movwf	?_strlen,c
  9126  0044FE  500A               	movf	strlen@a+1,w,c
  9127  004500  5808               	subwfb	strlen@s+1,w,c
  9128  004502  6E08               	movwf	?_strlen+1,c
  9129  004504  0012               	return		;funcret
  9130  004506                     __end_of_strlen:
  9131                           	opt callstack 0
  9132                           
  9133 ;; *************** function _fputs *****************
  9134 ;; Defined at:
  9135 ;;		line 8 in file "D:\MPLAB\pic\sources\c99\common\nf_fputs.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;  s               2   15[COMRAM] PTR const unsigned char 
  9138 ;;		 -> dbuf(80), 
  9139 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  9140 ;;		 -> sprintf@f(6), 
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;  i               2   20[COMRAM] int 
  9143 ;;  c               1   19[COMRAM] unsigned char 
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  2   15[COMRAM] int 
  9146 ;; Registers used:
  9147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/0
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9154 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9156 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9157 ;;Total ram usage:        7 bytes
  9158 ;; Hardware stack levels used:    1
  9159 ;; Hardware stack levels required when called:    6
  9160 ;; This function calls:
  9161 ;;		_fputc
  9162 ;; This function is called by:
  9163 ;;		_pad
  9164 ;; This function uses a non-reentrant model
  9165 ;;
  9166                           
  9167                           	psect	text31
  9168  004384                     __ptext31:
  9169                           	opt callstack 0
  9170  004384                     _fputs:
  9171                           	opt callstack 18
  9172                           
  9173                           ;incstack = 0
  9174  004384  0E00               	movlw	0
  9175  004386  6E16               	movwf	fputs@i+1,c
  9176  004388  0E00               	movlw	0
  9177  00438A  6E15               	movwf	fputs@i,c
  9178  00438C  D00B               	goto	l5582
  9179  00438E                     l5578:
  9180  00438E  C014  F007         	movff	fputs@c,fputc@c
  9181  004392  6A08               	clrf	fputc@c+1,c
  9182  004394  C012  F009         	movff	fputs@fp,fputc@fp
  9183  004398  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  9184  00439C  ECEE  F01D         	call	_fputc	;wreg free
  9185  0043A0  4A15               	infsnz	fputs@i,f,c
  9186  0043A2  2A16               	incf	fputs@i+1,f,c
  9187  0043A4                     l5582:
  9188  0043A4  5015               	movf	fputs@i,w,c
  9189  0043A6  2410               	addwf	fputs@s,w,c
  9190  0043A8  6ED9               	movwf	fsr2l,c
  9191  0043AA  5016               	movf	fputs@i+1,w,c
  9192  0043AC  2011               	addwfc	fputs@s+1,w,c
  9193  0043AE  6EDA               	movwf	fsr2h,c
  9194  0043B0  50DF               	movf	indf2,w,c
  9195  0043B2  6E14               	movwf	fputs@c,c
  9196  0043B4  5014               	movf	fputs@c,w,c
  9197  0043B6  B4D8               	btfsc	status,2,c
  9198  0043B8  0012               	return	
  9199  0043BA  D7E9               	goto	l5578
  9200  0043BC                     __end_of_fputs:
  9201                           	opt callstack 0
  9202                           
  9203 ;; *************** function _fputc *****************
  9204 ;; Defined at:
  9205 ;;		line 8 in file "D:\MPLAB\pic\sources\c99\common\nf_fputc.c"
  9206 ;; Parameters:    Size  Location     Type
  9207 ;;  c               2    6[COMRAM] int 
  9208 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  9209 ;;		 -> sprintf@f(6), 
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;		None
  9212 ;; Return value:  Size  Location     Type
  9213 ;;                  2    6[COMRAM] int 
  9214 ;; Registers used:
  9215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9216 ;; Tracked objects:
  9217 ;;		On entry : 0/0
  9218 ;;		On exit  : 0/0
  9219 ;;		Unchanged: 0/0
  9220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9221 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9223 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9224 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9225 ;;Total ram usage:        9 bytes
  9226 ;; Hardware stack levels used:    1
  9227 ;; Hardware stack levels required when called:    5
  9228 ;; This function calls:
  9229 ;;		_putch
  9230 ;; This function is called by:
  9231 ;;		_pad
  9232 ;;		_vfpfcnvrt
  9233 ;;		_fputs
  9234 ;; This function uses a non-reentrant model
  9235 ;;
  9236                           
  9237                           	psect	text32
  9238  003BDC                     __ptext32:
  9239                           	opt callstack 0
  9240  003BDC                     _fputc:
  9241                           	opt callstack 21
  9242                           
  9243                           ;incstack = 0
  9244  003BDC  5009               	movf	fputc@fp,w,c
  9245  003BDE  100A               	iorwf	fputc@fp+1,w,c
  9246  003BE0  B4D8               	btfsc	status,2,c
  9247  003BE2  D004               	goto	u6740
  9248  003BE4  5009               	movf	fputc@fp,w,c
  9249  003BE6  100A               	iorwf	fputc@fp+1,w,c
  9250  003BE8  A4D8               	btfss	status,2,c
  9251  003BEA  D004               	goto	l5568
  9252  003BEC                     u6740:
  9253  003BEC  5007               	movf	fputc@c,w,c
  9254  003BEE  EC2D  F023         	call	_putch
  9255  003BF2  0012               	return	
  9256  003BF4                     l5568:
  9257  003BF4  EE20 F004          	lfsr	2,4
  9258  003BF8  5009               	movf	fputc@fp,w,c
  9259  003BFA  26D9               	addwf	fsr2l,f,c
  9260  003BFC  500A               	movf	fputc@fp+1,w,c
  9261  003BFE  22DA               	addwfc	fsr2h,f,c
  9262  003C00  50DE               	movf	postinc2,w,c
  9263  003C02  10DE               	iorwf	postinc2,w,c
  9264  003C04  B4D8               	btfsc	status,2,c
  9265  003C06  D016               	goto	u6760
  9266  003C08  EE20 F004          	lfsr	2,4
  9267  003C0C  5009               	movf	fputc@fp,w,c
  9268  003C0E  26D9               	addwf	fsr2l,f,c
  9269  003C10  500A               	movf	fputc@fp+1,w,c
  9270  003C12  22DA               	addwfc	fsr2h,f,c
  9271  003C14  EE10 F002          	lfsr	1,2
  9272  003C18  5009               	movf	fputc@fp,w,c
  9273  003C1A  26E1               	addwf	fsr1l,f,c
  9274  003C1C  500A               	movf	fputc@fp+1,w,c
  9275  003C1E  22E2               	addwfc	fsr1h,f,c
  9276  003C20  50DE               	movf	postinc2,w,c
  9277  003C22  5CE6               	subwf	postinc1,w,c
  9278  003C24  50E6               	movf	postinc1,w,c
  9279  003C26  0A80               	xorlw	128
  9280  003C28  6E0F               	movwf	(??_fputc+4)& (0+255),c
  9281  003C2A  50DE               	movf	postinc2,w,c
  9282  003C2C  0A80               	xorlw	128
  9283  003C2E  580F               	subwfb	(??_fputc+4)& (0+255),w,c
  9284  003C30  B0D8               	btfsc	status,0,c
  9285  003C32  0012               	return	
  9286  003C34                     u6760:
  9287  003C34  EE20 F002          	lfsr	2,2
  9288  003C38  5009               	movf	fputc@fp,w,c
  9289  003C3A  26D9               	addwf	fsr2l,f,c
  9290  003C3C  500A               	movf	fputc@fp+1,w,c
  9291  003C3E  22DA               	addwfc	fsr2h,f,c
  9292  003C40  CFDE F00B          	movff	postinc2,??_fputc
  9293  003C44  CFDD F00C          	movff	postdec2,??_fputc+1
  9294  003C48  C009  FFD9         	movff	fputc@fp,fsr2l
  9295  003C4C  C00A  FFDA         	movff	fputc@fp+1,fsr2h
  9296  003C50  CFDE F00D          	movff	postinc2,??_fputc+2
  9297  003C54  CFDD F00E          	movff	postdec2,??_fputc+3
  9298  003C58  500B               	movf	??_fputc,w,c
  9299  003C5A  240D               	addwf	??_fputc+2,w,c
  9300  003C5C  6ED9               	movwf	fsr2l,c
  9301  003C5E  500C               	movf	??_fputc+1,w,c
  9302  003C60  200E               	addwfc	??_fputc+3,w,c
  9303  003C62  6EDA               	movwf	fsr2h,c
  9304  003C64  C007  FFDF         	movff	fputc@c,indf2
  9305  003C68  EE20 F002          	lfsr	2,2
  9306  003C6C  5009               	movf	fputc@fp,w,c
  9307  003C6E  26D9               	addwf	fsr2l,f,c
  9308  003C70  500A               	movf	fputc@fp+1,w,c
  9309  003C72  22DA               	addwfc	fsr2h,f,c
  9310  003C74  2ADE               	incf	postinc2,f,c
  9311  003C76  0E00               	movlw	0
  9312  003C78  22DD               	addwfc	postdec2,f,c
  9313  003C7A  0012               	return		;funcret
  9314  003C7C                     __end_of_fputc:
  9315                           	opt callstack 0
  9316                           
  9317 ;; *************** function _putch *****************
  9318 ;; Defined at:
  9319 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\putch.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  c               1    wreg     unsigned char 
  9322 ;; Auto vars:     Size  Location     Type
  9323 ;;  c               1    0[COMRAM] unsigned char 
  9324 ;; Return value:  Size  Location     Type
  9325 ;;                  1    wreg      void 
  9326 ;; Registers used:
  9327 ;;		wreg
  9328 ;; Tracked objects:
  9329 ;;		On entry : 0/0
  9330 ;;		On exit  : 0/0
  9331 ;;		Unchanged: 0/0
  9332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9337 ;;Total ram usage:        0 bytes
  9338 ;; Hardware stack levels used:    1
  9339 ;; Hardware stack levels required when called:    4
  9340 ;; This function calls:
  9341 ;;		Nothing
  9342 ;; This function is called by:
  9343 ;;		_fputc
  9344 ;; This function uses a non-reentrant model
  9345 ;;
  9346                           
  9347                           	psect	text33
  9348  00465A                     __ptext33:
  9349                           	opt callstack 0
  9350  00465A                     _putch:
  9351                           	opt callstack 21
  9352                           
  9353                           ;incstack = 0
  9354  00465A  0012               	return		;funcret
  9355  00465C                     __end_of_putch:
  9356                           	opt callstack 0
  9357                           
  9358 ;; *************** function _abs *****************
  9359 ;; Defined at:
  9360 ;;		line 1 in file "D:\MPLAB\pic\sources\c99\common\abs.c"
  9361 ;; Parameters:    Size  Location     Type
  9362 ;;  a               2   24[COMRAM] int 
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;		None
  9365 ;; Return value:  Size  Location     Type
  9366 ;;                  2   24[COMRAM] int 
  9367 ;; Registers used:
  9368 ;;		wreg, status,2, status,0
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9377 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9378 ;;Total ram usage:        4 bytes
  9379 ;; Hardware stack levels used:    1
  9380 ;; Hardware stack levels required when called:    4
  9381 ;; This function calls:
  9382 ;;		Nothing
  9383 ;; This function is called by:
  9384 ;;		_dtoa
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387                           
  9388                           	psect	text34
  9389  0043BC                     __ptext34:
  9390                           	opt callstack 0
  9391  0043BC                     _abs:
  9392                           	opt callstack 21
  9393                           
  9394                           ;incstack = 0
  9395  0043BC  BE1A               	btfsc	abs@a+1,7,c
  9396  0043BE  D005               	goto	u7240
  9397  0043C0  501A               	movf	abs@a+1,w,c
  9398  0043C2  E110               	bnz	l1205
  9399  0043C4  0419               	decf	abs@a,w,c
  9400  0043C6  B0D8               	btfsc	status,0,c
  9401  0043C8  D00D               	goto	l1205
  9402  0043CA                     u7240:
  9403  0043CA  C019  F01B         	movff	abs@a,??_abs
  9404  0043CE  C01A  F01C         	movff	abs@a+1,??_abs+1
  9405  0043D2  1E1B               	comf	??_abs,f,c
  9406  0043D4  1E1C               	comf	??_abs+1,f,c
  9407  0043D6  4A1B               	infsnz	??_abs,f,c
  9408  0043D8  2A1C               	incf	??_abs+1,f,c
  9409  0043DA  C01B  F019         	movff	??_abs,?_abs
  9410  0043DE  C01C  F01A         	movff	??_abs+1,?_abs+1
  9411  0043E2  0012               	return	
  9412  0043E4                     l1205:
  9413  0043E4  C019  F019         	movff	abs@a,?_abs
  9414  0043E8  C01A  F01A         	movff	abs@a+1,?_abs+1
  9415  0043EC  0012               	return		;funcret
  9416  0043EE                     __end_of_abs:
  9417                           	opt callstack 0
  9418                           
  9419 ;; *************** function ___aomod *****************
  9420 ;; Defined at:
  9421 ;;		line 9 in file "D:\MPLAB\pic\sources\c99\common\aomod.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;  dividend        8    6[COMRAM] long long 
  9424 ;;  divisor         8   14[COMRAM] long long 
  9425 ;; Auto vars:     Size  Location     Type
  9426 ;;  sign            1   23[COMRAM] unsigned char 
  9427 ;;  counter         1   22[COMRAM] unsigned char 
  9428 ;; Return value:  Size  Location     Type
  9429 ;;                  8    6[COMRAM] long long 
  9430 ;; Registers used:
  9431 ;;		wreg, status,2, status,0
  9432 ;; Tracked objects:
  9433 ;;		On entry : 0/0
  9434 ;;		On exit  : 0/0
  9435 ;;		Unchanged: 0/0
  9436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9437 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9438 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9440 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9441 ;;Total ram usage:       18 bytes
  9442 ;; Hardware stack levels used:    1
  9443 ;; Hardware stack levels required when called:    4
  9444 ;; This function calls:
  9445 ;;		Nothing
  9446 ;; This function is called by:
  9447 ;;		_dtoa
  9448 ;; This function uses a non-reentrant model
  9449 ;;
  9450                           
  9451                           	psect	text35
  9452  0037C0                     __ptext35:
  9453                           	opt callstack 0
  9454  0037C0                     ___aomod:
  9455                           	opt callstack 21
  9456                           
  9457                           ;incstack = 0
  9458  0037C0  0E00               	movlw	0
  9459  0037C2  6E18               	movwf	___aomod@sign,c
  9460  0037C4  AE0E               	btfss	___aomod@dividend+7,7,c
  9461  0037C6  D012               	goto	l5952
  9462  0037C8  1E0E               	comf	___aomod@dividend+7,f,c
  9463  0037CA  1E0D               	comf	___aomod@dividend+6,f,c
  9464  0037CC  1E0C               	comf	___aomod@dividend+5,f,c
  9465  0037CE  1E0B               	comf	___aomod@dividend+4,f,c
  9466  0037D0  1E0A               	comf	___aomod@dividend+3,f,c
  9467  0037D2  1E09               	comf	___aomod@dividend+2,f,c
  9468  0037D4  1E08               	comf	___aomod@dividend+1,f,c
  9469  0037D6  6C07               	negf	___aomod@dividend,c
  9470  0037D8  0E00               	movlw	0
  9471  0037DA  2208               	addwfc	___aomod@dividend+1,f,c
  9472  0037DC  2209               	addwfc	___aomod@dividend+2,f,c
  9473  0037DE  220A               	addwfc	___aomod@dividend+3,f,c
  9474  0037E0  220B               	addwfc	___aomod@dividend+4,f,c
  9475  0037E2  220C               	addwfc	___aomod@dividend+5,f,c
  9476  0037E4  220D               	addwfc	___aomod@dividend+6,f,c
  9477  0037E6  220E               	addwfc	___aomod@dividend+7,f,c
  9478  0037E8  0E01               	movlw	1
  9479  0037EA  6E18               	movwf	___aomod@sign,c
  9480  0037EC                     l5952:
  9481  0037EC  AE16               	btfss	___aomod@divisor+7,7,c
  9482  0037EE  D010               	goto	l5956
  9483  0037F0  1E16               	comf	___aomod@divisor+7,f,c
  9484  0037F2  1E15               	comf	___aomod@divisor+6,f,c
  9485  0037F4  1E14               	comf	___aomod@divisor+5,f,c
  9486  0037F6  1E13               	comf	___aomod@divisor+4,f,c
  9487  0037F8  1E12               	comf	___aomod@divisor+3,f,c
  9488  0037FA  1E11               	comf	___aomod@divisor+2,f,c
  9489  0037FC  1E10               	comf	___aomod@divisor+1,f,c
  9490  0037FE  6C0F               	negf	___aomod@divisor,c
  9491  003800  0E00               	movlw	0
  9492  003802  2210               	addwfc	___aomod@divisor+1,f,c
  9493  003804  2211               	addwfc	___aomod@divisor+2,f,c
  9494  003806  2212               	addwfc	___aomod@divisor+3,f,c
  9495  003808  2213               	addwfc	___aomod@divisor+4,f,c
  9496  00380A  2214               	addwfc	___aomod@divisor+5,f,c
  9497  00380C  2215               	addwfc	___aomod@divisor+6,f,c
  9498  00380E  2216               	addwfc	___aomod@divisor+7,f,c
  9499  003810                     l5956:
  9500  003810  500F               	movf	___aomod@divisor,w,c
  9501  003812  1010               	iorwf	___aomod@divisor+1,w,c
  9502  003814  1011               	iorwf	___aomod@divisor+2,w,c
  9503  003816  1012               	iorwf	___aomod@divisor+3,w,c
  9504  003818  1013               	iorwf	___aomod@divisor+4,w,c
  9505  00381A  1014               	iorwf	___aomod@divisor+5,w,c
  9506  00381C  1015               	iorwf	___aomod@divisor+6,w,c
  9507  00381E  1016               	iorwf	___aomod@divisor+7,w,c
  9508  003820  B4D8               	btfsc	status,2,c
  9509  003822  D03C               	goto	l5972
  9510  003824  0E01               	movlw	1
  9511  003826  6E17               	movwf	___aomod@counter,c
  9512  003828  D00A               	goto	l5962
  9513  00382A                     l5960:
  9514  00382A  90D8               	bcf	status,0,c
  9515  00382C  360F               	rlcf	___aomod@divisor,f,c
  9516  00382E  3610               	rlcf	___aomod@divisor+1,f,c
  9517  003830  3611               	rlcf	___aomod@divisor+2,f,c
  9518  003832  3612               	rlcf	___aomod@divisor+3,f,c
  9519  003834  3613               	rlcf	___aomod@divisor+4,f,c
  9520  003836  3614               	rlcf	___aomod@divisor+5,f,c
  9521  003838  3615               	rlcf	___aomod@divisor+6,f,c
  9522  00383A  3616               	rlcf	___aomod@divisor+7,f,c
  9523  00383C  2A17               	incf	___aomod@counter,f,c
  9524  00383E                     l5962:
  9525  00383E  AE16               	btfss	___aomod@divisor+7,7,c
  9526  003840  D7F4               	goto	l5960
  9527  003842                     u7590:
  9528  003842  500F               	movf	___aomod@divisor,w,c
  9529  003844  5C07               	subwf	___aomod@dividend,w,c
  9530  003846  5010               	movf	___aomod@divisor+1,w,c
  9531  003848  5808               	subwfb	___aomod@dividend+1,w,c
  9532  00384A  5011               	movf	___aomod@divisor+2,w,c
  9533  00384C  5809               	subwfb	___aomod@dividend+2,w,c
  9534  00384E  5012               	movf	___aomod@divisor+3,w,c
  9535  003850  580A               	subwfb	___aomod@dividend+3,w,c
  9536  003852  5013               	movf	___aomod@divisor+4,w,c
  9537  003854  580B               	subwfb	___aomod@dividend+4,w,c
  9538  003856  5014               	movf	___aomod@divisor+5,w,c
  9539  003858  580C               	subwfb	___aomod@dividend+5,w,c
  9540  00385A  5015               	movf	___aomod@divisor+6,w,c
  9541  00385C  580D               	subwfb	___aomod@dividend+6,w,c
  9542  00385E  5016               	movf	___aomod@divisor+7,w,c
  9543  003860  580E               	subwfb	___aomod@dividend+7,w,c
  9544  003862  A0D8               	btfss	status,0,c
  9545  003864  D010               	goto	l5968
  9546  003866  500F               	movf	___aomod@divisor,w,c
  9547  003868  5E07               	subwf	___aomod@dividend,f,c
  9548  00386A  5010               	movf	___aomod@divisor+1,w,c
  9549  00386C  5A08               	subwfb	___aomod@dividend+1,f,c
  9550  00386E  5011               	movf	___aomod@divisor+2,w,c
  9551  003870  5A09               	subwfb	___aomod@dividend+2,f,c
  9552  003872  5012               	movf	___aomod@divisor+3,w,c
  9553  003874  5A0A               	subwfb	___aomod@dividend+3,f,c
  9554  003876  5013               	movf	___aomod@divisor+4,w,c
  9555  003878  5A0B               	subwfb	___aomod@dividend+4,f,c
  9556  00387A  5014               	movf	___aomod@divisor+5,w,c
  9557  00387C  5A0C               	subwfb	___aomod@dividend+5,f,c
  9558  00387E  5015               	movf	___aomod@divisor+6,w,c
  9559  003880  5A0D               	subwfb	___aomod@dividend+6,f,c
  9560  003882  5016               	movf	___aomod@divisor+7,w,c
  9561  003884  5A0E               	subwfb	___aomod@dividend+7,f,c
  9562  003886                     l5968:
  9563  003886  90D8               	bcf	status,0,c
  9564  003888  3216               	rrcf	___aomod@divisor+7,f,c
  9565  00388A  3215               	rrcf	___aomod@divisor+6,f,c
  9566  00388C  3214               	rrcf	___aomod@divisor+5,f,c
  9567  00388E  3213               	rrcf	___aomod@divisor+4,f,c
  9568  003890  3212               	rrcf	___aomod@divisor+3,f,c
  9569  003892  3211               	rrcf	___aomod@divisor+2,f,c
  9570  003894  3210               	rrcf	___aomod@divisor+1,f,c
  9571  003896  320F               	rrcf	___aomod@divisor,f,c
  9572  003898  2E17               	decfsz	___aomod@counter,f,c
  9573  00389A  D7D3               	goto	u7590
  9574  00389C                     l5972:
  9575  00389C  5018               	movf	___aomod@sign,w,c
  9576  00389E  B4D8               	btfsc	status,2,c
  9577  0038A0  D010               	goto	l5976
  9578  0038A2  1E0E               	comf	___aomod@dividend+7,f,c
  9579  0038A4  1E0D               	comf	___aomod@dividend+6,f,c
  9580  0038A6  1E0C               	comf	___aomod@dividend+5,f,c
  9581  0038A8  1E0B               	comf	___aomod@dividend+4,f,c
  9582  0038AA  1E0A               	comf	___aomod@dividend+3,f,c
  9583  0038AC  1E09               	comf	___aomod@dividend+2,f,c
  9584  0038AE  1E08               	comf	___aomod@dividend+1,f,c
  9585  0038B0  6C07               	negf	___aomod@dividend,c
  9586  0038B2  0E00               	movlw	0
  9587  0038B4  2208               	addwfc	___aomod@dividend+1,f,c
  9588  0038B6  2209               	addwfc	___aomod@dividend+2,f,c
  9589  0038B8  220A               	addwfc	___aomod@dividend+3,f,c
  9590  0038BA  220B               	addwfc	___aomod@dividend+4,f,c
  9591  0038BC  220C               	addwfc	___aomod@dividend+5,f,c
  9592  0038BE  220D               	addwfc	___aomod@dividend+6,f,c
  9593  0038C0  220E               	addwfc	___aomod@dividend+7,f,c
  9594  0038C2                     l5976:
  9595  0038C2  C007  F007         	movff	___aomod@dividend,?___aomod
  9596  0038C6  C008  F008         	movff	___aomod@dividend+1,?___aomod+1
  9597  0038CA  C009  F009         	movff	___aomod@dividend+2,?___aomod+2
  9598  0038CE  C00A  F00A         	movff	___aomod@dividend+3,?___aomod+3
  9599  0038D2  C00B  F00B         	movff	___aomod@dividend+4,?___aomod+4
  9600  0038D6  C00C  F00C         	movff	___aomod@dividend+5,?___aomod+5
  9601  0038DA  C00D  F00D         	movff	___aomod@dividend+6,?___aomod+6
  9602  0038DE  C00E  F00E         	movff	___aomod@dividend+7,?___aomod+7
  9603  0038E2  0012               	return		;funcret
  9604  0038E4                     __end_of___aomod:
  9605                           	opt callstack 0
  9606                           
  9607 ;; *************** function ___aodiv *****************
  9608 ;; Defined at:
  9609 ;;		line 9 in file "D:\MPLAB\pic\sources\c99\common\aodiv.c"
  9610 ;; Parameters:    Size  Location     Type
  9611 ;;  dividend        8    6[COMRAM] long long 
  9612 ;;  divisor         8   14[COMRAM] long long 
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;  quotient        8   24[COMRAM] long long 
  9615 ;;  sign            1   23[COMRAM] unsigned char 
  9616 ;;  counter         1   22[COMRAM] unsigned char 
  9617 ;; Return value:  Size  Location     Type
  9618 ;;                  8    6[COMRAM] long long 
  9619 ;; Registers used:
  9620 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9621 ;; Tracked objects:
  9622 ;;		On entry : 0/0
  9623 ;;		On exit  : 0/0
  9624 ;;		Unchanged: 0/0
  9625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9626 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9627 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9629 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9630 ;;Total ram usage:       26 bytes
  9631 ;; Hardware stack levels used:    1
  9632 ;; Hardware stack levels required when called:    4
  9633 ;; This function calls:
  9634 ;;		Nothing
  9635 ;; This function is called by:
  9636 ;;		_dtoa
  9637 ;; This function uses a non-reentrant model
  9638 ;;
  9639                           
  9640                           	psect	text36
  9641  0033F8                     __ptext36:
  9642                           	opt callstack 0
  9643  0033F8                     ___aodiv:
  9644                           	opt callstack 21
  9645                           
  9646                           ;incstack = 0
  9647  0033F8  0E00               	movlw	0
  9648  0033FA  6E18               	movwf	___aodiv@sign,c
  9649  0033FC  AE16               	btfss	___aodiv@divisor+7,7,c
  9650  0033FE  D012               	goto	l5908
  9651  003400  1E16               	comf	___aodiv@divisor+7,f,c
  9652  003402  1E15               	comf	___aodiv@divisor+6,f,c
  9653  003404  1E14               	comf	___aodiv@divisor+5,f,c
  9654  003406  1E13               	comf	___aodiv@divisor+4,f,c
  9655  003408  1E12               	comf	___aodiv@divisor+3,f,c
  9656  00340A  1E11               	comf	___aodiv@divisor+2,f,c
  9657  00340C  1E10               	comf	___aodiv@divisor+1,f,c
  9658  00340E  6C0F               	negf	___aodiv@divisor,c
  9659  003410  0E00               	movlw	0
  9660  003412  2210               	addwfc	___aodiv@divisor+1,f,c
  9661  003414  2211               	addwfc	___aodiv@divisor+2,f,c
  9662  003416  2212               	addwfc	___aodiv@divisor+3,f,c
  9663  003418  2213               	addwfc	___aodiv@divisor+4,f,c
  9664  00341A  2214               	addwfc	___aodiv@divisor+5,f,c
  9665  00341C  2215               	addwfc	___aodiv@divisor+6,f,c
  9666  00341E  2216               	addwfc	___aodiv@divisor+7,f,c
  9667  003420  0E01               	movlw	1
  9668  003422  6E18               	movwf	___aodiv@sign,c
  9669  003424                     l5908:
  9670  003424  AE0E               	btfss	___aodiv@dividend+7,7,c
  9671  003426  D012               	goto	l5914
  9672  003428  1E0E               	comf	___aodiv@dividend+7,f,c
  9673  00342A  1E0D               	comf	___aodiv@dividend+6,f,c
  9674  00342C  1E0C               	comf	___aodiv@dividend+5,f,c
  9675  00342E  1E0B               	comf	___aodiv@dividend+4,f,c
  9676  003430  1E0A               	comf	___aodiv@dividend+3,f,c
  9677  003432  1E09               	comf	___aodiv@dividend+2,f,c
  9678  003434  1E08               	comf	___aodiv@dividend+1,f,c
  9679  003436  6C07               	negf	___aodiv@dividend,c
  9680  003438  0E00               	movlw	0
  9681  00343A  2208               	addwfc	___aodiv@dividend+1,f,c
  9682  00343C  2209               	addwfc	___aodiv@dividend+2,f,c
  9683  00343E  220A               	addwfc	___aodiv@dividend+3,f,c
  9684  003440  220B               	addwfc	___aodiv@dividend+4,f,c
  9685  003442  220C               	addwfc	___aodiv@dividend+5,f,c
  9686  003444  220D               	addwfc	___aodiv@dividend+6,f,c
  9687  003446  220E               	addwfc	___aodiv@dividend+7,f,c
  9688  003448  0E01               	movlw	1
  9689  00344A  1A18               	xorwf	___aodiv@sign,f,c
  9690  00344C                     l5914:
  9691  00344C  EE20  F019         	lfsr	2,___aodiv@quotient
  9692  003450  0E07               	movlw	7
  9693  003452                     u7511:
  9694  003452  6ADE               	clrf	postinc2,c
  9695  003454  06E8               	decf	wreg,f,c
  9696  003456  E2FD               	bc	u7511
  9697  003458  500F               	movf	___aodiv@divisor,w,c
  9698  00345A  1010               	iorwf	___aodiv@divisor+1,w,c
  9699  00345C  1011               	iorwf	___aodiv@divisor+2,w,c
  9700  00345E  1012               	iorwf	___aodiv@divisor+3,w,c
  9701  003460  1013               	iorwf	___aodiv@divisor+4,w,c
  9702  003462  1014               	iorwf	___aodiv@divisor+5,w,c
  9703  003464  1015               	iorwf	___aodiv@divisor+6,w,c
  9704  003466  1016               	iorwf	___aodiv@divisor+7,w,c
  9705  003468  B4D8               	btfsc	status,2,c
  9706  00346A  D046               	goto	l5936
  9707  00346C  0E01               	movlw	1
  9708  00346E  6E17               	movwf	___aodiv@counter,c
  9709  003470  D00A               	goto	l5922
  9710  003472                     l5920:
  9711  003472  90D8               	bcf	status,0,c
  9712  003474  360F               	rlcf	___aodiv@divisor,f,c
  9713  003476  3610               	rlcf	___aodiv@divisor+1,f,c
  9714  003478  3611               	rlcf	___aodiv@divisor+2,f,c
  9715  00347A  3612               	rlcf	___aodiv@divisor+3,f,c
  9716  00347C  3613               	rlcf	___aodiv@divisor+4,f,c
  9717  00347E  3614               	rlcf	___aodiv@divisor+5,f,c
  9718  003480  3615               	rlcf	___aodiv@divisor+6,f,c
  9719  003482  3616               	rlcf	___aodiv@divisor+7,f,c
  9720  003484  2A17               	incf	___aodiv@counter,f,c
  9721  003486                     l5922:
  9722  003486  AE16               	btfss	___aodiv@divisor+7,7,c
  9723  003488  D7F4               	goto	l5920
  9724  00348A                     u7530:
  9725  00348A  90D8               	bcf	status,0,c
  9726  00348C  3619               	rlcf	___aodiv@quotient,f,c
  9727  00348E  361A               	rlcf	___aodiv@quotient+1,f,c
  9728  003490  361B               	rlcf	___aodiv@quotient+2,f,c
  9729  003492  361C               	rlcf	___aodiv@quotient+3,f,c
  9730  003494  361D               	rlcf	___aodiv@quotient+4,f,c
  9731  003496  361E               	rlcf	___aodiv@quotient+5,f,c
  9732  003498  361F               	rlcf	___aodiv@quotient+6,f,c
  9733  00349A  3620               	rlcf	___aodiv@quotient+7,f,c
  9734  00349C  500F               	movf	___aodiv@divisor,w,c
  9735  00349E  5C07               	subwf	___aodiv@dividend,w,c
  9736  0034A0  5010               	movf	___aodiv@divisor+1,w,c
  9737  0034A2  5808               	subwfb	___aodiv@dividend+1,w,c
  9738  0034A4  5011               	movf	___aodiv@divisor+2,w,c
  9739  0034A6  5809               	subwfb	___aodiv@dividend+2,w,c
  9740  0034A8  5012               	movf	___aodiv@divisor+3,w,c
  9741  0034AA  580A               	subwfb	___aodiv@dividend+3,w,c
  9742  0034AC  5013               	movf	___aodiv@divisor+4,w,c
  9743  0034AE  580B               	subwfb	___aodiv@dividend+4,w,c
  9744  0034B0  5014               	movf	___aodiv@divisor+5,w,c
  9745  0034B2  580C               	subwfb	___aodiv@dividend+5,w,c
  9746  0034B4  5015               	movf	___aodiv@divisor+6,w,c
  9747  0034B6  580D               	subwfb	___aodiv@dividend+6,w,c
  9748  0034B8  5016               	movf	___aodiv@divisor+7,w,c
  9749  0034BA  580E               	subwfb	___aodiv@dividend+7,w,c
  9750  0034BC  A0D8               	btfss	status,0,c
  9751  0034BE  D011               	goto	l5932
  9752  0034C0  500F               	movf	___aodiv@divisor,w,c
  9753  0034C2  5E07               	subwf	___aodiv@dividend,f,c
  9754  0034C4  5010               	movf	___aodiv@divisor+1,w,c
  9755  0034C6  5A08               	subwfb	___aodiv@dividend+1,f,c
  9756  0034C8  5011               	movf	___aodiv@divisor+2,w,c
  9757  0034CA  5A09               	subwfb	___aodiv@dividend+2,f,c
  9758  0034CC  5012               	movf	___aodiv@divisor+3,w,c
  9759  0034CE  5A0A               	subwfb	___aodiv@dividend+3,f,c
  9760  0034D0  5013               	movf	___aodiv@divisor+4,w,c
  9761  0034D2  5A0B               	subwfb	___aodiv@dividend+4,f,c
  9762  0034D4  5014               	movf	___aodiv@divisor+5,w,c
  9763  0034D6  5A0C               	subwfb	___aodiv@dividend+5,f,c
  9764  0034D8  5015               	movf	___aodiv@divisor+6,w,c
  9765  0034DA  5A0D               	subwfb	___aodiv@dividend+6,f,c
  9766  0034DC  5016               	movf	___aodiv@divisor+7,w,c
  9767  0034DE  5A0E               	subwfb	___aodiv@dividend+7,f,c
  9768  0034E0  8019               	bsf	___aodiv@quotient,0,c
  9769  0034E2                     l5932:
  9770  0034E2  90D8               	bcf	status,0,c
  9771  0034E4  3216               	rrcf	___aodiv@divisor+7,f,c
  9772  0034E6  3215               	rrcf	___aodiv@divisor+6,f,c
  9773  0034E8  3214               	rrcf	___aodiv@divisor+5,f,c
  9774  0034EA  3213               	rrcf	___aodiv@divisor+4,f,c
  9775  0034EC  3212               	rrcf	___aodiv@divisor+3,f,c
  9776  0034EE  3211               	rrcf	___aodiv@divisor+2,f,c
  9777  0034F0  3210               	rrcf	___aodiv@divisor+1,f,c
  9778  0034F2  320F               	rrcf	___aodiv@divisor,f,c
  9779  0034F4  2E17               	decfsz	___aodiv@counter,f,c
  9780  0034F6  D7C9               	goto	u7530
  9781  0034F8                     l5936:
  9782  0034F8  5018               	movf	___aodiv@sign,w,c
  9783  0034FA  B4D8               	btfsc	status,2,c
  9784  0034FC  D010               	goto	l5940
  9785  0034FE  1E20               	comf	___aodiv@quotient+7,f,c
  9786  003500  1E1F               	comf	___aodiv@quotient+6,f,c
  9787  003502  1E1E               	comf	___aodiv@quotient+5,f,c
  9788  003504  1E1D               	comf	___aodiv@quotient+4,f,c
  9789  003506  1E1C               	comf	___aodiv@quotient+3,f,c
  9790  003508  1E1B               	comf	___aodiv@quotient+2,f,c
  9791  00350A  1E1A               	comf	___aodiv@quotient+1,f,c
  9792  00350C  6C19               	negf	___aodiv@quotient,c
  9793  00350E  0E00               	movlw	0
  9794  003510  221A               	addwfc	___aodiv@quotient+1,f,c
  9795  003512  221B               	addwfc	___aodiv@quotient+2,f,c
  9796  003514  221C               	addwfc	___aodiv@quotient+3,f,c
  9797  003516  221D               	addwfc	___aodiv@quotient+4,f,c
  9798  003518  221E               	addwfc	___aodiv@quotient+5,f,c
  9799  00351A  221F               	addwfc	___aodiv@quotient+6,f,c
  9800  00351C  2220               	addwfc	___aodiv@quotient+7,f,c
  9801  00351E                     l5940:
  9802  00351E  C019  F007         	movff	___aodiv@quotient,?___aodiv
  9803  003522  C01A  F008         	movff	___aodiv@quotient+1,?___aodiv+1
  9804  003526  C01B  F009         	movff	___aodiv@quotient+2,?___aodiv+2
  9805  00352A  C01C  F00A         	movff	___aodiv@quotient+3,?___aodiv+3
  9806  00352E  C01D  F00B         	movff	___aodiv@quotient+4,?___aodiv+4
  9807  003532  C01E  F00C         	movff	___aodiv@quotient+5,?___aodiv+5
  9808  003536  C01F  F00D         	movff	___aodiv@quotient+6,?___aodiv+6
  9809  00353A  C020  F00E         	movff	___aodiv@quotient+7,?___aodiv+7
  9810  00353E  0012               	return		;funcret
  9811  003540                     __end_of___aodiv:
  9812                           	opt callstack 0
  9813                           
  9814 ;; *************** function _atoi *****************
  9815 ;; Defined at:
  9816 ;;		line 4 in file "D:\MPLAB\pic\sources\c99\common\atoi.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;  s               2   13[COMRAM] PTR const unsigned char 
  9819 ;;		 -> STR_13(4), STR_12(12), STR_11(12), STR_10(21), 
  9820 ;;		 -> STR_9(7), STR_8(7), STR_7(7), STR_6(7), 
  9821 ;;		 -> STR_5(11), STR_4(12), STR_3(14), STR_2(16), 
  9822 ;;		 -> STR_1(14), 
  9823 ;; Auto vars:     Size  Location     Type
  9824 ;;  n               2   26[COMRAM] int 
  9825 ;;  neg             2   19[COMRAM] int 
  9826 ;; Return value:  Size  Location     Type
  9827 ;;                  2   13[COMRAM] int 
  9828 ;; Registers used:
  9829 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9830 ;; Tracked objects:
  9831 ;;		On entry : 0/0
  9832 ;;		On exit  : 0/0
  9833 ;;		Unchanged: 0/0
  9834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9836 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9837 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9838 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9839 ;;Total ram usage:       15 bytes
  9840 ;; Hardware stack levels used:    1
  9841 ;; Hardware stack levels required when called:    5
  9842 ;; This function calls:
  9843 ;;		___wmul
  9844 ;;		_isdigit
  9845 ;;		_isspace
  9846 ;; This function is called by:
  9847 ;;		_vfpfcnvrt
  9848 ;; This function uses a non-reentrant model
  9849 ;;
  9850                           
  9851                           	psect	text37
  9852  003680                     __ptext37:
  9853                           	opt callstack 0
  9854  003680                     _atoi:
  9855                           	opt callstack 21
  9856                           
  9857                           ;incstack = 0
  9858  003680  0E00               	movlw	0
  9859  003682  6E1C               	movwf	atoi@n+1,c
  9860  003684  0E00               	movlw	0
  9861  003686  6E1B               	movwf	atoi@n,c
  9862  003688  0E00               	movlw	0
  9863  00368A  6E15               	movwf	atoi@neg+1,c
  9864  00368C  0E00               	movlw	0
  9865  00368E  6E14               	movwf	atoi@neg,c
  9866  003690  D002               	goto	l6800
  9867  003692                     l6798:
  9868  003692  4A0E               	infsnz	atoi@s,f,c
  9869  003694  2A0F               	incf	atoi@s+1,f,c
  9870  003696                     l6800:
  9871  003696  0E01               	movlw	1
  9872  003698  6E1A               	movwf	_atoi$1423,c
  9873  00369A  C00E  FFF6         	movff	atoi@s,tblptrl
  9874  00369E  C00F  FFF7         	movff	atoi@s+1,tblptrh
  9875  0036A2                     	if	0	;tblptru may be non-zero
  9876  0036A2                     	endif
  9877  0036A2                     	if	0	;tblptru may be non-zero
  9878  0036A2                     	endif
  9879  0036A2  0008               	tblrd		*
  9880  0036A4  50F5               	movf	tablat,w,c
  9881  0036A6  0A20               	xorlw	32
  9882  0036A8  B4D8               	btfsc	status,2,c
  9883  0036AA  D018               	goto	l6808
  9884  0036AC  0EF7               	movlw	247
  9885  0036AE  6E10               	movwf	??_atoi& (0+255),c
  9886  0036B0  0EFF               	movlw	255
  9887  0036B2  6E11               	movwf	(??_atoi+1)& (0+255),c
  9888  0036B4  C00E  FFF6         	movff	atoi@s,tblptrl
  9889  0036B8  C00F  FFF7         	movff	atoi@s+1,tblptrh
  9890  0036BC                     	if	0	;tblptru may be non-zero
  9891  0036BC                     	endif
  9892  0036BC                     	if	0	;tblptru may be non-zero
  9893  0036BC                     	endif
  9894  0036BC  0008               	tblrd		*
  9895  0036BE  50F5               	movf	tablat,w,c
  9896  0036C0  6E12               	movwf	(??_atoi+2)& (0+255),c
  9897  0036C2  6A13               	clrf	(??_atoi+3)& (0+255),c
  9898  0036C4  5010               	movf	??_atoi,w,c
  9899  0036C6  2612               	addwf	??_atoi+2,f,c
  9900  0036C8  5011               	movf	??_atoi+1,w,c
  9901  0036CA  2213               	addwfc	??_atoi+3,f,c
  9902  0036CC  5013               	movf	??_atoi+3,w,c
  9903  0036CE  E104               	bnz	u9020
  9904  0036D0  0E05               	movlw	5
  9905  0036D2  5C12               	subwf	??_atoi+2,w,c
  9906  0036D4  A0D8               	btfss	status,0,c
  9907  0036D6  D002               	goto	l6808
  9908  0036D8                     u9020:
  9909  0036D8  0E00               	movlw	0
  9910  0036DA  6E1A               	movwf	_atoi$1423,c
  9911  0036DC                     l6808:
  9912  0036DC  C01A  F016         	movff	_atoi$1423,_atoi$1422
  9913  0036E0  6A17               	clrf	_atoi$1422+1,c
  9914  0036E2  5016               	movf	_atoi$1422,w,c
  9915  0036E4  1017               	iorwf	_atoi$1422+1,w,c
  9916  0036E6  B4D8               	btfsc	status,2,c
  9917  0036E8  D008               	goto	l6818
  9918  0036EA  D7D3               	goto	l6798
  9919  0036EC                     l6814:
  9920  0036EC  0E00               	movlw	0
  9921  0036EE  6E15               	movwf	atoi@neg+1,c
  9922  0036F0  0E01               	movlw	1
  9923  0036F2  6E14               	movwf	atoi@neg,c
  9924  0036F4                     l6816:
  9925  0036F4  4A0E               	infsnz	atoi@s,f,c
  9926  0036F6  2A0F               	incf	atoi@s+1,f,c
  9927  0036F8  D02E               	goto	l6824
  9928  0036FA                     l6818:
  9929  0036FA  C00E  FFF6         	movff	atoi@s,tblptrl
  9930  0036FE  C00F  FFF7         	movff	atoi@s+1,tblptrh
  9931  003702                     	if	0	;tblptru may be non-zero
  9932  003702                     	endif
  9933  003702                     	if	0	;tblptru may be non-zero
  9934  003702                     	endif
  9935  003702  0008               	tblrd		*
  9936  003704  50F5               	movf	tablat,w,c
  9937  003706  6E10               	movwf	??_atoi& (0+255),c
  9938  003708  6A11               	clrf	(??_atoi+1)& (0+255),c
  9939                           
  9940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9941                           ; Switch size 1, requested type "simple"
  9942                           ; Number of cases is 1, Range of values is 0 to 0
  9943                           ; switch strategies available:
  9944                           ; Name         Instructions Cycles
  9945                           ; simple_byte            4     3 (average)
  9946                           ;	Chosen strategy is simple_byte
  9947  00370A  5011               	movf	??_atoi+1,w,c
  9948  00370C  0A00               	xorlw	0	; case 0
  9949  00370E  A4D8               	btfss	status,2,c
  9950  003710  D022               	goto	l6824
  9951                           
  9952                           ; Switch size 1, requested type "simple"
  9953                           ; Number of cases is 2, Range of values is 43 to 45
  9954                           ; switch strategies available:
  9955                           ; Name         Instructions Cycles
  9956                           ; simple_byte            7     4 (average)
  9957                           ;	Chosen strategy is simple_byte
  9958  003712  5010               	movf	??_atoi,w,c
  9959  003714  0A2B               	xorlw	43	; case 43
  9960  003716  B4D8               	btfsc	status,2,c
  9961  003718  D7ED               	goto	l6816
  9962  00371A  0A06               	xorlw	6	; case 45
  9963  00371C  B4D8               	btfsc	status,2,c
  9964  00371E  D7E6               	goto	l6814
  9965  003720  D01A               	goto	l6824
  9966  003722                     l6820:
  9967  003722  C01B  F007         	movff	atoi@n,___wmul@multiplier
  9968  003726  C01C  F008         	movff	atoi@n+1,___wmul@multiplier+1
  9969  00372A  0E00               	movlw	0
  9970  00372C  6E0A               	movwf	___wmul@multiplicand+1,c
  9971  00372E  0E0A               	movlw	10
  9972  003730  6E09               	movwf	___wmul@multiplicand,c
  9973  003732  EC98  F022         	call	___wmul	;wreg free
  9974  003736  C00E  FFF6         	movff	atoi@s,tblptrl
  9975  00373A  C00F  FFF7         	movff	atoi@s+1,tblptrh
  9976  00373E                     	if	0	;tblptru may be non-zero
  9977  00373E                     	endif
  9978  00373E                     	if	0	;tblptru may be non-zero
  9979  00373E                     	endif
  9980  00373E  0008               	tblrd		*
  9981  003740  50F5               	movf	tablat,w,c
  9982  003742  5E07               	subwf	?___wmul,f,c
  9983  003744  0E00               	movlw	0
  9984  003746  5A08               	subwfb	?___wmul+1,f,c
  9985  003748  0E30               	movlw	48
  9986  00374A  2407               	addwf	?___wmul,w,c
  9987  00374C  6E1B               	movwf	atoi@n,c
  9988  00374E  0E00               	movlw	0
  9989  003750  2008               	addwfc	?___wmul+1,w,c
  9990  003752  6E1C               	movwf	atoi@n+1,c
  9991  003754  D7CF               	goto	l6816
  9992  003756                     l6824:
  9993  003756  0ED0               	movlw	208
  9994  003758  6E10               	movwf	??_atoi& (0+255),c
  9995  00375A  0EFF               	movlw	255
  9996  00375C  6E11               	movwf	(??_atoi+1)& (0+255),c
  9997  00375E  C00E  FFF6         	movff	atoi@s,tblptrl
  9998  003762  C00F  FFF7         	movff	atoi@s+1,tblptrh
  9999  003766                     	if	0	;tblptru may be non-zero
 10000  003766                     	endif
 10001  003766                     	if	0	;tblptru may be non-zero
 10002  003766                     	endif
 10003  003766  0008               	tblrd		*
 10004  003768  50F5               	movf	tablat,w,c
 10005  00376A  6E12               	movwf	(??_atoi+2)& (0+255),c
 10006  00376C  6A13               	clrf	(??_atoi+3)& (0+255),c
 10007  00376E  5010               	movf	??_atoi,w,c
 10008  003770  2612               	addwf	??_atoi+2,f,c
 10009  003772  5011               	movf	??_atoi+1,w,c
 10010  003774  2213               	addwfc	??_atoi+3,f,c
 10011  003776  5013               	movf	??_atoi+3,w,c
 10012  003778  E106               	bnz	u9040
 10013  00377A  0E0A               	movlw	10
 10014  00377C  5C12               	subwf	??_atoi+2,w,c
 10015  00377E  B0D8               	btfsc	status,0,c
 10016  003780  D002               	goto	u9040
 10017  003782  0E01               	movlw	1
 10018  003784  D001               	goto	u9050
 10019  003786                     u9040:
 10020  003786  0E00               	movlw	0
 10021  003788                     u9050:
 10022  003788  6E18               	movwf	_atoi$1424,c
 10023  00378A  6A19               	clrf	_atoi$1424+1,c
 10024  00378C  5018               	movf	_atoi$1424,w,c
 10025  00378E  1019               	iorwf	_atoi$1424+1,w,c
 10026  003790  A4D8               	btfss	status,2,c
 10027  003792  D7C7               	goto	l6820
 10028  003794  5014               	movf	atoi@neg,w,c
 10029  003796  1015               	iorwf	atoi@neg+1,w,c
 10030  003798  A4D8               	btfss	status,2,c
 10031  00379A  D00D               	goto	l1236
 10032  00379C  C01B  F010         	movff	atoi@n,??_atoi
 10033  0037A0  C01C  F011         	movff	atoi@n+1,??_atoi+1
 10034  0037A4  1E10               	comf	??_atoi,f,c
 10035  0037A6  1E11               	comf	??_atoi+1,f,c
 10036  0037A8  4A10               	infsnz	??_atoi,f,c
 10037  0037AA  2A11               	incf	??_atoi+1,f,c
 10038  0037AC  C010  F00E         	movff	??_atoi,?_atoi
 10039  0037B0  C011  F00F         	movff	??_atoi+1,?_atoi+1
 10040  0037B4  0012               	return	
 10041  0037B6                     l1236:
 10042  0037B6  C01B  F00E         	movff	atoi@n,?_atoi
 10043  0037BA  C01C  F00F         	movff	atoi@n+1,?_atoi+1
 10044  0037BE  0012               	return		;funcret
 10045  0037C0                     __end_of_atoi:
 10046                           	opt callstack 0
 10047                           
 10048 ;; *************** function _isspace *****************
 10049 ;; Defined at:
 10050 ;;		line 5 in file "D:\MPLAB\pic\sources\c99\common\isspace.c"
 10051 ;; Parameters:    Size  Location     Type
 10052 ;;  c               2    6[COMRAM] int 
 10053 ;; Auto vars:     Size  Location     Type
 10054 ;;		None
 10055 ;; Return value:  Size  Location     Type
 10056 ;;                  2    6[COMRAM] int 
 10057 ;; Registers used:
 10058 ;;		wreg, status,2, status,0
 10059 ;; Tracked objects:
 10060 ;;		On entry : 0/0
 10061 ;;		On exit  : 0/0
 10062 ;;		Unchanged: 0/0
 10063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10064 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10066 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10067 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10068 ;;Total ram usage:        7 bytes
 10069 ;; Hardware stack levels used:    1
 10070 ;; Hardware stack levels required when called:    4
 10071 ;; This function calls:
 10072 ;;		Nothing
 10073 ;; This function is called by:
 10074 ;;		_atoi
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078                           	psect	text38
 10079  0042D0                     __ptext38:
 10080                           	opt callstack 0
 10081  0042D0                     _isspace:
 10082                           	opt callstack 21
 10083                           
 10084                           ;incstack = 0
 10085  0042D0  0E01               	movlw	1
 10086  0042D2  6E0D               	movwf	_isspace$1453,c
 10087  0042D4  0E20               	movlw	32
 10088  0042D6  1807               	xorwf	isspace@c,w,c
 10089  0042D8  1008               	iorwf	isspace@c+1,w,c
 10090  0042DA  B4D8               	btfsc	status,2,c
 10091  0042DC  D014               	goto	l6432
 10092  0042DE  0EF7               	movlw	247
 10093  0042E0  6E09               	movwf	??_isspace& (0+255),c
 10094  0042E2  0EFF               	movlw	255
 10095  0042E4  6E0A               	movwf	(??_isspace+1)& (0+255),c
 10096  0042E6  C007  F00B         	movff	isspace@c,??_isspace+2
 10097  0042EA  C008  F00C         	movff	isspace@c+1,??_isspace+3
 10098  0042EE  5009               	movf	??_isspace,w,c
 10099  0042F0  260B               	addwf	??_isspace+2,f,c
 10100  0042F2  500A               	movf	??_isspace+1,w,c
 10101  0042F4  220C               	addwfc	??_isspace+3,f,c
 10102  0042F6  500C               	movf	??_isspace+3,w,c
 10103  0042F8  E104               	bnz	u8330
 10104  0042FA  0E05               	movlw	5
 10105  0042FC  5C0B               	subwf	??_isspace+2,w,c
 10106  0042FE  A0D8               	btfss	status,0,c
 10107  004300  D002               	goto	l6432
 10108  004302                     u8330:
 10109  004302  0E00               	movlw	0
 10110  004304  6E0D               	movwf	_isspace$1453,c
 10111  004306                     l6432:
 10112  004306  C00D  F007         	movff	_isspace$1453,?_isspace
 10113  00430A  6A08               	clrf	?_isspace+1,c
 10114  00430C  0012               	return		;funcret
 10115  00430E                     __end_of_isspace:
 10116                           	opt callstack 0
 10117                           
 10118 ;; *************** function _isdigit *****************
 10119 ;; Defined at:
 10120 ;;		line 5 in file "D:\MPLAB\pic\sources\c99\common\isdigit.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;  c               2    6[COMRAM] int 
 10123 ;; Auto vars:     Size  Location     Type
 10124 ;;		None
 10125 ;; Return value:  Size  Location     Type
 10126 ;;                  2    6[COMRAM] int 
 10127 ;; Registers used:
 10128 ;;		wreg, status,2, status,0
 10129 ;; Tracked objects:
 10130 ;;		On entry : 0/0
 10131 ;;		On exit  : 0/0
 10132 ;;		Unchanged: 0/0
 10133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10134 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10136 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10137 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10138 ;;Total ram usage:        6 bytes
 10139 ;; Hardware stack levels used:    1
 10140 ;; Hardware stack levels required when called:    4
 10141 ;; This function calls:
 10142 ;;		Nothing
 10143 ;; This function is called by:
 10144 ;;		_vfpfcnvrt
 10145 ;;		_atoi
 10146 ;; This function uses a non-reentrant model
 10147 ;;
 10148                           
 10149                           	psect	text39
 10150  004450                     __ptext39:
 10151                           	opt callstack 0
 10152  004450                     _isdigit:
 10153                           	opt callstack 22
 10154                           
 10155                           ;incstack = 0
 10156  004450  0ED0               	movlw	208
 10157  004452  6E09               	movwf	??_isdigit& (0+255),c
 10158  004454  0EFF               	movlw	255
 10159  004456  6E0A               	movwf	(??_isdigit+1)& (0+255),c
 10160  004458  C007  F00B         	movff	isdigit@c,??_isdigit+2
 10161  00445C  C008  F00C         	movff	isdigit@c+1,??_isdigit+3
 10162  004460  5009               	movf	??_isdigit,w,c
 10163  004462  260B               	addwf	??_isdigit+2,f,c
 10164  004464  500A               	movf	??_isdigit+1,w,c
 10165  004466  220C               	addwfc	??_isdigit+3,f,c
 10166  004468  500C               	movf	??_isdigit+3,w,c
 10167  00446A  E106               	bnz	u7470
 10168  00446C  0E0A               	movlw	10
 10169  00446E  5C0B               	subwf	??_isdigit+2,w,c
 10170  004470  B0D8               	btfsc	status,0,c
 10171  004472  D002               	goto	u7470
 10172  004474  0E01               	movlw	1
 10173  004476  D001               	goto	u7480
 10174  004478                     u7470:
 10175  004478  0E00               	movlw	0
 10176  00447A                     u7480:
 10177  00447A  6E07               	movwf	?_isdigit,c
 10178  00447C  6A08               	clrf	?_isdigit+1,c
 10179  00447E  0012               	return		;funcret
 10180  004480                     __end_of_isdigit:
 10181                           	opt callstack 0
 10182                           
 10183 ;; *************** function ___wmul *****************
 10184 ;; Defined at:
 10185 ;;		line 15 in file "D:\MPLAB\pic\sources\c99\common\Umul16.c"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;  multiplier      2    6[COMRAM] unsigned int 
 10188 ;;  multiplicand    2    8[COMRAM] unsigned int 
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;  product         2   10[COMRAM] unsigned int 
 10191 ;; Return value:  Size  Location     Type
 10192 ;;                  2    6[COMRAM] unsigned int 
 10193 ;; Registers used:
 10194 ;;		wreg, status,2, status,0, prodl, prodh
 10195 ;; Tracked objects:
 10196 ;;		On entry : 0/0
 10197 ;;		On exit  : 0/0
 10198 ;;		Unchanged: 0/0
 10199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10200 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10201 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10203 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10204 ;;Total ram usage:        6 bytes
 10205 ;; Hardware stack levels used:    1
 10206 ;; Hardware stack levels required when called:    4
 10207 ;; This function calls:
 10208 ;;		Nothing
 10209 ;; This function is called by:
 10210 ;;		_read_adc_voltage
 10211 ;;		_atoi
 10212 ;; This function uses a non-reentrant model
 10213 ;;
 10214                           
 10215                           	psect	text40
 10216  004530                     __ptext40:
 10217                           	opt callstack 0
 10218  004530                     ___wmul:
 10219                           	opt callstack 25
 10220                           
 10221                           ;incstack = 0
 10222  004530  5007               	movf	___wmul@multiplier,w,c
 10223  004532  0209               	mulwf	___wmul@multiplicand,c
 10224  004534  CFF3 F00B          	movff	prodl,___wmul@product
 10225  004538  CFF4 F00C          	movff	prodh,___wmul@product+1
 10226  00453C  5007               	movf	___wmul@multiplier,w,c
 10227  00453E  020A               	mulwf	___wmul@multiplicand+1,c
 10228  004540  50F3               	movf	prodl,w,c
 10229  004542  260C               	addwf	___wmul@product+1,f,c
 10230  004544  5008               	movf	___wmul@multiplier+1,w,c
 10231  004546  0209               	mulwf	___wmul@multiplicand,c
 10232  004548  50F3               	movf	prodl,w,c
 10233  00454A  260C               	addwf	___wmul@product+1,f,c
 10234  00454C  C00B  F007         	movff	___wmul@product,?___wmul
 10235  004550  C00C  F008         	movff	___wmul@product+1,?___wmul+1
 10236  004554  0012               	return		;funcret
 10237  004556                     __end_of___wmul:
 10238                           	opt callstack 0
 10239                           
 10240 ;; *************** function _lcd_puts *****************
 10241 ;; Defined at:
 10242 ;;		line 92 in file "lcd_x8.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;  s               2   24[COMRAM] PTR unsigned char 
 10245 ;;		 -> display@LCD(64), display@CK(6), display@HT(6), display@LCDP(64), 
 10246 ;; Auto vars:     Size  Location     Type
 10247 ;;		None
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  1    wreg      void 
 10250 ;; Registers used:
 10251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/0
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;Total ram usage:        2 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; Hardware stack levels required when called:    9
 10264 ;; This function calls:
 10265 ;;		_lcd_putc
 10266 ;; This function is called by:
 10267 ;;		_display
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           	psect	text41
 10272  0045A2                     __ptext41:
 10273                           	opt callstack 0
 10274  0045A2                     _lcd_puts:
 10275                           	opt callstack 20
 10276                           
 10277                           ;lcd_x8.c: 93:     while (*s) {
 10278                           
 10279                           ;incstack = 0
 10280  0045A2  D009               	goto	l4990
 10281  0045A4                     l4986:
 10282                           
 10283                           ;lcd_x8.c: 94:         lcd_putc(*s);
 10284  0045A4  C019  FFD9         	movff	lcd_puts@s,fsr2l
 10285  0045A8  C01A  FFDA         	movff	lcd_puts@s+1,fsr2h
 10286  0045AC  50DF               	movf	indf2,w,c
 10287  0045AE  ECD5  F01F         	call	_lcd_putc
 10288                           
 10289                           ;lcd_x8.c: 95:         s++;
 10290  0045B2  4A19               	infsnz	lcd_puts@s,f,c
 10291  0045B4  2A1A               	incf	lcd_puts@s+1,f,c
 10292  0045B6                     l4990:
 10293                           
 10294                           ;lcd_x8.c: 93:     while (*s) {
 10295  0045B6  C019  FFD9         	movff	lcd_puts@s,fsr2l
 10296  0045BA  C01A  FFDA         	movff	lcd_puts@s+1,fsr2h
 10297  0045BE  50DF               	movf	indf2,w,c
 10298  0045C0  B4D8               	btfsc	status,2,c
 10299  0045C2  0012               	return	
 10300  0045C4  D7EF               	goto	l4986
 10301  0045C6                     __end_of_lcd_puts:
 10302                           	opt callstack 0
 10303                           
 10304 ;; *************** function _lcd_putc *****************
 10305 ;; Defined at:
 10306 ;;		line 78 in file "lcd_x8.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;  c               1    wreg     unsigned char 
 10309 ;; Auto vars:     Size  Location     Type
 10310 ;;  c               1   23[COMRAM] unsigned char 
 10311 ;; Return value:  Size  Location     Type
 10312 ;;                  1    wreg      void 
 10313 ;; Registers used:
 10314 ;;		wreg, status,2, status,0, cstack
 10315 ;; Tracked objects:
 10316 ;;		On entry : 0/0
 10317 ;;		On exit  : 0/0
 10318 ;;		Unchanged: 0/0
 10319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10323 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10324 ;;Total ram usage:        3 bytes
 10325 ;; Hardware stack levels used:    1
 10326 ;; Hardware stack levels required when called:    8
 10327 ;; This function calls:
 10328 ;;		_delay_ms
 10329 ;;		_lcd_gotoxy
 10330 ;;		_lcd_send_byte
 10331 ;; This function is called by:
 10332 ;;		_lcd_puts
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           	psect	text42
 10337  003FAA                     __ptext42:
 10338                           	opt callstack 0
 10339  003FAA                     _lcd_putc:
 10340                           	opt callstack 20
 10341                           
 10342                           ;incstack = 0
 10343                           ;lcd_putc@c stored from wreg
 10344  003FAA  6E18               	movwf	lcd_putc@c,c
 10345                           
 10346                           ;lcd_x8.c: 79:     switch (c) {
 10347  003FAC  D01E               	goto	l4936
 10348  003FAE                     l4926:
 10349  003FAE  0E01               	movlw	1
 10350  003FB0  6E0F               	movwf	lcd_send_byte@n,c
 10351  003FB2  0E00               	movlw	0
 10352  003FB4  ECA5  F021         	call	_lcd_send_byte
 10353                           
 10354                           ;lcd_x8.c: 81:             delay_ms(2);
 10355  003FB8  0E00               	movlw	0
 10356  003FBA  6E08               	movwf	delay_ms@n+1,c
 10357  003FBC  0E02               	movlw	2
 10358  003FBE  6E07               	movwf	delay_ms@n,c
 10359  003FC0  ECAB  F022         	call	_delay_ms	;wreg free
 10360                           
 10361                           ;lcd_x8.c: 82:             break;
 10362  003FC4  0012               	return	
 10363  003FC6                     l4928:
 10364  003FC6  0E02               	movlw	2
 10365  003FC8  6E11               	movwf	lcd_gotoxy@y,c
 10366  003FCA  0E01               	movlw	1
 10367  003FCC  ECB2  F020         	call	_lcd_gotoxy
 10368                           
 10369                           ;lcd_x8.c: 84:             break;
 10370  003FD0  0012               	return	
 10371  003FD2                     l4930:
 10372  003FD2  0E10               	movlw	16
 10373  003FD4  6E0F               	movwf	lcd_send_byte@n,c
 10374  003FD6  0E00               	movlw	0
 10375  003FD8  ECA5  F021         	call	_lcd_send_byte
 10376                           
 10377                           ;lcd_x8.c: 86:             break;
 10378  003FDC  0012               	return	
 10379  003FDE                     l4932:
 10380  003FDE  C018  F00F         	movff	lcd_putc@c,lcd_send_byte@n
 10381  003FE2  0E01               	movlw	1
 10382  003FE4  ECA5  F021         	call	_lcd_send_byte
 10383                           
 10384                           ;lcd_x8.c: 88:             break;
 10385  003FE8  0012               	return	
 10386  003FEA                     l4936:
 10387  003FEA  5018               	movf	lcd_putc@c,w,c
 10388  003FEC  6E16               	movwf	??_lcd_putc& (0+255),c
 10389  003FEE  6A17               	clrf	(??_lcd_putc+1)& (0+255),c
 10390                           
 10391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10392                           ; Switch size 1, requested type "simple"
 10393                           ; Number of cases is 1, Range of values is 0 to 0
 10394                           ; switch strategies available:
 10395                           ; Name         Instructions Cycles
 10396                           ; simple_byte            4     3 (average)
 10397                           ;	Chosen strategy is simple_byte
 10398  003FF0  5017               	movf	??_lcd_putc+1,w,c
 10399  003FF2  0A00               	xorlw	0	; case 0
 10400  003FF4  A4D8               	btfss	status,2,c
 10401  003FF6  D7F3               	goto	l4932
 10402                           
 10403                           ; Switch size 1, requested type "simple"
 10404                           ; Number of cases is 3, Range of values is 8 to 12
 10405                           ; switch strategies available:
 10406                           ; Name         Instructions Cycles
 10407                           ; simple_byte           10     6 (average)
 10408                           ;	Chosen strategy is simple_byte
 10409  003FF8  5016               	movf	??_lcd_putc,w,c
 10410  003FFA  0A08               	xorlw	8	; case 8
 10411  003FFC  B4D8               	btfsc	status,2,c
 10412  003FFE  D7E9               	goto	l4930
 10413  004000  0A02               	xorlw	2	; case 10
 10414  004002  B4D8               	btfsc	status,2,c
 10415  004004  D7E0               	goto	l4928
 10416  004006  0A06               	xorlw	6	; case 12
 10417  004008  B4D8               	btfsc	status,2,c
 10418  00400A  D7D1               	goto	l4926
 10419  00400C  D7E8               	goto	l4932
 10420  00400E                     __end_of_lcd_putc:
 10421                           	opt callstack 0
 10422                           
 10423 ;; *************** function _lcd_gotoxy *****************
 10424 ;; Defined at:
 10425 ;;		line 61 in file "lcd_x8.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;  x               1    wreg     unsigned char 
 10428 ;;  y               1   16[COMRAM] unsigned char 
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;  x               1   19[COMRAM] unsigned char 
 10431 ;;  address         1   20[COMRAM] unsigned char 
 10432 ;; Return value:  Size  Location     Type
 10433 ;;                  1    wreg      void 
 10434 ;; Registers used:
 10435 ;;		wreg, status,2, status,0, cstack
 10436 ;; Tracked objects:
 10437 ;;		On entry : 0/0
 10438 ;;		On exit  : 0/0
 10439 ;;		Unchanged: 0/0
 10440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10441 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10443 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10444 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10445 ;;Total ram usage:        5 bytes
 10446 ;; Hardware stack levels used:    1
 10447 ;; Hardware stack levels required when called:    7
 10448 ;; This function calls:
 10449 ;;		_lcd_send_byte
 10450 ;; This function is called by:
 10451 ;;		_display
 10452 ;;		_lcd_putc
 10453 ;; This function uses a non-reentrant model
 10454 ;;
 10455                           
 10456                           	psect	text43
 10457  004164                     __ptext43:
 10458                           	opt callstack 0
 10459  004164                     _lcd_gotoxy:
 10460                           	opt callstack 20
 10461                           
 10462                           ;incstack = 0
 10463                           ;lcd_gotoxy@x stored from wreg
 10464  004164  6E14               	movwf	lcd_gotoxy@x,c
 10465                           
 10466                           ;lcd_x8.c: 62:     unsigned char address;;lcd_x8.c: 64:     switch (y) {
 10467  004166  D009               	goto	l4796
 10468  004168                     l4786:
 10469  004168  0E80               	movlw	128
 10470  00416A  D005               	goto	L20
 10471  00416C                     l4788:
 10472  00416C  0EC0               	movlw	192
 10473  00416E  D003               	goto	L20
 10474  004170                     l4790:
 10475  004170  0E90               	movlw	144
 10476  004172  D001               	goto	L20
 10477  004174                     l4792:
 10478  004174  0ED0               	movlw	208
 10479  004176                     L20:
 10480  004176  6E15               	movwf	lcd_gotoxy@address,c
 10481                           
 10482                           ;lcd_x8.c: 72:             break;
 10483  004178  D014               	goto	l4798
 10484  00417A                     l4796:
 10485  00417A  5011               	movf	lcd_gotoxy@y,w,c
 10486  00417C  6E12               	movwf	??_lcd_gotoxy& (0+255),c
 10487  00417E  6A13               	clrf	(??_lcd_gotoxy+1)& (0+255),c
 10488                           
 10489                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10490                           ; Switch size 1, requested type "simple"
 10491                           ; Number of cases is 1, Range of values is 0 to 0
 10492                           ; switch strategies available:
 10493                           ; Name         Instructions Cycles
 10494                           ; simple_byte            4     3 (average)
 10495                           ;	Chosen strategy is simple_byte
 10496  004180  5013               	movf	??_lcd_gotoxy+1,w,c
 10497  004182  0A00               	xorlw	0	; case 0
 10498  004184  A4D8               	btfss	status,2,c
 10499  004186  D00D               	goto	l4798
 10500                           
 10501                           ; Switch size 1, requested type "simple"
 10502                           ; Number of cases is 4, Range of values is 1 to 4
 10503                           ; switch strategies available:
 10504                           ; Name         Instructions Cycles
 10505                           ; simple_byte           13     7 (average)
 10506                           ;	Chosen strategy is simple_byte
 10507  004188  5012               	movf	??_lcd_gotoxy,w,c
 10508  00418A  0A01               	xorlw	1	; case 1
 10509  00418C  B4D8               	btfsc	status,2,c
 10510  00418E  D7EC               	goto	l4786
 10511  004190  0A03               	xorlw	3	; case 2
 10512  004192  B4D8               	btfsc	status,2,c
 10513  004194  D7EB               	goto	l4788
 10514  004196  0A01               	xorlw	1	; case 3
 10515  004198  B4D8               	btfsc	status,2,c
 10516  00419A  D7EA               	goto	l4790
 10517  00419C  0A07               	xorlw	7	; case 4
 10518  00419E  B4D8               	btfsc	status,2,c
 10519  0041A0  D7E9               	goto	l4792
 10520  0041A2                     l4798:
 10521                           
 10522                           ;lcd_x8.c: 74:     address += x - 1;
 10523  0041A2  0414               	decf	lcd_gotoxy@x,w,c
 10524  0041A4  2615               	addwf	lcd_gotoxy@address,f,c
 10525                           
 10526                           ;lcd_x8.c: 75:     lcd_send_byte(0, (unsigned char) (0x80 | address));
 10527  0041A6  5015               	movf	lcd_gotoxy@address,w,c
 10528  0041A8  0980               	iorlw	128
 10529  0041AA  6E0F               	movwf	lcd_send_byte@n,c
 10530  0041AC  0E00               	movlw	0
 10531  0041AE  ECA5  F021         	call	_lcd_send_byte
 10532  0041B2  0012               	return		;funcret
 10533  0041B4                     __end_of_lcd_gotoxy:
 10534                           	opt callstack 0
 10535                           
 10536 ;; *************** function _lcd_send_byte *****************
 10537 ;; Defined at:
 10538 ;;		line 31 in file "lcd_x8.c"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;  cm_data         1    wreg     unsigned char 
 10541 ;;  n               1   14[COMRAM] unsigned char 
 10542 ;; Auto vars:     Size  Location     Type
 10543 ;;  cm_data         1   15[COMRAM] unsigned char 
 10544 ;; Return value:  Size  Location     Type
 10545 ;;                  1    wreg      void 
 10546 ;; Registers used:
 10547 ;;		wreg, status,2, status,0, cstack
 10548 ;; Tracked objects:
 10549 ;;		On entry : 0/0
 10550 ;;		On exit  : 0/0
 10551 ;;		Unchanged: 0/0
 10552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10553 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10557 ;;Total ram usage:        2 bytes
 10558 ;; Hardware stack levels used:    1
 10559 ;; Hardware stack levels required when called:    6
 10560 ;; This function calls:
 10561 ;;		_delay_cycles
 10562 ;;		_lcd_send_nibble
 10563 ;; This function is called by:
 10564 ;;		_main
 10565 ;;		_lcd_init
 10566 ;;		_lcd_gotoxy
 10567 ;;		_lcd_putc
 10568 ;;		_Lcd_Shift_Right
 10569 ;;		_Lcd_Shift_Left
 10570 ;; This function uses a non-reentrant model
 10571 ;;
 10572                           
 10573                           	psect	text44
 10574  00434A                     __ptext44:
 10575                           	opt callstack 0
 10576  00434A                     _lcd_send_byte:
 10577                           	opt callstack 24
 10578                           
 10579                           ;incstack = 0
 10580                           ;lcd_send_byte@cm_data stored from wreg
 10581  00434A  6E10               	movwf	lcd_send_byte@cm_data,c
 10582                           
 10583                           ;lcd_x8.c: 33:     PORTEbits.RE2 = cm_data;
 10584  00434C  B010               	btfsc	lcd_send_byte@cm_data,0,c
 10585  00434E  D002               	bra	u4995
 10586  004350  9484               	bcf	3972,2,c	;volatile
 10587  004352  D001               	bra	u4996
 10588  004354                     u4995:
 10589  004354  8484               	bsf	3972,2,c	;volatile
 10590  004356                     u4996:
 10591                           
 10592                           ;lcd_x8.c: 34:     delay_cycles(1);
 10593  004356  0E01               	movlw	1
 10594  004358  EC57  F022         	call	_delay_cycles
 10595                           
 10596                           ;lcd_x8.c: 35:     delay_cycles(1);
 10597  00435C  0E01               	movlw	1
 10598  00435E  EC57  F022         	call	_delay_cycles
 10599                           
 10600                           ;lcd_x8.c: 36:     PORTEbits.RE1 = 0;
 10601  004362  9284               	bcf	3972,1,c	;volatile
 10602                           
 10603                           ;lcd_x8.c: 37:     lcd_send_nibble(n >> 4);
 10604  004364  380F               	swapf	lcd_send_byte@n,w,c
 10605  004366  0B0F               	andlw	15
 10606  004368  ECE3  F022         	call	_lcd_send_nibble
 10607                           
 10608                           ;lcd_x8.c: 38:     lcd_send_nibble(n & 0x0f);
 10609  00436C  500F               	movf	lcd_send_byte@n,w,c
 10610  00436E  0B0F               	andlw	15
 10611  004370  ECE3  F022         	call	_lcd_send_nibble
 10612                           
 10613                           ;lcd_x8.c: 39:     if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
 10614  004374  5010               	movf	lcd_send_byte@cm_data,w,c
 10615  004376  B4D8               	btfsc	status,2,c
 10616  004378  0012               	return	
 10617  00437A  0E32               	movlw	50
 10618  00437C                     u9807:
 10619  00437C  0004               	clrwdt	
 10620  00437E  2EE8               	decfsz	wreg,f,c
 10621  004380  D7FD               	bra	u9807
 10622  004382  0012               	return		;funcret
 10623  004384                     __end_of_lcd_send_byte:
 10624                           	opt callstack 0
 10625                           
 10626 ;; *************** function _lcd_send_nibble *****************
 10627 ;; Defined at:
 10628 ;;		line 21 in file "lcd_x8.c"
 10629 ;; Parameters:    Size  Location     Type
 10630 ;;  n               1    wreg     unsigned char 
 10631 ;; Auto vars:     Size  Location     Type
 10632 ;;  n               1   13[COMRAM] unsigned char 
 10633 ;; Return value:  Size  Location     Type
 10634 ;;                  1    wreg      void 
 10635 ;; Registers used:
 10636 ;;		wreg, status,2, status,0, cstack
 10637 ;; Tracked objects:
 10638 ;;		On entry : 0/0
 10639 ;;		On exit  : 0/0
 10640 ;;		Unchanged: 0/0
 10641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10644 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10646 ;;Total ram usage:        2 bytes
 10647 ;; Hardware stack levels used:    1
 10648 ;; Hardware stack levels required when called:    5
 10649 ;; This function calls:
 10650 ;;		_delay_cycles
 10651 ;; This function is called by:
 10652 ;;		_lcd_send_byte
 10653 ;;		_lcd_init
 10654 ;; This function uses a non-reentrant model
 10655 ;;
 10656                           
 10657                           	psect	text45
 10658  0045C6                     __ptext45:
 10659                           	opt callstack 0
 10660  0045C6                     _lcd_send_nibble:
 10661                           	opt callstack 24
 10662                           
 10663                           ;incstack = 0
 10664                           ;lcd_send_nibble@n stored from wreg
 10665  0045C6  6E0E               	movwf	lcd_send_nibble@n,c
 10666                           
 10667                           ;lcd_x8.c: 23:     lcd.data = n;
 10668  0045C8  C00E  F00D         	movff	lcd_send_nibble@n,??_lcd_send_nibble
 10669  0045CC  3A0D               	swapf	??_lcd_send_nibble,f,c
 10670  0045CE  5083               	movf	3971,w,c
 10671  0045D0  180D               	xorwf	??_lcd_send_nibble,w,c
 10672  0045D2  0B0F               	andlw	-241
 10673  0045D4  180D               	xorwf	??_lcd_send_nibble,w,c
 10674  0045D6  6E83               	movwf	3971,c
 10675                           
 10676                           ;lcd_x8.c: 25:     delay_cycles(1);
 10677  0045D8  0E01               	movlw	1
 10678  0045DA  EC57  F022         	call	_delay_cycles
 10679                           
 10680                           ;lcd_x8.c: 26:     PORTEbits.RE1 = 1;
 10681  0045DE  8284               	bsf	3972,1,c	;volatile
 10682                           
 10683                           ;lcd_x8.c: 27:     _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
 10684  0045E0  0004               	clrwdt	
 10685  0045E2  F000               	nop		;2 cycle nop
 10686                           
 10687                           ;lcd_x8.c: 28:     PORTEbits.RE1 = 0;
 10688  0045E4  9284               	bcf	3972,1,c	;volatile
 10689  0045E6  0012               	return		;funcret
 10690  0045E8                     __end_of_lcd_send_nibble:
 10691                           	opt callstack 0
 10692                           
 10693 ;; *************** function _delay_cycles *****************
 10694 ;; Defined at:
 10695 ;;		line 13 in file "lcd_x8.c"
 10696 ;; Parameters:    Size  Location     Type
 10697 ;;  n               1    wreg     unsigned char 
 10698 ;; Auto vars:     Size  Location     Type
 10699 ;;  n               1    9[COMRAM] unsigned char 
 10700 ;;  x               2   10[COMRAM] int 
 10701 ;; Return value:  Size  Location     Type
 10702 ;;                  1    wreg      void 
 10703 ;; Registers used:
 10704 ;;		wreg, status,2, status,0
 10705 ;; Tracked objects:
 10706 ;;		On entry : 0/0
 10707 ;;		On exit  : 0/0
 10708 ;;		Unchanged: 0/0
 10709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10711 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10712 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10713 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10714 ;;Total ram usage:        6 bytes
 10715 ;; Hardware stack levels used:    1
 10716 ;; Hardware stack levels required when called:    4
 10717 ;; This function calls:
 10718 ;;		Nothing
 10719 ;; This function is called by:
 10720 ;;		_lcd_send_nibble
 10721 ;;		_lcd_send_byte
 10722 ;; This function uses a non-reentrant model
 10723 ;;
 10724                           
 10725                           	psect	text46
 10726  0044AE                     __ptext46:
 10727                           	opt callstack 0
 10728  0044AE                     _delay_cycles:
 10729                           	opt callstack 24
 10730                           
 10731                           ;incstack = 0
 10732                           ;delay_cycles@n stored from wreg
 10733  0044AE  6E0A               	movwf	delay_cycles@n,c
 10734                           
 10735                           ;lcd_x8.c: 14:     int x;;lcd_x8.c: 15:     for (x = 0; x <= n; x++) {
 10736  0044B0  0E00               	movlw	0
 10737  0044B2  6E0C               	movwf	delay_cycles@x+1,c
 10738  0044B4  0E00               	movlw	0
 10739  0044B6  6E0B               	movwf	delay_cycles@x,c
 10740  0044B8  D003               	goto	l3468
 10741  0044BA                     l239:
 10742  0044BA  0004               	clrwdt		;# 
 10743                           
 10744                           ;lcd_x8.c: 17:     }
 10745  0044BC  4A0B               	infsnz	delay_cycles@x,f,c
 10746  0044BE  2A0C               	incf	delay_cycles@x+1,f,c
 10747  0044C0                     l3468:
 10748  0044C0  500A               	movf	delay_cycles@n,w,c
 10749  0044C2  6E07               	movwf	??_delay_cycles& (0+255),c
 10750  0044C4  6A08               	clrf	(??_delay_cycles+1)& (0+255),c
 10751  0044C6  500B               	movf	delay_cycles@x,w,c
 10752  0044C8  5C07               	subwf	??_delay_cycles,w,c
 10753  0044CA  5008               	movf	??_delay_cycles+1,w,c
 10754  0044CC  0A80               	xorlw	128
 10755  0044CE  6E09               	movwf	(??_delay_cycles+2)& (0+255),c
 10756  0044D0  500C               	movf	delay_cycles@x+1,w,c
 10757  0044D2  0A80               	xorlw	128
 10758  0044D4  5809               	subwfb	(??_delay_cycles+2)& (0+255),w,c
 10759  0044D6  A0D8               	btfss	status,0,c
 10760  0044D8  0012               	return	
 10761  0044DA  D7EF               	goto	l239
 10762  0044DC                     __end_of_delay_cycles:
 10763                           	opt callstack 0
 10764                           
 10765 ;; *************** function _delay_ms *****************
 10766 ;; Defined at:
 10767 ;;		line 148 in file "Cooker.c"
 10768 ;; Parameters:    Size  Location     Type
 10769 ;;  n               2    6[COMRAM] unsigned int 
 10770 ;; Auto vars:     Size  Location     Type
 10771 ;;  i               2    8[COMRAM] int 
 10772 ;; Return value:  Size  Location     Type
 10773 ;;                  1    wreg      void 
 10774 ;; Registers used:
 10775 ;;		wreg, status,2, status,0
 10776 ;; Tracked objects:
 10777 ;;		On entry : 0/0
 10778 ;;		On exit  : 0/0
 10779 ;;		Unchanged: 0/0
 10780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10782 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10784 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10785 ;;Total ram usage:        4 bytes
 10786 ;; Hardware stack levels used:    1
 10787 ;; Hardware stack levels required when called:    4
 10788 ;; This function calls:
 10789 ;;		Nothing
 10790 ;; This function is called by:
 10791 ;;		_main
 10792 ;;		_lcd_init
 10793 ;;		_lcd_putc
 10794 ;; This function uses a non-reentrant model
 10795 ;;
 10796                           
 10797                           	psect	text47
 10798  004556                     __ptext47:
 10799                           	opt callstack 0
 10800  004556                     _delay_ms:
 10801                           	opt callstack 25
 10802                           
 10803                           ;Cooker.c: 149:     int i;;Cooker.c: 150:     for (i = 0; i < n; i++) {
 10804                           
 10805                           ;incstack = 0
 10806  004556  0E00               	movlw	0
 10807  004558  6E0A               	movwf	delay_ms@i+1,c
 10808  00455A  0E00               	movlw	0
 10809  00455C  6E09               	movwf	delay_ms@i,c
 10810  00455E  D007               	goto	l138
 10811  004560                     l4780:
 10812                           
 10813                           ;Cooker.c: 151:         _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
 10814  004560  0EC8               	movlw	200
 10815  004562                     u9817:
 10816  004562  0004               	clrwdt	
 10817  004564  0004               	clrwdt	
 10818  004566  2EE8               	decfsz	wreg,f,c
 10819  004568  D7FC               	bra	u9817
 10820                           
 10821                           ;Cooker.c: 152:     }
 10822  00456A  4A09               	infsnz	delay_ms@i,f,c
 10823  00456C  2A0A               	incf	delay_ms@i+1,f,c
 10824  00456E                     l138:
 10825  00456E  5007               	movf	delay_ms@n,w,c
 10826  004570  5C09               	subwf	delay_ms@i,w,c
 10827  004572  5008               	movf	delay_ms@n+1,w,c
 10828  004574  580A               	subwfb	delay_ms@i+1,w,c
 10829  004576  B0D8               	btfsc	status,0,c
 10830  004578  0012               	return	
 10831  00457A  D7F2               	goto	l4780
 10832  00457C                     __end_of_delay_ms:
 10833                           	opt callstack 0
 10834                           
 10835 ;; *************** function _highIsr *****************
 10836 ;; Defined at:
 10837 ;;		line 139 in file "Cooker.c"
 10838 ;; Parameters:    Size  Location     Type
 10839 ;;		None
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;		None
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  1    wreg      void 
 10844 ;; Registers used:
 10845 ;;		wreg, status,2, status,0, cstack
 10846 ;; Tracked objects:
 10847 ;;		On entry : 0/0
 10848 ;;		On exit  : 0/0
 10849 ;;		Unchanged: 0/0
 10850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10855 ;;Total ram usage:        0 bytes
 10856 ;; Hardware stack levels used:    1
 10857 ;; Hardware stack levels required when called:    3
 10858 ;; This function calls:
 10859 ;;		_EXT_Int0_isr
 10860 ;;		_EXT_Int1_isr
 10861 ;;		_EXT_Int2_isr
 10862 ;;		_Timer0_isr
 10863 ;; This function is called by:
 10864 ;;		Interrupt level 2
 10865 ;; This function uses a non-reentrant model
 10866 ;;
 10867                           
 10868                           	psect	intcode
 10869  000008                     __pintcode:
 10870                           	opt callstack 0
 10871  000008                     _highIsr:
 10872                           	opt callstack 18
 10873                           
 10874                           ;incstack = 0
 10875  000008  8278               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10876  00000A  ED83  F022         	call	int_func,f	;refresh shadow registers
 10877                           
 10878                           	psect	intcode_body
 10879  004506                     __pintcode_body:
 10880                           	opt callstack 18
 10881  004506                     int_func:
 10882                           	opt callstack 18
 10883  004506  0006               	pop		; remove dummy address from shadow register refresh
 10884                           
 10885                           ;Cooker.c: 141:     if (INTCONbits.TMR0IF) Timer0_isr();
 10886  004508  A4F2               	btfss	4082,2,c	;volatile
 10887  00450A  D003               	goto	i2l128
 10888  00450C  EC8B  F01E         	call	_Timer0_isr	;wreg free
 10889  004510  D00D               	goto	i2l131
 10890  004512                     i2l128:
 10891  004512  A2F2               	btfss	4082,1,c	;volatile
 10892  004514  D003               	goto	i2l130
 10893  004516  EC03  F023         	call	_EXT_Int0_isr	;wreg free
 10894  00451A  D008               	goto	i2l131
 10895  00451C                     i2l130:
 10896  00451C  A0F0               	btfss	4080,0,c	;volatile
 10897  00451E  D003               	goto	i2l132
 10898  004520  ECF7  F021         	call	_EXT_Int1_isr	;wreg free
 10899  004524  D003               	goto	i2l131
 10900  004526                     i2l132:
 10901  004526  B2F0               	btfsc	4080,1,c	;volatile
 10902  004528  EC12  F023         	call	_EXT_Int2_isr	;wreg free
 10903  00452C                     i2l131:
 10904  00452C  9278               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10905  00452E  0011               	retfie		f
 10906  004530                     __end_of_highIsr:
 10907                           	opt callstack 0
 10908                           
 10909 ;; *************** function _Timer0_isr *****************
 10910 ;; Defined at:
 10911 ;;		line 89 in file "Cooker.c"
 10912 ;; Parameters:    Size  Location     Type
 10913 ;;		None
 10914 ;; Auto vars:     Size  Location     Type
 10915 ;;		None
 10916 ;; Return value:  Size  Location     Type
 10917 ;;                  1    wreg      void 
 10918 ;; Registers used:
 10919 ;;		wreg, status,2, status,0, cstack
 10920 ;; Tracked objects:
 10921 ;;		On entry : 0/0
 10922 ;;		On exit  : 0/0
 10923 ;;		Unchanged: 0/0
 10924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10929 ;;Total ram usage:        0 bytes
 10930 ;; Hardware stack levels used:    1
 10931 ;; Hardware stack levels required when called:    2
 10932 ;; This function calls:
 10933 ;;		_buzzerON
 10934 ;;		_reloadTimer0
 10935 ;; This function is called by:
 10936 ;;		_highIsr
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           	psect	text49
 10941  003D16                     __ptext49:
 10942                           	opt callstack 0
 10943  003D16                     _Timer0_isr:
 10944                           	opt callstack 18
 10945                           
 10946                           ;Cooker.c: 91:     INTCONbits.TMR0IF = 0;
 10947                           
 10948                           ;incstack = 0
 10949  003D16  94F2               	bcf	4082,2,c	;volatile
 10950                           
 10951                           ;Cooker.c: 92:     if (sec > 0)
 10952  003D18  BE73               	btfsc	_sec+1,7,c
 10953  003D1A  D009               	goto	i2l5054
 10954  003D1C  5073               	movf	_sec+1,w,c
 10955  003D1E  E103               	bnz	i2u617_40
 10956  003D20  0472               	decf	_sec,w,c
 10957  003D22  A0D8               	btfss	status,0,c
 10958  003D24  D004               	goto	i2l5054
 10959  003D26                     i2u617_40:
 10960                           
 10961                           ;Cooker.c: 93:         sec--;
 10962  003D26  0672               	decf	_sec,f,c
 10963  003D28  A0D8               	btfss	status,0,c
 10964  003D2A  0673               	decf	_sec+1,f,c
 10965  003D2C  D03B               	goto	i2l5076
 10966  003D2E                     i2l5054:
 10967  003D2E  BE75               	btfsc	_min+1,7,c
 10968  003D30  D00D               	goto	i2l5060
 10969  003D32  5075               	movf	_min+1,w,c
 10970  003D34  E103               	bnz	i2u618_40
 10971  003D36  0474               	decf	_min,w,c
 10972  003D38  A0D8               	btfss	status,0,c
 10973  003D3A  D008               	goto	i2l5060
 10974  003D3C                     i2u618_40:
 10975                           
 10976                           ;Cooker.c: 95:         sec = 59;
 10977  003D3C  0E00               	movlw	0
 10978  003D3E  6E73               	movwf	_sec+1,c
 10979  003D40  0E3B               	movlw	59
 10980  003D42  6E72               	movwf	_sec,c
 10981                           
 10982                           ;Cooker.c: 96:         min--;
 10983  003D44  0674               	decf	_min,f,c
 10984  003D46  A0D8               	btfss	status,0,c
 10985  003D48  0675               	decf	_min+1,f,c
 10986                           
 10987                           ;Cooker.c: 97:     } else if (hours > 0) {
 10988  003D4A  D02C               	goto	i2l5076
 10989  003D4C                     i2l5060:
 10990  003D4C  BE77               	btfsc	_hours+1,7,c
 10991  003D4E  D011               	goto	i2l5068
 10992  003D50  5077               	movf	_hours+1,w,c
 10993  003D52  E103               	bnz	i2u619_40
 10994  003D54  0476               	decf	_hours,w,c
 10995  003D56  A0D8               	btfss	status,0,c
 10996  003D58  D00C               	goto	i2l5068
 10997  003D5A                     i2u619_40:
 10998                           
 10999                           ;Cooker.c: 98:         hours--;
 11000  003D5A  0676               	decf	_hours,f,c
 11001  003D5C  A0D8               	btfss	status,0,c
 11002  003D5E  0677               	decf	_hours+1,f,c
 11003                           
 11004                           ;Cooker.c: 99:         min = 59;
 11005  003D60  0E00               	movlw	0
 11006  003D62  6E75               	movwf	_min+1,c
 11007  003D64  0E3B               	movlw	59
 11008  003D66  6E74               	movwf	_min,c
 11009                           
 11010                           ;Cooker.c: 100:         sec = 59;
 11011  003D68  0E00               	movlw	0
 11012  003D6A  6E73               	movwf	_sec+1,c
 11013  003D6C  0E3B               	movlw	59
 11014  003D6E  6E72               	movwf	_sec,c
 11015                           
 11016                           ;Cooker.c: 101:     } else {
 11017  003D70  D019               	goto	i2l5076
 11018  003D72                     i2l5068:
 11019                           
 11020                           ;Cooker.c: 102:         hours = 0;
 11021  003D72  0E00               	movlw	0
 11022  003D74  6E77               	movwf	_hours+1,c
 11023  003D76  0E00               	movlw	0
 11024  003D78  6E76               	movwf	_hours,c
 11025                           
 11026                           ;Cooker.c: 103:         min = 0;
 11027  003D7A  0E00               	movlw	0
 11028  003D7C  6E75               	movwf	_min+1,c
 11029  003D7E  0E00               	movlw	0
 11030  003D80  6E74               	movwf	_min,c
 11031                           
 11032                           ;Cooker.c: 104:         sec = 0;
 11033  003D82  0E00               	movlw	0
 11034  003D84  6E73               	movwf	_sec+1,c
 11035  003D86  0E00               	movlw	0
 11036  003D88  6E72               	movwf	_sec,c
 11037                           
 11038                           ;Cooker.c: 105:         cooker = 0;
 11039  003D8A  0E00               	movlw	0
 11040  003D8C  0101               	movlb	1	; () banked
 11041  003D8E  6FA1               	movwf	(_cooker+1)& (0+255),b
 11042  003D90  0E00               	movlw	0
 11043  003D92  6FA0               	movwf	_cooker& (0+255),b
 11044                           
 11045                           ;Cooker.c: 106:         heater = 0;
 11046  003D94  0E00               	movlw	0
 11047  003D96  6FA3               	movwf	(_heater+1)& (0+255),b
 11048  003D98  0E00               	movlw	0
 11049  003D9A  6FA2               	movwf	_heater& (0+255),b
 11050                           
 11051                           ; BSR set to: 1
 11052                           ;Cooker.c: 107:         PORTCbits.RC5 = 0;
 11053  003D9C  9A82               	bcf	3970,5,c	;volatile
 11054                           
 11055                           ; BSR set to: 1
 11056                           ;Cooker.c: 108:         T0CONbits.TMR0ON = 0;
 11057  003D9E  9ED5               	bcf	4053,7,c	;volatile
 11058                           
 11059                           ; BSR set to: 1
 11060                           ;Cooker.c: 109:         buzzerON();
 11061  003DA0  EC87  F021         	call	_buzzerON	;wreg free
 11062  003DA4                     i2l5076:
 11063                           
 11064                           ;Cooker.c: 111:     reloadTimer0();
 11065  003DA4  EC25  F023         	call	_reloadTimer0	;wreg free
 11066  003DA8  0012               	return		;funcret
 11067  003DAA                     __end_of_Timer0_isr:
 11068                           	opt callstack 0
 11069                           
 11070 ;; *************** function _reloadTimer0 *****************
 11071 ;; Defined at:
 11072 ;;		line 84 in file "Cooker.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;		None
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;		None
 11077 ;; Return value:  Size  Location     Type
 11078 ;;                  1    wreg      void 
 11079 ;; Registers used:
 11080 ;;		wreg, status,2
 11081 ;; Tracked objects:
 11082 ;;		On entry : 0/0
 11083 ;;		On exit  : 0/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11090 ;;Total ram usage:        0 bytes
 11091 ;; Hardware stack levels used:    1
 11092 ;; This function calls:
 11093 ;;		Nothing
 11094 ;; This function is called by:
 11095 ;;		_Timer0_isr
 11096 ;; This function uses a non-reentrant model
 11097 ;;
 11098                           
 11099                           	psect	text50
 11100  00464A                     __ptext50:
 11101                           	opt callstack 0
 11102  00464A                     _reloadTimer0:
 11103                           	opt callstack 19
 11104                           
 11105                           ;Cooker.c: 85:     TMR3H = (unsigned char) ((3036 >> 8) & 0x00FF);
 11106                           
 11107                           ;incstack = 0
 11108  00464A  0E0B               	movlw	11
 11109  00464C  6EB3               	movwf	4019,c	;volatile
 11110                           
 11111                           ;Cooker.c: 86:     TMR3L = (unsigned char) (3036 & 0x00FF);
 11112  00464E  0EDC               	movlw	220
 11113  004650  6EB2               	movwf	4018,c	;volatile
 11114  004652  0012               	return		;funcret
 11115  004654                     __end_of_reloadTimer0:
 11116                           	opt callstack 0
 11117                           
 11118 ;; *************** function _buzzerON *****************
 11119 ;; Defined at:
 11120 ;;		line 74 in file "Cooker.c"
 11121 ;; Parameters:    Size  Location     Type
 11122 ;;		None
 11123 ;; Auto vars:     Size  Location     Type
 11124 ;;  i               2    4[COMRAM] int 
 11125 ;; Return value:  Size  Location     Type
 11126 ;;                  1    wreg      void 
 11127 ;; Registers used:
 11128 ;;		wreg, status,2, status,0, cstack
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/0
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11138 ;;Total ram usage:        2 bytes
 11139 ;; Hardware stack levels used:    1
 11140 ;; Hardware stack levels required when called:    1
 11141 ;; This function calls:
 11142 ;;		i2_delay_ms
 11143 ;; This function is called by:
 11144 ;;		_Timer0_isr
 11145 ;; This function uses a non-reentrant model
 11146 ;;
 11147                           
 11148                           	psect	text51
 11149  00430E                     __ptext51:
 11150                           	opt callstack 0
 11151  00430E                     _buzzerON:
 11152                           	opt callstack 18
 11153                           
 11154                           ;Cooker.c: 76:     for (int i = 0; i < 4; i++) {
 11155                           
 11156                           ;incstack = 0
 11157  00430E  0E00               	movlw	0
 11158  004310  6E06               	movwf	buzzerON@i+1,c
 11159  004312  0E00               	movlw	0
 11160  004314  6E05               	movwf	buzzerON@i,c
 11161  004316                     i2l97:
 11162                           
 11163                           ;Cooker.c: 77:         PORTCbits.RC1 = 1;
 11164  004316  8282               	bsf	3970,1,c	;volatile
 11165                           
 11166                           ;Cooker.c: 78:         delay_ms(1000);
 11167  004318  0E03               	movlw	3
 11168  00431A  6E02               	movwf	i2delay_ms@n+1,c
 11169  00431C  0EE8               	movlw	232
 11170  00431E  6E01               	movwf	i2delay_ms@n,c
 11171  004320  ECBE  F022         	call	i2_delay_ms	;wreg free
 11172                           
 11173                           ;Cooker.c: 79:         PORTCbits.RC1 = 0;
 11174  004324  9282               	bcf	3970,1,c	;volatile
 11175                           
 11176                           ;Cooker.c: 80:         delay_ms(1000);
 11177  004326  0E03               	movlw	3
 11178  004328  6E02               	movwf	i2delay_ms@n+1,c
 11179  00432A  0EE8               	movlw	232
 11180  00432C  6E01               	movwf	i2delay_ms@n,c
 11181  00432E  ECBE  F022         	call	i2_delay_ms	;wreg free
 11182                           
 11183                           ;Cooker.c: 81:     }
 11184  004332  4A05               	infsnz	buzzerON@i,f,c
 11185  004334  2A06               	incf	buzzerON@i+1,f,c
 11186  004336  BE06               	btfsc	buzzerON@i+1,7,c
 11187  004338  D7EE               	goto	i2l97
 11188  00433A  5006               	movf	buzzerON@i+1,w,c
 11189  00433C  E105               	bnz	i2u604_40
 11190  00433E  0E04               	movlw	4
 11191  004340  5C05               	subwf	buzzerON@i,w,c
 11192  004342  B0D8               	btfsc	status,0,c
 11193  004344  0012               	return	
 11194  004346  D7E7               	goto	i2l97
 11195  004348                     i2u604_40:
 11196  004348  0012               	return		;funcret
 11197  00434A                     __end_of_buzzerON:
 11198                           	opt callstack 0
 11199                           
 11200 ;; *************** function i2_delay_ms *****************
 11201 ;; Defined at:
 11202 ;;		line 148 in file "Cooker.c"
 11203 ;; Parameters:    Size  Location     Type
 11204 ;;  n               2    0[COMRAM] unsigned int 
 11205 ;; Auto vars:     Size  Location     Type
 11206 ;;  delay_ms        2    2[COMRAM] int 
 11207 ;; Return value:  Size  Location     Type
 11208 ;;                  1    wreg      void 
 11209 ;; Registers used:
 11210 ;;		wreg, status,2, status,0
 11211 ;; Tracked objects:
 11212 ;;		On entry : 0/0
 11213 ;;		On exit  : 0/0
 11214 ;;		Unchanged: 0/0
 11215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11217 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11219 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11220 ;;Total ram usage:        4 bytes
 11221 ;; Hardware stack levels used:    1
 11222 ;; This function calls:
 11223 ;;		Nothing
 11224 ;; This function is called by:
 11225 ;;		_buzzerON
 11226 ;; This function uses a non-reentrant model
 11227 ;;
 11228                           
 11229                           	psect	text52
 11230  00457C                     __ptext52:
 11231                           	opt callstack 0
 11232  00457C                     i2_delay_ms:
 11233                           	opt callstack 18
 11234                           
 11235                           ;Cooker.c: 149:     int i;;Cooker.c: 150:     for (i = 0; i < n; i++) {
 11236                           
 11237                           ;incstack = 0
 11238  00457C  0E00               	movlw	0
 11239  00457E  6E04               	movwf	i2delay_ms@i+1,c
 11240  004580  0E00               	movlw	0
 11241  004582  6E03               	movwf	i2delay_ms@i,c
 11242  004584  D007               	goto	i2l138
 11243  004586                     i2l4952:
 11244                           
 11245                           ;Cooker.c: 151:         _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
 11246  004586  0EC8               	movlw	200
 11247  004588                     i2u982_47:
 11248  004588  0004               	clrwdt	
 11249  00458A  0004               	clrwdt	
 11250  00458C  2EE8               	decfsz	wreg,f,c
 11251  00458E  D7FC               	bra	i2u982_47
 11252                           
 11253                           ;Cooker.c: 152:     }
 11254  004590  4A03               	infsnz	i2delay_ms@i,f,c
 11255  004592  2A04               	incf	i2delay_ms@i+1,f,c
 11256  004594                     i2l138:
 11257  004594  5001               	movf	i2delay_ms@n,w,c
 11258  004596  5C03               	subwf	i2delay_ms@i,w,c
 11259  004598  5002               	movf	i2delay_ms@n+1,w,c
 11260  00459A  5804               	subwfb	i2delay_ms@i+1,w,c
 11261  00459C  B0D8               	btfsc	status,0,c
 11262  00459E  0012               	return	
 11263  0045A0  D7F2               	goto	i2l4952
 11264  0045A2                     __end_ofi2_delay_ms:
 11265                           	opt callstack 0
 11266                           
 11267 ;; *************** function _EXT_Int2_isr *****************
 11268 ;; Defined at:
 11269 ;;		line 131 in file "Cooker.c"
 11270 ;; Parameters:    Size  Location     Type
 11271 ;;		None
 11272 ;; Auto vars:     Size  Location     Type
 11273 ;;		None
 11274 ;; Return value:  Size  Location     Type
 11275 ;;                  1    wreg      void 
 11276 ;; Registers used:
 11277 ;;		wreg, status,2
 11278 ;; Tracked objects:
 11279 ;;		On entry : 0/0
 11280 ;;		On exit  : 0/0
 11281 ;;		Unchanged: 0/0
 11282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11287 ;;Total ram usage:        0 bytes
 11288 ;; Hardware stack levels used:    1
 11289 ;; This function calls:
 11290 ;;		Nothing
 11291 ;; This function is called by:
 11292 ;;		_highIsr
 11293 ;; This function uses a non-reentrant model
 11294 ;;
 11295                           
 11296                           	psect	text53
 11297  004624                     __ptext53:
 11298                           	opt callstack 0
 11299  004624                     _EXT_Int2_isr:
 11300                           	opt callstack 20
 11301                           
 11302                           ;Cooker.c: 132:     INTCON3bits.INT2IF = 0;
 11303                           
 11304                           ;incstack = 0
 11305  004624  92F0               	bcf	4080,1,c	;volatile
 11306                           
 11307                           ;Cooker.c: 133:     T0CONbits.TMR0ON = 0;
 11308  004626  9ED5               	bcf	4053,7,c	;volatile
 11309                           
 11310                           ;Cooker.c: 134:     cooker = 0;
 11311  004628  0E00               	movlw	0
 11312  00462A  0101               	movlb	1	; () banked
 11313  00462C  6FA1               	movwf	(_cooker+1)& (0+255),b
 11314  00462E  0E00               	movlw	0
 11315  004630  6FA0               	movwf	_cooker& (0+255),b
 11316                           
 11317                           ;Cooker.c: 135:     heater = 0;
 11318  004632  0E00               	movlw	0
 11319  004634  6FA3               	movwf	(_heater+1)& (0+255),b
 11320  004636  0E00               	movlw	0
 11321  004638  6FA2               	movwf	_heater& (0+255),b
 11322                           
 11323                           ; BSR set to: 1
 11324                           ;Cooker.c: 136:     PORTCbits.RC5 = 0;
 11325  00463A  9A82               	bcf	3970,5,c	;volatile
 11326                           
 11327                           ; BSR set to: 1
 11328  00463C  0012               	return		;funcret
 11329  00463E                     __end_of_EXT_Int2_isr:
 11330                           	opt callstack 0
 11331                           
 11332 ;; *************** function _EXT_Int1_isr *****************
 11333 ;; Defined at:
 11334 ;;		line 123 in file "Cooker.c"
 11335 ;; Parameters:    Size  Location     Type
 11336 ;;		None
 11337 ;; Auto vars:     Size  Location     Type
 11338 ;;		None
 11339 ;; Return value:  Size  Location     Type
 11340 ;;                  1    wreg      void 
 11341 ;; Registers used:
 11342 ;;		wreg, status,2, status,0
 11343 ;; Tracked objects:
 11344 ;;		On entry : 0/0
 11345 ;;		On exit  : 0/0
 11346 ;;		Unchanged: 0/0
 11347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11350 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11352 ;;Total ram usage:        2 bytes
 11353 ;; Hardware stack levels used:    1
 11354 ;; This function calls:
 11355 ;;		Nothing
 11356 ;; This function is called by:
 11357 ;;		_highIsr
 11358 ;; This function uses a non-reentrant model
 11359 ;;
 11360                           
 11361                           	psect	text54
 11362  0043EE                     __ptext54:
 11363                           	opt callstack 0
 11364  0043EE                     _EXT_Int1_isr:
 11365                           	opt callstack 20
 11366                           
 11367                           ;Cooker.c: 124:     INTCON3bits.INT1IF = 0;
 11368                           
 11369                           ; BSR set to: 1
 11370                           ;incstack = 0
 11371  0043EE  90F0               	bcf	4080,0,c	;volatile
 11372                           
 11373                           ;Cooker.c: 125:     if((hours+min+sec)>0){
 11374  0043F0  5074               	movf	_min,w,c
 11375  0043F2  2476               	addwf	_hours,w,c
 11376  0043F4  6E01               	movwf	??_EXT_Int1_isr& (0+255),c
 11377  0043F6  5075               	movf	_min+1,w,c
 11378  0043F8  2077               	addwfc	_hours+1,w,c
 11379  0043FA  6E02               	movwf	(??_EXT_Int1_isr+1)& (0+255),c
 11380  0043FC  5072               	movf	_sec,w,c
 11381  0043FE  2601               	addwf	??_EXT_Int1_isr,f,c
 11382  004400  5073               	movf	_sec+1,w,c
 11383  004402  2202               	addwfc	??_EXT_Int1_isr+1,f,c
 11384  004404  BE02               	btfsc	??_EXT_Int1_isr+1,7,c
 11385  004406  0012               	return	
 11386  004408  5002               	movf	??_EXT_Int1_isr+1,w,c
 11387  00440A  E103               	bnz	i2u621_40
 11388  00440C  0401               	decf	??_EXT_Int1_isr,w,c
 11389  00440E  A0D8               	btfss	status,0,c
 11390  004410  0012               	return	
 11391  004412                     i2u621_40:
 11392                           
 11393                           ;Cooker.c: 126:         T0CONbits.TMR0ON = 1;
 11394  004412  8ED5               	bsf	4053,7,c	;volatile
 11395                           
 11396                           ;Cooker.c: 127:         cooker = 1;
 11397  004414  0E00               	movlw	0
 11398  004416  0101               	movlb	1	; () banked
 11399  004418  6FA1               	movwf	(_cooker+1)& (0+255),b
 11400  00441A  0E01               	movlw	1
 11401  00441C  6FA0               	movwf	_cooker& (0+255),b
 11402  00441E  0012               	return		;funcret
 11403  004420                     __end_of_EXT_Int1_isr:
 11404                           	opt callstack 0
 11405                           
 11406 ;; *************** function _EXT_Int0_isr *****************
 11407 ;; Defined at:
 11408 ;;		line 114 in file "Cooker.c"
 11409 ;; Parameters:    Size  Location     Type
 11410 ;;		None
 11411 ;; Auto vars:     Size  Location     Type
 11412 ;;		None
 11413 ;; Return value:  Size  Location     Type
 11414 ;;                  1    wreg      void 
 11415 ;; Registers used:
 11416 ;;		wreg, status,2, status,0
 11417 ;; Tracked objects:
 11418 ;;		On entry : 0/0
 11419 ;;		On exit  : 0/0
 11420 ;;		Unchanged: 0/0
 11421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11426 ;;Total ram usage:        0 bytes
 11427 ;; Hardware stack levels used:    1
 11428 ;; This function calls:
 11429 ;;		Nothing
 11430 ;; This function is called by:
 11431 ;;		_highIsr
 11432 ;; This function uses a non-reentrant model
 11433 ;;
 11434                           
 11435                           	psect	text55
 11436  004606                     __ptext55:
 11437                           	opt callstack 0
 11438  004606                     _EXT_Int0_isr:
 11439                           	opt callstack 20
 11440                           
 11441                           ;Cooker.c: 115:     INTCONbits.INT0IF = 0;
 11442                           
 11443                           ;incstack = 0
 11444  004606  92F2               	bcf	4082,1,c	;volatile
 11445                           
 11446                           ;Cooker.c: 116:     if (mode == 4) {
 11447  004608  0E04               	movlw	4
 11448  00460A  0101               	movlb	1	; () banked
 11449  00460C  199E               	xorwf	_mode& (0+255),w,b
 11450  00460E  119F               	iorwf	(_mode+1)& (0+255),w,b
 11451  004610  A4D8               	btfss	status,2,c
 11452  004612  D005               	goto	i2l5084
 11453                           
 11454                           ; BSR set to: 1
 11455                           ;Cooker.c: 117:         mode = 0;
 11456  004614  0E00               	movlw	0
 11457  004616  6F9F               	movwf	(_mode+1)& (0+255),b
 11458  004618  0E00               	movlw	0
 11459  00461A  6F9E               	movwf	_mode& (0+255),b
 11460                           
 11461                           ;Cooker.c: 118:     } else {
 11462  00461C  0012               	return	
 11463  00461E                     i2l5084:
 11464                           
 11465                           ; BSR set to: 1
 11466                           ;Cooker.c: 119:         mode++;
 11467  00461E  4B9E               	infsnz	_mode& (0+255),f,b
 11468  004620  2B9F               	incf	(_mode+1)& (0+255),f,b
 11469                           
 11470                           ; BSR set to: 1
 11471  004622  0012               	return		;funcret
 11472  004624                     __end_of_EXT_Int0_isr:
 11473                           	opt callstack 0
 11474                           
 11475                           	psect	rparam
 11476  0000                     
 11477                           	psect	temp
 11478  000078                     btemp:
 11479                           	opt callstack 0
 11480  000078                     	ds	1
 11481  0000                     int$flags	set	btemp
 11482  0000                     wtemp8	set	btemp+1
 11483  0000                     ttemp5	set	btemp+1
 11484  0000                     ttemp6	set	btemp+4
 11485  0000                     ttemp7	set	btemp+8
 11486                           tosu	equ	0xFFF
 11487                           tosh	equ	0xFFE
 11488                           tosl	equ	0xFFD
 11489                           stkptr	equ	0xFFC
 11490                           pclatu	equ	0xFFB
 11491                           pclath	equ	0xFFA
 11492                           pcl	equ	0xFF9
 11493                           tblptru	equ	0xFF8
 11494                           tblptrh	equ	0xFF7
 11495                           tblptrl	equ	0xFF6
 11496                           tablat	equ	0xFF5
 11497                           prodh	equ	0xFF4
 11498                           prodl	equ	0xFF3
 11499                           indf0	equ	0xFEF
 11500                           postinc0	equ	0xFEE
 11501                           postdec0	equ	0xFED
 11502                           preinc0	equ	0xFEC
 11503                           plusw0	equ	0xFEB
 11504                           fsr0h	equ	0xFEA
 11505                           fsr0l	equ	0xFE9
 11506                           wreg	equ	0xFE8
 11507                           indf1	equ	0xFE7
 11508                           postinc1	equ	0xFE6
 11509                           postdec1	equ	0xFE5
 11510                           preinc1	equ	0xFE4
 11511                           plusw1	equ	0xFE3
 11512                           fsr1h	equ	0xFE2
 11513                           fsr1l	equ	0xFE1
 11514                           bsr	equ	0xFE0
 11515                           indf2	equ	0xFDF
 11516                           postinc2	equ	0xFDE
 11517                           postdec2	equ	0xFDD
 11518                           preinc2	equ	0xFDC
 11519                           plusw2	equ	0xFDB
 11520                           fsr2h	equ	0xFDA
 11521                           fsr2l	equ	0xFD9
 11522                           status	equ	0xFD8


Data Sizes:
    Strings     149
    Constant    0
    Data        6
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    113     119
    BANK0           128    106     122
    BANK1           256    150     250
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_13(CODE[4]), STR_12(CODE[12]), STR_11(CODE[12]), STR_10(CODE[21]), 
		 -> STR_9(CODE[7]), STR_8(CODE[7]), STR_7(CODE[7]), STR_6(CODE[7]), 
		 -> STR_5(CODE[11]), STR_4(CODE[12]), STR_3(CODE[14]), STR_2(CODE[16]), 
		 -> STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 64
		 -> display@LCD(BANK1[64]), display@CK(BANK1[6]), display@HT(BANK1[6]), display@LCDP(BANK1[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 64
		 -> display@LCD(BANK1[64]), display@CK(BANK1[6]), display@HT(BANK1[6]), display@LCDP(BANK1[64]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    S1466_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> display@LCD(BANK1[64]), display@CK(BANK1[6]), display@HT(BANK1[6]), display@LCDP(BANK1[64]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 64
		 -> display@LCD(BANK1[64]), display@CK(BANK1[6]), display@HT(BANK1[6]), display@LCDP(BANK1[64]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_13(CODE[4]), STR_12(CODE[12]), STR_11(CODE[12]), STR_10(CODE[21]), 
		 -> STR_9(CODE[7]), STR_8(CODE[7]), STR_7(CODE[7]), STR_6(CODE[7]), 
		 -> STR_5(CODE[11]), STR_4(CODE[12]), STR_3(CODE[14]), STR_2(CODE[16]), 
		 -> STR_1(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_13(CODE[4]), STR_12(CODE[12]), STR_11(CODE[12]), STR_10(CODE[21]), 
		 -> STR_9(CODE[7]), STR_8(CODE[7]), STR_7(CODE[7]), STR_6(CODE[7]), 
		 -> STR_5(CODE[11]), STR_4(CODE[12]), STR_3(CODE[14]), STR_2(CODE[16]), 
		 -> STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_13(CODE[4]), STR_12(CODE[12]), STR_11(CODE[12]), STR_10(CODE[21]), 
		 -> STR_9(CODE[7]), STR_8(CODE[7]), STR_7(CODE[7]), STR_6(CODE[7]), 
		 -> STR_5(CODE[11]), STR_4(CODE[12]), STR_3(CODE[14]), STR_2(CODE[16]), 
		 -> STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_puts@s	PTR unsigned char  size(2) Largest target is 64
		 -> display@LCD(BANK1[64]), display@CK(BANK1[6]), display@HT(BANK1[6]), display@LCDP(BANK1[64]), 


Critical Paths under _main in COMRAM

    _read_adc_voltage->___fldiv
    ___xxtofl->___wmul
    _lcd_init->_lcd_send_byte
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->_read_adc_voltage
    ___flge->___flmul
    ___fldiv->___xxtofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _lcd_send_nibble->_delay_cycles

Critical Paths under _highIsr in COMRAM

    _Timer0_isr->_buzzerON
    _buzzerON->i2_delay_ms

Critical Paths under _main in BANK0

    _main->_display
    _display->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_display
    _display->_sprintf

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   69074
                            ___fladd
                             ___flge
                            ___flmul
                           _delay_ms
                            _display
                    _init_adc_no_lib
                           _lcd_init
                      _lcd_send_byte
                   _read_adc_voltage
                         _setupPorts
 ---------------------------------------------------------------------------------
 (1) _setupPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_adc_voltage                                    11     7      4    4273
                                             51 COMRAM    11     7      4
                            ___fldiv
                             ___wmul
                           ___xxtofl
                _read_adc_raw_no_lib
 ---------------------------------------------------------------------------------
 (2) _read_adc_raw_no_lib                                  7     5      2      45
                                              6 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     534
                                             12 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    1442
                                             16 COMRAM     1     1      0
                           _delay_ms
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (1) _init_adc_no_lib                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                            142   142      0   53690
                                            104 BANK0      2     2      0
                                             10 BANK1    140   140      0
                         _lcd_gotoxy
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10   48139
                                             94 BANK0     10     0     10
                                              0 BANK1     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   45463
                                            111 COMRAM     2     2      0
                                             88 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           50    44      6   44900
                                             56 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                              6 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   30605
                                             99 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             12 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              6 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             51 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              6 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                              6 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4367
                                             87 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3650
                                              6 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              6 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3593
                                             62 COMRAM    25    17      8
                   _read_adc_voltage (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1166
                                             87 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              6 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2903
                                             26 COMRAM    25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6493
                                             33 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4227
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             24 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              6 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              6 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1975
                                             13 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                              6 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     371
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     692
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     0      2    3370
                                             24 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             3     3      0    2793
                                             21 COMRAM     3     3      0
                           _delay_ms
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_gotoxy                                           5     4      1    1489
                                             16 COMRAM     5     4      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_send_byte                                        2     1      1     810
                                             14 COMRAM     2     1      1
                       _delay_cycles
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (2) _lcd_send_nibble                                      2     2      0      68
                                             12 COMRAM     2     2      0
                       _delay_cycles
 ---------------------------------------------------------------------------------
 (3) _delay_cycles                                         6     6      0      46
                                              6 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             4     2      2     450
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _highIsr                                             0     0      0     144
                       _EXT_Int0_isr
                       _EXT_Int1_isr
                       _EXT_Int2_isr
                         _Timer0_isr
 ---------------------------------------------------------------------------------
 (11) _Timer0_isr                                          0     0      0     144
                           _buzzerON
                       _reloadTimer0
 ---------------------------------------------------------------------------------
 (12) _reloadTimer0                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _buzzerON                                            2     2      0     144
                                              4 COMRAM     2     2      0
                         i2_delay_ms
 ---------------------------------------------------------------------------------
 (13) i2_delay_ms                                          4     2      2      98
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _EXT_Int2_isr                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EXT_Int1_isr                                        2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _EXT_Int0_isr                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fladd
   ___flge
     ___fladd (ARG)
     ___flmul (ARG)
       _read_adc_voltage (ARG)
         ___fldiv
           ___wmul (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___wmul
         ___xxtofl
           ___wmul (ARG)
         _read_adc_raw_no_lib
   ___flmul
     _read_adc_voltage (ARG)
       ___fldiv
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___wmul
       ___xxtofl
         ___wmul (ARG)
       _read_adc_raw_no_lib
   _delay_ms
   _display
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _lcd_send_nibble
           _delay_cycles
     _lcd_puts
       _lcd_putc
         _delay_ms
         _lcd_gotoxy
           _lcd_send_byte
             _delay_cycles
             _lcd_send_nibble
               _delay_cycles
         _lcd_send_byte
           _delay_cycles
           _lcd_send_nibble
             _delay_cycles
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
             ___fleq
             ___flge
               ___fladd (ARG)
               ___flmul (ARG)
                 _read_adc_voltage (ARG)
                   ___fldiv
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                   ___wmul
                   ___xxtofl
                     ___wmul (ARG)
                   _read_adc_raw_no_lib
             ___flmul
               _read_adc_voltage (ARG)
                 ___fldiv
                   ___wmul (ARG)
                   ___xxtofl (ARG)
                     ___wmul (ARG)
                 ___wmul
                 ___xxtofl
                   ___wmul (ARG)
                 _read_adc_raw_no_lib
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 _read_adc_voltage (ARG)
                   ___fldiv
                     ___wmul (ARG)
                     ___xxtofl (ARG)
                       ___wmul (ARG)
                   ___wmul
                   ___xxtofl
                     ___wmul (ARG)
                   _read_adc_raw_no_lib
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___wmul (ARG)
                 ___xxtofl (ARG)
                   ___wmul (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
   _init_adc_no_lib
   _lcd_init
     _delay_ms
     _lcd_send_byte
       _delay_cycles
       _lcd_send_nibble
         _delay_cycles
     _lcd_send_nibble
       _delay_cycles
   _lcd_send_byte
     _delay_cycles
     _lcd_send_nibble
       _delay_cycles
   _read_adc_voltage
     ___fldiv
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___wmul (ARG)
     _read_adc_raw_no_lib
   _setupPorts

 _highIsr (ROOT)
   _EXT_Int0_isr
   _EXT_Int1_isr
   _EXT_Int2_isr
   _Timer0_isr
     _buzzerON
       i2_delay_ms
     _reloadTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     96      FA       7       97.7%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     6A      7A       5       95.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     71      77       1       94.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1EB      34        0.0%
DATA                 0      0     1EB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 08 15:49:03 2022

           ?_read_adc_voltage 0034                             _H 01F8                  ___fldiv@aexp 0033  
                ___fldiv@bexp 0032                  ___fldiv@sign 002B            ??_read_adc_voltage 0038  
                          _SP 019A                ?_lcd_send_byte 000F                  ___awdiv@sign 000C  
         ___wmul@multiplicand 0009                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$XT 000000                   __CFG_LVP$ON 000000                   __CFG_WDT$ON 000000  
                         l301 42AC                           l302 42AA                           l138 456E  
                         l163 1A7E                           l172 1BD0                           l164 1CB6  
                         l350 3CAC                           l239 44BA                           l361 2E30  
                         l417 13D4                           l363 2E38                           l443 16B6  
                         l189 1EAC                           l784 3978                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000                           _abs 43BC                           _lcd 000F83  
                         _pad 3C7C                           _min 0074                           _sec 0072  
                ___awmod@sign 000C     read_adc_voltage@raw_value 003D                           wreg 000FE8  
                ___flmul@aexp 004C                  ___flmul@bexp 0051                    i2_delay_ms 457C  
                ___flmul@sign 004B                  ___flmul@temp 0056                  ___flmul@prod 0052  
                 lcd_gotoxy@x 0014                   lcd_gotoxy@y 0011                  ___fltol@exp1 0010  
                 display@LCDP 010A                          l1103 2CA6                          l1114 2D14  
                        l1115 2D10                          ?_abs 0019                          l1205 43E4  
                        l1133 2556                          l1150 27F4                          l1142 276E  
                        l1143 276A                          l1064 2A3C                          l1048 296A  
                        l1073 2AA2                          l1049 2948                          l1074 2A9E  
                        l1236 37B6                          l1181 35FC                          l1174 357E  
                        l1248 3358                          l1328 4242                          l5020 35E4  
                        l5014 35AC                          l5016 35B2                          l5008 358E  
                        l5026 3622                          l5018 35BE                          l6012 2BA0  
                        l5044 366E                          l5028 362E                          l6110 2DB4  
                        l6102 2DA6                          l6030 2BEE                          l6024 2BD8  
                        l6016 2BA4                          l6200 2716                          l7000 301C  
                        l6130 2502                          l7002 3032                          l7010 3074  
                        l3468 44C0                          l6108 2DB2                          l6132 2506  
                        l7004 3048                          l7012 30A6                          l6310 3F5A  
                        l6062 2CA4                          l6038 2C06                          l6230 27D0  
                        l6206 2734                          l6150 2546                          l6134 2516  
                        l7022 3100                          l7006 305E                          ?_pad 0017  
                        l6056 2C7E                          l6048 2C56                          l7024 3116  
                        l7016 30C8                          l5184 41C8                          l6330 3FA0  
                        l6322 3F88                          l6314 3F68                          l6306 3F4E  
                        l6074 2CDA                          l6242 2812                          l6226 27B2  
                        l5610 2854                          l6402 3AE8                          l7018 30DE  
                        l7202 1C64                          l6316 3F70                          l6068 2CBC  
                        l6148 2542                          l6420 3B28                          l6412 3B00  
                        l6262 3E48                          l6326 3F92                          l6094 2D58  
                        l6342 3E12                          l6158 2574                          l5614 2858  
                        l6414 3B0C                          l6406 3AF8                          l5198 41E0  
                        l7214 1C9E                          l7206 1C70                          l6432 4306  
                        l5712 29B0                          l5704 298E                          l6520 1110  
                        l7240 1D1C                          l7232 1CF8                          l4930 3FD2  
                        l5810 3CB6                          l6442 2E12                          l6274 3E6E  
                        l6290 3EA0                          l6098 2D7C                          l6346 3E30  
                        l6338 3DDE                          l6362 3962                          l6354 3918  
                        l5714 29B4                          l5722 29C6                          l5634 289C  
                        l6610 142C                          l6602 13E4                          l7322 1F98  
                        l7226 1CDA                          l7242 1D34                          l7218 1CA8  
                        l7170 1BAA                          l7154 1B46                          l4780 4560  
                        l4932 3FDE                          l5804 3C96                          l6460 2E62  
                        l6276 3E76                          l6268 3E58                          l5740 2A60  
                        l5732 2A2C                          l6612 1430                          l6540 11AA  
                        l6508 10E2                          l7316 1F40                          l7308 1EDE  
                        l7148 1B28                          l4790 4170                          l4926 3FAE  
                        l5582 43A4                          l5814 3CCE                          l6470 2F5A  
                        l6294 3EAE                          l6286 3E96                          l6358 394C  
                        l5750 2A76                          l5646 28C0                          l5638 28A0  
                        l6702 17A0                          l6710 17C4                          l6622 144E  
                        l6542 11B4                          l7270 1DDA                          l7262 1DA2  
                        l7254 1D78                          l7190 1C0C                          l7166 1B88  
                        l7158 1B52                          l4792 4174                          l4928 3FC6  
                        l4936 3FEA                          l6800 3696                          l5920 3472  
                        l5568 3BF4                          l5808 3CA4                          l6456 2E52  
                        l6368 39B0                          l6376 449C                          l6632 1482  
                        l6528 1126                          l7248 1D56                          l7264 1DBA  
                        l4786 4168                          l5922 3486                          l5914 344C  
                        l5578 438E                          l5586 44E6                          l5818 3CFC  
                        l6490 2FC2                          l5690 295A                          l6386 3A9E  
                        l5834 3A2C                          l5850 40CE                          l6730 189E  
                        l6570 12A4                          l6538 1192                          l6546 11DA  
                        l7290 1E5A                          l7186 1C00                          l7178 1BD0  
                        l4788 416C                          l4796 417A                          l6820 3722  
                        l5940 351E                          l5932 34E2                          l5908 3424  
                        l5588 44EA                          l5756 2A80                          l5676 28FC  
                        l5844 3A76                          l6660 1656                          l6628 1472  
                        l6580 1368                          l6556 1246                          l6564 1260  
                        l7284 1E38                          l7292 1E72                          l7276 1DF8  
                        l4798 41A2                          l4990 45B6                          l6814 36EC  
                        l6494 2FDA                          l5790 2B18                          l5838 3A36  
                        l6670 16D0                          l6718 185C                          l6654 1618  
                        l6638 14AC                          l6646 15A2                          l6574 12DE  
                        l7278 1E10                          l7198 1C44                          l6824 3756  
                        l6816 36F4                          l6808 36DC                          l5936 34F8  
                        l5960 382A                          l5952 37EC                          l5784 2B0E  
                        l5776 2AE8                          l5688 2956                          l6592 13BC  
                        l6576 132C                          l4986 45A4                          l6818 36FA  
                        l5962 383E                          l5882 33B8                          l6746 18EA  
                        l6682 1752                          l6914 2238                          l7298 1E92  
                        l5972 389C                          l5956 3810                          l5788 2B16  
                        l5868 32BA                          l6748 18F4                          l6668 16AE  
                        l6596 13DE                          l6844 3B64                          l6932 2346  
                        l6924 22EA                          l5886 33E6                          l5878 337A  
                        l6758 194A                          l6694 1780                          l6846 3B72  
                        l5976 38C2                          l5968 3886                          l5992 2B60  
                        l6784 19D6                          l6768 1976                          l6952 2440  
                        l6936 2370                          l6962 2488                          l6874 203C  
                        l5996 2B64                          l6876 205A                          l6980 407C  
                        l6798 3692                          l6958 247C                          l6894 2132  
                        l6878 2068                          l6982 40A2                          l6896 2150  
                        l6968 24A2                          l6898 215E                          l6998 3006  
                        STR_1 1018                          STR_2 1016                          STR_3 1026  
                        STR_4 1034                          STR_5 1058                          STR_6 1078  
                        STR_7 106A                          STR_8 1071                          STR_9 1063  
                        _IPR1 000F9F                          _IPR2 000FA2                          _PIE1 000F9D  
                        _PIE2 000FA0                          u6130 3638                          u7100 2A98  
                        u8010 27C0                          u8020 27DE                          u7300 3A6E  
                        u7310 3A70                          u7240 43CA                          u7160 2AF4  
                        u7080 2A84                          u7320 4108                          _PIR1 000F9E  
                        u8130 3F74                          u7250 39F2                          _PIR2 000FA1  
                        u9020 36D8                          u8300 3B12                          u7420 3338  
                        u7340 4228                          u7405 32D2                          u8070 3E7A  
                        u7406 32D8                          u7350 422A                          u7511 3452  
                        u7255 39E8                          u7407 32E6                          u7327 40FE  
                        u9040 3786                          u8400 2E4C                          u7440 3398  
                        u6800 444A                          u9120 3BB8                          u7425 332E  
                        u8330 4302                          u9050 3788                          u7530 348A  
                        u8410 2F68                          u8250 3A8C                          u7370 3288  
                        u9210 2198                          u6740 3BEC                          u8340 2DE4  
                        u8180 3E2C                          u6900 291E                          u8260 3ABC  
                        u7380 32A8                          u9300 23F4                          u9220 219A  
                        u7445 338E                          u7470 4478                          u8430 2F8A  
                        u8350 2DE6                          u6910 292E                          u8510 1100  
                        u9310 23F6                          u9230 21A6                          u8431 2F88  
                        u7295 3A50                          u7375 327E                          u7480 447A  
                        u6760 3C34                          u8440 2F98                          u6920 2930  
                        u9160 20A2                          u9400 1B22                          i2l97 4316  
                        u8265 3AB2                          u8450 2F9E                          u9170 20A4  
                        u9410 1B40                          u4995 4354                          u4996 4356  
                        u8380 2E26                          u7820 2D66                          u8540 1168  
                        u9180 20B0                          u7590 3842                          u8470 2FAC  
                        u7830 2D8A                          u6950 2972                          u6790 4448  
                        u8630 1390                          u8550 116A                          u9270 226C  
                        u9510 1C26                          u9430 1B6A                          u7920 2562  
                        u9520 1C36                          u9440 1B7A                          u7930 26D8  
                        u8730 144A                          u9610 1CD2                          u9530 1C60  
                        u9450 1BA4                          u7780 2D0A                          u8900 1880  
                        u8660 13CA                          u8580 121C                          u9700 1DE8  
                        u9620 1CE8                          u8590 121E                          u9630 1D06  
                        u9390 1B12                          u7935 26CE                          u9720 1E2A  
                        u9560 1C8A                          u9480 1BEA                          u7970 2764  
                        u8690 13FC                          u9730 1E46                          u9650 1D4C  
                        u9570 1C9A                          u9490 1BFA                          u9660 1D64  
                        u9750 1E8A                          u9670 1D86                          u9807 437C  
                        u8960 1960                          u9817 4562                          u9690 1DD2  
                        u8980 19C0                          u8990 19C2              ?_lcd_send_nibble 0001  
                        _Temp 0196                          abs@a 0019                          _dbuf 01A4  
                        _atoi 3680                          _main 1A14                          _dtoa 2DBC  
                        _mode 019E                          _prec 00F6                          _nout 00F2  
                        pad@i 001E                          pad@p 001B                          fsr1h 000FE2  
                        fsr2h 000FDA                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          pad@w 0020                          fsr2l 000FD9  
                        btemp 0078                 ___fpclassifyf 39B4                          prodh 000FF4  
                        prodl 000FF3                          start 000E                 __CFG_IESO$OFF 000000  
             ___fldiv@new_exp 002C                  _tolower$1538 0013                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000                         ??_abs 001B                         ??_pad 001D  
        __end_of_delay_cycles 44DC                 ___fltol@sign1 000F               __end_of___aodiv 3540  
                       ?_atoi 000E               __end_of___fladd 2B34                         ?_main 0001  
                       ?_dtoa 0022               __end_of___aomod 38E4               __end_of___fldiv 2DBC  
             __end_of___awdiv 3EB8               __end_of___flneg 44AE                         STR_10 1001  
                       STR_11 104C                         STR_12 1040                         STR_13 108F  
                       STR_22 1093                         STR_14 107F                         STR_15 1087  
                       STR_24 1093                         STR_18 1083                         STR_19 108B  
             __end_of___awmod 3FAA               __end_of___flmul 2828               __end_of___flsub 4292  
             __end_of___fltol 3B3A                         _T0CON 000FD5               ___awdiv@divisor 0009  
                       i2l130 451C                         i2l131 452C                         i2l132 4526  
                       i2l128 4512                         i2l138 4594               ___awdiv@counter 000B  
                vfpfcnvrt@fmt 00BA                         _TMR3H 000FB3                         _TMR3L 000FB2  
                       _PORTB 000F81                         _PORTC 000F82       read_adc_voltage@channel 003C  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
                       _TRISD 000F95                         _TRISE 000F96                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
             __end_of_highIsr 4530                 __CFG_WRTB$OFF 000000               __end_of_display 3242  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _flags 00F8                         _fputc 3BDC                         _fputs 4384  
             __end_of_isdigit 4480                         _hours 0076               _init_adc_no_lib 463E  
                       atoi@n 001B                         pad@fp 0017                         atoi@s 000E  
                       _width 00F4                         _putch 465A                         dtoa@d 0024  
                       dtoa@i 0044                         dtoa@n 003C                         dtoa@p 0036  
                       dtoa@s 003A                         dtoa@w 0038               __end_of_isspace 430E  
             __end_of_isupper 4450                         tablat 000FF5                         ttemp5 0079  
                       ttemp6 007C                         ttemp7 0080                         status 000FD8  
     read_adc_voltage@voltage 0038                         wtemp8 0079               __end_of_sprintf 4068  
              ?___fpclassifyf 0007               __end_of_tolower 424C               __end_of_strncmp 3BDC  
                 i2delay_ms@i 0003                   i2delay_ms@n 0001                __CFG_PBADEN$ON 000000  
             __initialization 4112                  __end_of_atoi 37C0                  __end_of_main 1F9E  
                __end_of_dtoa 3004               ??_lcd_send_byte 0010                        ??_atoi 0010  
                      ??_main 0072                        ??_dtoa 002C                 __activetblptr 000002  
                 ?i2_delay_ms 0001                        _ADCON0 000FC2                        _ADCON1 000FC1  
                      _ADCON2 000FC0                        ?_fputc 0007                        ?_fputs 0010  
                      _ADRESH 000FC4                        _ADRESL 000FC3              ___awdiv@dividend 0007  
                      ?_putch 0001                        i2l5060 3D4C                        i2l5054 3D2E  
                      i2l5084 461E                        i2l5068 3D72                        i2l5076 3DA4  
                      _INTCON 000FF2                        i2l4952 4586              __end_of___xxtofl 3680  
            __end_of_delay_ms 457C                __CFG_XINST$OFF 000000                    _Timer0_isr 3D16  
                vfprintf@cfmt 0070              __end_of_lcd_init 4200                        ___flge 38E4  
            __end_of_lcd_putc 400E                        ___fleq 3DAA              __end_of_lcd_puts 45C6  
                   ??___aodiv 0017                     ??___fladd 000F                     ??___aomod 0017  
                      ___wmul 4530                     ??___fldiv 0023                     ??___awdiv 000B  
                   ??___flneg 000B                __CFG_STVREN$ON 000000                     ??___awmod 000B  
                   ??___flmul 0047                     ??___flsub 0060                     ??___fltol 000B  
                      _efgtoa 1098                        _heater 01A2                        _cooker 01A0  
                      _floorf 3242                        clear_0 4138                        clear_1 4144  
            ___awdiv@quotient 000D               ___awmod@divisor 0009              __end_of_buzzerON 434A  
             ___awmod@counter 000B                        pad@buf 0019                     ??_highIsr 0007  
                      dtoa@fp 0022                        _strcpy 40BE                        _strlen 44DC  
                   ??_display 00E8       __end_of_init_adc_no_lib 464A                        fputc@c 0007  
                      fputs@c 0014                        fputs@i 0015                        fputs@s 0010  
                   ??_isdigit 0009               ___fpclassifyf@e 000F               ___fpclassifyf@u 0011  
             ___fpclassifyf@x 0007                  __mediumconst 0000                     ??_isspace 0009  
                      tblptrh 000FF7                     ??_isupper 0009                        tblptrl 000FF6  
                      tblptru 000FF8                        putch@c 0001              __end_of_vfprintf 40BE  
                   ??_sprintf 0072                     ??_tolower 000F                     ??_strncmp 000D  
                  ___flge@ff1 0058                    ___flge@ff2 005C               ??___fpclassifyf 000B  
                ___xxtofl@arg 0017                  ___xxtofl@exp 0016                  ___xxtofl@val 000D  
                  ___fleq@ff1 0007                    ___fleq@ff2 000B                    __accesstop 0080  
     __end_of__initialization 4156                    ___flneg@f1 0007                 ___rparam_used 000001  
                  ___fltol@f1 0007                __pcstackCOMRAM 0001           __size_ofi2_delay_ms 0026  
       __size_of_delay_cycles 002E                  __pidataBANK1 4654                 ?_EXT_Int0_isr 0001  
               ?_EXT_Int1_isr 0001                 ?_EXT_Int2_isr 0001                 __end_of_fputc 3C7C  
               __end_of_fputs 43BC                 __end_of_putch 465C     __size_of_read_adc_voltage 0082  
           lcd_gotoxy@address 0015                       ??_fputc 000B                       ??_fputs 0014  
                     ??_putch 0007                    __pbssBANK0 00EA                    __pbssBANK1 0196  
 __end_of_read_adc_raw_no_lib 42D0                  _delay_cycles 44AE                 ?_reloadTimer0 0001  
                  _efgtoa$923 0088                    _efgtoa$918 0084                    _efgtoa$927 008A  
                  _efgtoa$919 0086                    _efgtoa$928 008C                    _efgtoa$929 008E  
                 ?_Timer0_isr 0001                lcd_send_byte@n 000F                       ?___flge 0058  
                     ?___fleq 0007                ??_EXT_Int0_isr 0001                ??_EXT_Int1_isr 0001  
              ??_EXT_Int2_isr 0001                       ?___wmul 0007                       ?_efgtoa 0064  
            lcd_send_nibble@n 000E                       ?_floorf 0034                       ?_strcpy 0007  
                     ?_strlen 0007              ?_init_adc_no_lib 0001                       _INTCON2 000FF1  
                     _INTCON3 000FF0                     ?___xxtofl 000D                     ?_delay_ms 0007  
          __size_of_vfpfcnvrt 0538                    _lcd_gotoxy 4164                     ?_lcd_init 0001  
                   ?_lcd_putc 0001                     ?_lcd_puts 0019                     ?_buzzerON 0001  
              ??_reloadTimer0 0001                       __Hparam 0000                       __Lparam 0000  
    __size_of_lcd_send_nibble 0022               __size_of___flge 00D0               __size_of___fleq 008A  
                     ___aodiv 33F8                       ___fladd 2828                       ___aomod 37C0  
                     ___fldiv 2B34                       ___awdiv 3E34                       ___flneg 4480  
                     ___awmod 3F3A                       ___flmul 24D6                       ___flsub 424C  
                     ___fltol 3A80               __size_of___wmul 0026                     ?_vfprintf 00D8  
                __psmallconst 1000               __size_of_efgtoa 097C               __size_of_floorf 01B6  
                     __pcinit 4112                       __ramtop 1000                       __ptext0 1A14  
                     __ptext1 45E8                       __ptext2 3EB8                       __ptext3 4292  
                     __ptext4 3540                       __ptext5 41B4                       __ptext6 463E  
                     __ptext7 3004                       __ptext8 400E                       __ptext9 4068  
                     _highIsr 0008                       _display 3004                     _T0CONbits 000FD5  
             __size_of_strcpy 0054               __size_of_strlen 002A                  __size_of_abs 0032  
                __size_of_pad 009A                       _isdigit 4450                    ??___xxtofl 0011  
            ___awmod@dividend 0007                       _isspace 42D0                  ??i2_delay_ms 0003  
                  ??_delay_ms 0009                       _isupper 4420                       efgtoa@c 006A  
                     efgtoa@d 0098                       efgtoa@e 00B0                       efgtoa@f 0066  
                     efgtoa@g 00AC                       efgtoa@h 00A2                       efgtoa@i 00AA  
                     efgtoa@l 00A6                       efgtoa@m 0094                       efgtoa@n 00B2  
                     efgtoa@p 009C                       efgtoa@t 0090                       efgtoa@u 00B4  
                     efgtoa@w 009F                       atoi@neg 0014           __size_of_Timer0_isr 0094  
                     _sprintf 400E                       _tolower 4200                    ??_lcd_init 0011  
                     _strncmp 3B3A                __pintcode_body 4506                    ??_lcd_putc 0016  
                  ??_lcd_puts 001B          end_of_initialization 4156                       floorf@e 0042  
                     floorf@m 003E                       floorf@u 0044                       floorf@x 0034  
                     fputc@fp 0009                 __Lmediumconst 0000                       int_func 4506  
                     fputs@fp 0012          lcd_send_byte@cm_data 0010                    ??_buzzerON 0005  
           __end_of_vfpfcnvrt 24D6                    efgtoa@mode 00A1                    efgtoa@sign 009A  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE            __end_ofi2_delay_ms 45A2  
                  ??_vfprintf 0070         __end_of_lcd_send_byte 4384                       strcpy@d 000F  
                     strlen@a 0009                       strcpy@s 000D                       strlen@s 0007  
                   _PORTBbits 000F81                     _PORTCbits 000F82                     _PORTEbits 000F84  
                  _setupPorts 45E8                   ___fladd@grs 0016                 ___xxtofl@sign 0015  
            _read_adc_voltage 3EB8                   ?_lcd_gotoxy 0011                   ___fldiv@grs 002E  
                 ___fldiv@rem 0027          __end_of_EXT_Int0_isr 4624          __end_of_EXT_Int1_isr 4420  
             _LCD_INIT_STRING 01F4          __end_of_EXT_Int2_isr 463E                   ___flmul@grs 004D  
                  display@LCD 014A                __end_of___flge 39B4                __end_of___fleq 3E34  
                 vfpfcnvrt@ap 00BC                   vfpfcnvrt@ct 00D4                   vfpfcnvrt@fp 00B8  
                 vfpfcnvrt@ll 00C2                __end_of___wmul 4556                __end_of_efgtoa 1A14  
               delay_cycles@n 000A                 delay_cycles@x 000B             ??_lcd_send_nibble 000D  
              __end_of_floorf 33F8                    floorf@F524 00EA          __end_of_reloadTimer0 4654  
              __end_of_strcpy 4112                __end_of_strlen 4506           start_initialization 4112  
                 __end_of_abs 43EE                   __end_of_pad 3D16         __end_of___fpclassifyf 3A80  
                ??_Timer0_isr 0007                   vfprintf@fmt 00DA                      ??___flge 0060  
                    ??___fleq 000F           __size_of_lcd_gotoxy 0050                      ??___wmul 000B  
                    ??_efgtoa 006B                   __pdataBANK1 01F4  read_adc_raw_no_lib@raw_value 000B  
                    ??_floorf 0038              __CFG_LPT1OSC$OFF 000000                      ??_strcpy 000B  
                    ??_strlen 0009                   ?_setupPorts 0001                     ___fladd@a 000B  
                   ___fladd@b 0007                     ___fldiv@a 001F                     ___fldiv@b 001B  
                   ___flmul@a 0043                     ___flmul@b 003F                   __pbssCOMRAM 0072  
                   ___flsub@a 005C                     ___flsub@b 0058                 __pcstackBANK0 0080  
               __pcstackBANK1 0100              ___aodiv@dividend 0007             __size_of___xxtofl 0140  
          __end_of_Timer0_isr 3DAA             __size_of_delay_ms 0026             __size_of_lcd_init 004C  
           __size_of_lcd_putc 0064             __size_of_lcd_puts 0024                     _atoi$1422 0016  
                   _atoi$1423 001A                     _atoi$1424 0018             __size_of_buzzerON 003C  
           __CFG_CCP2MX$PORTC 000000                     __pintcode 0008  __size_of_read_adc_raw_no_lib 003E  
                    ?___aodiv 0007                      ?___fladd 0007                      ?___aomod 0007  
                    ?___fldiv 001B                      ?___awdiv 0007              ___aodiv@quotient 0019  
                    ?___flneg 0007                      ?___awmod 0007                      ?___flmul 003F  
                    ?___flsub 0058                      ?___fltol 0007                      ?_highIsr 0001  
           __size_of_vfprintf 0056                      ?_display 0001                   __smallconst 1000  
       __size_of_EXT_Int0_isr 001E                      ?_isdigit 0007         __size_of_EXT_Int1_isr 0032  
       __size_of_EXT_Int2_isr 001A                      ?_isspace 0007                      ?_isupper 0007  
                    ?_sprintf 00DE                      ?_tolower 000D                __size_of_fputc 00A0  
              __size_of_fputs 0038                      ?_strncmp 0007                __size_of_putch 0002  
    __size_of_init_adc_no_lib 000C                ___wmul@product 000B                     delay_ms@i 0009  
                   delay_ms@n 0007           __size_of_setupPorts 001E                      i2u604_40 4348  
    __end_of_read_adc_voltage 3F3A                      i2u621_40 4412                      i2u617_40 3D26  
                    i2u618_40 3D3C                      i2u619_40 3D5A                      i2u982_47 4588  
                    _RCONbits 000FD0              __CFG_WDTPS$32768 000000    read_adc_raw_no_lib@channel 000D  
                _EXT_Int0_isr 4606                  _EXT_Int1_isr 43EE                  _EXT_Int2_isr 4624  
       __size_of_reloadTimer0 000A                     _vfpfcnvrt 1F9E                    _ADCON0bits 000FC2  
           ___wmul@multiplier 0007                     lcd_init@i 0011                     display@CK 0190  
                   display@HT 018A                     lcd_putc@c 0018                     lcd_puts@s 0019  
                ??_lcd_gotoxy 0012                  _isspace$1453 000D                    vfpfcnvrt@c 00D7  
                  vfpfcnvrt@f 00D0                   _INTCON2bits 000FF1                   _INTCON3bits 000FF0  
                   copy_data0 4126               _lcd_send_nibble 45C6                  _reloadTimer0 464A  
                    __Hrparam 0000                    vfprintf@ap 00DC                      __Lrparam 0000  
                  vfprintf@fp 00D8            __CFG_BOREN$SBORDIS 000000            __end_of_lcd_gotoxy 41B4  
            __size_of___aodiv 0148              __size_of___fladd 030C              __size_of___aomod 0124  
            __size_of___fldiv 0288              __size_of___awdiv 0084              __size_of___flneg 002E  
            __size_of___awmod 0070              __size_of___flmul 0352              __size_of___flsub 0046  
            __size_of___fltol 00BA                    ?_vfpfcnvrt 00B8                     buzzerON@i 0005  
             ___aodiv@divisor 000F               ___aodiv@counter 0017            ___fpclassifyf@F463 00EE  
            __size_of_highIsr 4528              __size_of_display 023E                    sprintf@fmt 00E0  
                    ___xxtofl 3540              __size_of_isdigit 0030                      _delay_ms 4556  
                    _dtoa$894 0034              __size_of_isspace 003E                      __ptext10 1F9E  
                    __ptext11 3B3A                      __ptext20 2828                      __ptext12 1098  
                    __ptext21 4480                      __ptext13 4200                      __ptext30 44DC  
                    __ptext22 24D6                      __ptext14 4420                      __ptext31 4384  
                    __ptext23 38E4                      __ptext15 40BE                      __ptext40 4530  
                    __ptext32 3BDC                      __ptext24 3DAA                      __ptext16 3242  
                    __ptext41 45A2                      __ptext33 465A                      __ptext25 2B34  
                    __ptext17 39B4                      __ptext50 464A                      __ptext42 3FAA  
                    __ptext34 43BC                      __ptext26 3F3A                      __ptext18 3A80  
                    __ptext51 430E                      __ptext43 4164                      __ptext35 37C0  
                    __ptext27 3E34                      __ptext19 424C                      __ptext52 457C  
                    __ptext44 434A                      __ptext36 33F8                      __ptext28 2DBC  
                    __ptext53 4624                      __ptext45 45C6                      __ptext37 3680  
                    __ptext29 3C7C                      __ptext54 43EE                      __ptext46 44AE  
                    __ptext38 42D0                      __ptext55 4606                      __ptext47 4556  
                    __ptext39 4450                      __ptext49 3D16              __size_of_isupper 0030  
                    _lcd_init 41B4                      _lcd_putc 3FAA                      _lcd_puts 45A2  
            __size_of_sprintf 005A              __size_of_tolower 004C                    strcpy@dest 0007  
            __size_of_strncmp 00A2        __size_of_lcd_send_byte 003A                 ?_delay_cycles 0001  
               __size_of_atoi 0140                 __size_of_main 058A                 __size_of_dtoa 0248  
                    _buzzerON 430E             ??_init_adc_no_lib 0007                      efgtoa@fp 0064  
                    efgtoa@ne 0096                      efgtoa@pp 0092                      efgtoa@ou 0080  
                    int$flags 0078                      _vfprintf 4068                  ??_setupPorts 0007  
            ___aomod@dividend 0007                    _INTCONbits 000FF2                      isdigit@c 0007  
         _read_adc_raw_no_lib 4292                      intlevel2 0000                     sprintf@ap 0102  
     __end_of_lcd_send_nibble 45E8                ??_delay_cycles 0007                      isspace@c 0007  
                   strcpy@src 0009                      isupper@c 0007                     strncmp@_l 0007  
                   strncmp@_r 0009            __end_of_setupPorts 4606          ?_read_adc_raw_no_lib 0007  
                 efgtoa@nmode 009E               ___aomod@divisor 000F                   ??_vfpfcnvrt 00BE  
             ___aomod@counter 0017                 _vfpfcnvrt$943 00CA                 _vfpfcnvrt$944 00CC  
               _vfpfcnvrt$949 00CE                 _lcd_send_byte 434A                      sprintf@f 0104  
                    tolower@c 000D                      sprintf@s 00DE        __size_of___fpclassifyf 00CC  
                    strncmp@l 000E                      strncmp@n 000B                      strncmp@r 0010  
               ___fladd@signs 0013                  ___aodiv@sign 0018                  ___fladd@aexp 0014  
                ___fladd@bexp 0015                  ___aomod@sign 0018         ??_read_adc_raw_no_lib 0009  
