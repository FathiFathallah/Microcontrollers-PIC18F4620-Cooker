Version 4.0 HI-TECH Software Intermediate Code
"44 ./lcd_x8.h
[; ;./lcd_x8.h: 44: struct lcd_pin_map {
[s S272 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :4 `uc 1 ]
[n S272 lcd_pin_map un1 rs rw enable data ]
"366 D:\MPLAB\pic\include\pic18f4620.h
[; ;D:\MPLAB\pic\include\pic18f4620.h: 366:     struct {
[s S21 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S21 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"376
[; ;D:\MPLAB\pic\include\pic18f4620.h: 376:     struct {
[s S22 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S22 . T1OSO T1OSI CCP1 SCK SDI SDO TX RX ]
"386
[; ;D:\MPLAB\pic\include\pic18f4620.h: 386:     struct {
[s S23 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S23 . T13CKI CCP2 . SCL SDA . CK DT ]
"396
[; ;D:\MPLAB\pic\include\pic18f4620.h: 396:     struct {
[s S24 :1 `uc 1 ]
[n S24 . T1CKI ]
"399
[; ;D:\MPLAB\pic\include\pic18f4620.h: 399:     struct {
[s S25 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S25 . . PA2 PA1 ]
"365
[; ;D:\MPLAB\pic\include\pic18f4620.h: 365: typedef union {
[u S20 `S21 1 `S22 1 `S23 1 `S24 1 `S25 1 ]
[n S20 . . . . . . ]
"405
[; ;D:\MPLAB\pic\include\pic18f4620.h: 405: extern volatile PORTCbits_t PORTCbits __attribute__((address(0xF82)));
[v _PORTCbits `VS20 ~T0 @X0 0 e@3970 ]
"61 ./lcd_x8.h
[; ;./lcd_x8.h: 61: void delay_ms(unsigned int n);
[v _delay_ms `(v ~T0 @X0 0 ef1`ui ]
"3655 D:\MPLAB\pic\include\pic18f4620.h
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3655: extern volatile unsigned char TMR3H __attribute__((address(0xFB3)));
[v _TMR3H `Vuc ~T0 @X0 0 e@4019 ]
"3648
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3648: extern volatile unsigned char TMR3L __attribute__((address(0xFB2)));
[v _TMR3L `Vuc ~T0 @X0 0 e@4018 ]
"6380
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6380:     struct {
[s S263 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S263 . RBIF INT0IF TMR0IF RBIE INT0IE TMR0IE PEIE_GIEL GIE_GIEH ]
"6390
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6390:     struct {
[s S264 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S264 . . INT0F T0IF . INT0E T0IE PEIE GIE ]
"6400
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6400:     struct {
[s S265 :6 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S265 . . GIEL GIEH ]
"6379
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6379: typedef union {
[u S262 `S263 1 `S264 1 `S265 1 ]
[n S262 . . . . ]
"6406
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6406: extern volatile INTCONbits_t INTCONbits __attribute__((address(0xFF2)));
[v _INTCONbits `VS262 ~T0 @X0 0 e@4082 ]
"5862
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5862:     struct {
[s S250 :3 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S250 . T0PS PSA T0SE T0CS T08BIT TMR0ON ]
"5870
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5870:     struct {
[s S251 :1 `uc 1 :1 `uc 1 :1 `uc 1 :3 `uc 1 :1 `uc 1 ]
[n S251 . T0PS0 T0PS1 T0PS2 . T016BIT ]
"5861
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5861: typedef union {
[u S249 `S250 1 `S251 1 ]
[n S249 . . . ]
"5878
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5878: extern volatile T0CONbits_t T0CONbits __attribute__((address(0xFD5)));
[v _T0CONbits `VS249 ~T0 @X0 0 e@4053 ]
"6218
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6218:     struct {
[s S256 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S256 . INT1IF INT2IF . INT1IE INT2IE . INT1IP INT2IP ]
"6228
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6228:     struct {
[s S257 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S257 . INT1F INT2F . INT1E INT2E . INT1P INT2P ]
"6217
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6217: typedef union {
[u S255 `S256 1 `S257 1 ]
[n S255 . . . ]
"6239
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6239: extern volatile INTCON3bits_t INTCON3bits __attribute__((address(0xFF0)));
[v _INTCON3bits `VS255 ~T0 @X0 0 e@4080 ]
[t ~ __interrupt . k ]
[t T39 __interrupt high_priority ]
[v F2427 `(v ~T0 @X0 1 tf1`ul ]
"185 D:\MPLAB\pic\include\pic18.h
[v __delaywdt `JF2427 ~T0 @X0 0 e ]
[p i __delaywdt ]
"4529 D:\MPLAB\pic\include\pic18f4620.h
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4529: extern volatile unsigned char ADCON0 __attribute__((address(0xFC2)));
[v _ADCON0 `Vuc ~T0 @X0 0 e@4034 ]
"4444
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4444: extern volatile unsigned char ADCON1 __attribute__((address(0xFC1)));
[v _ADCON1 `Vuc ~T0 @X0 0 e@4033 ]
"1602
[; ;D:\MPLAB\pic\include\pic18f4620.h: 1602: extern volatile unsigned char TRISB __attribute__((address(0xF93)));
[v _TRISB `Vuc ~T0 @X0 0 e@3987 ]
"1824
[; ;D:\MPLAB\pic\include\pic18f4620.h: 1824: extern volatile unsigned char TRISC __attribute__((address(0xF94)));
[v _TRISC `Vuc ~T0 @X0 0 e@3988 ]
"360
[; ;D:\MPLAB\pic\include\pic18f4620.h: 360: extern volatile unsigned char PORTC __attribute__((address(0xF82)));
[v _PORTC `Vuc ~T0 @X0 0 e@3970 ]
"1380
[; ;D:\MPLAB\pic\include\pic18f4620.h: 1380: extern volatile unsigned char TRISA __attribute__((address(0xF92)));
[v _TRISA `Vuc ~T0 @X0 0 e@3986 ]
"2046
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2046: extern volatile unsigned char TRISD __attribute__((address(0xF95)));
[v _TRISD `Vuc ~T0 @X0 0 e@3989 ]
"2268
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2268: extern volatile unsigned char TRISE __attribute__((address(0xF96)));
[v _TRISE `Vuc ~T0 @X0 0 e@3990 ]
"115 D:\MPLAB\pic\include\c99\stdio.h
[v _sprintf `(i ~T0 @X0 0 e1v`*uc`*Cuc ]
"65 ./lcd_x8.h
[; ;./lcd_x8.h: 65: void lcd_gotoxy(unsigned char x, unsigned char y);
[v _lcd_gotoxy `(v ~T0 @X0 0 ef2`uc`uc ]
"67
[; ;./lcd_x8.h: 67: void lcd_puts(char *s);
[v _lcd_puts `(v ~T0 @X0 0 ef1`*uc ]
[p mainexit ]
"37 ./my_adc.h
[; ;./my_adc.h: 37: void init_adc_no_lib(void);
[v _init_adc_no_lib `(v ~T0 @X0 0 ef ]
"5856 D:\MPLAB\pic\include\pic18f4620.h
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5856: extern volatile unsigned char T0CON __attribute__((address(0xFD5)));
[v _T0CON `Vuc ~T0 @X0 0 e@4053 ]
"5354
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5354:     struct {
[s S226 :1 `uc 1 ]
[n S226 . NOT_BOR ]
"5357
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5357:     struct {
[s S227 :1 `uc 1 :1 `uc 1 ]
[n S227 . . NOT_POR ]
"5361
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5361:     struct {
[s S228 :2 `uc 1 :1 `uc 1 ]
[n S228 . . NOT_PD ]
"5365
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5365:     struct {
[s S229 :3 `uc 1 :1 `uc 1 ]
[n S229 . . NOT_TO ]
"5369
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5369:     struct {
[s S230 :4 `uc 1 :1 `uc 1 ]
[n S230 . . NOT_RI ]
"5373
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5373:     struct {
[s S231 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S231 . nBOR nPOR nPD nTO nRI . SBOREN IPEN ]
"5383
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5383:     struct {
[s S232 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S232 . BOR POR PD TO RI ]
"5353
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5353: typedef union {
[u S225 `S226 1 `S227 1 `S228 1 `S229 1 `S230 1 `S231 1 `S232 1 ]
[n S225 . . . . . . . . ]
"5391
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5391: extern volatile RCONbits_t RCONbits __attribute__((address(0xFD0)));
[v _RCONbits `VS225 ~T0 @X0 0 e@4048 ]
"6374
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6374: extern volatile unsigned char INTCON __attribute__((address(0xFF2)));
[v _INTCON `Vuc ~T0 @X0 0 e@4082 ]
"6304
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6304: extern volatile unsigned char INTCON2 __attribute__((address(0xFF1)));
[v _INTCON2 `Vuc ~T0 @X0 0 e@4081 ]
"6310
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6310:     struct {
[s S259 :7 `uc 1 :1 `uc 1 ]
[n S259 . . NOT_RBPU ]
"6314
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6314:     struct {
[s S260 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S260 . RBIP . TMR0IP . INTEDG2 INTEDG1 INTEDG0 nRBPU ]
"6324
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6324:     struct {
[s S261 :7 `uc 1 :1 `uc 1 ]
[n S261 . . RBPU ]
"6309
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6309: typedef union {
[u S258 `S259 1 `S260 1 `S261 1 ]
[n S258 . . . . ]
"6329
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6329: extern volatile INTCON2bits_t INTCON2bits __attribute__((address(0xFF1)));
[v _INTCON2bits `VS258 ~T0 @X0 0 e@4081 ]
"6212
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6212: extern volatile unsigned char INTCON3 __attribute__((address(0xFF0)));
[v _INTCON3 `Vuc ~T0 @X0 0 e@4080 ]
"2497
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2497: extern volatile unsigned char PIE1 __attribute__((address(0xF9D)));
[v _PIE1 `Vuc ~T0 @X0 0 e@3997 ]
"2574
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2574: extern volatile unsigned char PIR1 __attribute__((address(0xF9E)));
[v _PIR1 `Vuc ~T0 @X0 0 e@3998 ]
"2651
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2651: extern volatile unsigned char IPR1 __attribute__((address(0xF9F)));
[v _IPR1 `Vuc ~T0 @X0 0 e@3999 ]
"2728
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2728: extern volatile unsigned char PIE2 __attribute__((address(0xFA0)));
[v _PIE2 `Vuc ~T0 @X0 0 e@4000 ]
"2794
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2794: extern volatile unsigned char PIR2 __attribute__((address(0xFA1)));
[v _PIR2 `Vuc ~T0 @X0 0 e@4001 ]
"2860
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2860: extern volatile unsigned char IPR2 __attribute__((address(0xFA2)));
[v _IPR2 `Vuc ~T0 @X0 0 e@4002 ]
"189
[; ;D:\MPLAB\pic\include\pic18f4620.h: 189: extern volatile unsigned char PORTB __attribute__((address(0xF81)));
[v _PORTB `Vuc ~T0 @X0 0 e@3969 ]
"64 ./lcd_x8.h
[; ;./lcd_x8.h: 64: void lcd_init(void);
[v _lcd_init `(v ~T0 @X0 0 ef ]
"63
[; ;./lcd_x8.h: 63: void lcd_send_byte(unsigned char cm_data, unsigned char n);
[v _lcd_send_byte `(v ~T0 @X0 0 ef2`uc`uc ]
"39 ./my_adc.h
[; ;./my_adc.h: 39: float read_adc_voltage(unsigned char channel);
[v _read_adc_voltage `(f ~T0 @X0 0 ef1`uc ]
"195 D:\MPLAB\pic\include\pic18f4620.h
[; ;D:\MPLAB\pic\include\pic18f4620.h: 195:     struct {
[s S16 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S16 . RB0 RB1 RB2 RB3 RB4 RB5 RB6 RB7 ]
"205
[; ;D:\MPLAB\pic\include\pic18f4620.h: 205:     struct {
[s S17 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S17 . INT0 INT1 INT2 CCP2 KBI0 KBI1 KBI2 KBI3 ]
"215
[; ;D:\MPLAB\pic\include\pic18f4620.h: 215:     struct {
[s S18 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S18 . AN12 AN10 AN8 AN9 AN11 PGM PGC PGD ]
"225
[; ;D:\MPLAB\pic\include\pic18f4620.h: 225:     struct {
[s S19 :3 `uc 1 :1 `uc 1 ]
[n S19 . . CCP2_PA2 ]
"194
[; ;D:\MPLAB\pic\include\pic18f4620.h: 194: typedef union {
[u S15 `S16 1 `S17 1 `S18 1 `S19 1 ]
[n S15 . . . . . ]
"230
[; ;D:\MPLAB\pic\include\pic18f4620.h: 230: extern volatile PORTBbits_t PORTBbits __attribute__((address(0xF81)));
[v _PORTBbits `VS15 ~T0 @X0 0 e@3969 ]
"3 Cooker.c
[p x OSC = XT ]
"4
[p x FCMEN = OFF ]
"5
[p x IESO = OFF ]
"8
[p x PWRT = OFF ]
"9
[p x BOREN = SBORDIS ]
"10
[p x BORV = 3 ]
"13
[p x WDT = ON ]
"14
[p x WDTPS = 32768 ]
"17
[p x CCP2MX = PORTC ]
"18
[p x PBADEN = ON ]
"19
[p x LPT1OSC = OFF ]
"20
[p x MCLRE = ON ]
"23
[p x STVREN = ON ]
"24
[p x LVP = ON ]
"25
[p x XINST = OFF ]
"28
[p x CP0 = OFF ]
"29
[p x CP1 = OFF ]
"30
[p x CP2 = OFF ]
"31
[p x CP3 = OFF ]
"34
[p x CPB = OFF ]
"35
[p x CPD = OFF ]
"38
[p x WRT0 = OFF ]
"39
[p x WRT1 = OFF ]
"40
[p x WRT2 = OFF ]
"41
[p x WRT3 = OFF ]
"44
[p x WRTC = OFF ]
"45
[p x WRTB = OFF ]
"46
[p x WRTD = OFF ]
"49
[p x EBTR0 = OFF ]
"50
[p x EBTR1 = OFF ]
"51
[p x EBTR2 = OFF ]
"52
[p x EBTR3 = OFF ]
"55
[p x EBTRB = OFF ]
"54 D:\MPLAB\pic\include\pic18f4620.h
[; ;D:\MPLAB\pic\include\pic18f4620.h: 54: __asm("PORTA equ 0F80h");
[; <" PORTA equ 0F80h ;# ">
"191
[; ;D:\MPLAB\pic\include\pic18f4620.h: 191: __asm("PORTB equ 0F81h");
[; <" PORTB equ 0F81h ;# ">
"362
[; ;D:\MPLAB\pic\include\pic18f4620.h: 362: __asm("PORTC equ 0F82h");
[; <" PORTC equ 0F82h ;# ">
"537
[; ;D:\MPLAB\pic\include\pic18f4620.h: 537: __asm("PORTD equ 0F83h");
[; <" PORTD equ 0F83h ;# ">
"679
[; ;D:\MPLAB\pic\include\pic18f4620.h: 679: __asm("PORTE equ 0F84h");
[; <" PORTE equ 0F84h ;# ">
"882
[; ;D:\MPLAB\pic\include\pic18f4620.h: 882: __asm("LATA equ 0F89h");
[; <" LATA equ 0F89h ;# ">
"994
[; ;D:\MPLAB\pic\include\pic18f4620.h: 994: __asm("LATB equ 0F8Ah");
[; <" LATB equ 0F8Ah ;# ">
"1106
[; ;D:\MPLAB\pic\include\pic18f4620.h: 1106: __asm("LATC equ 0F8Bh");
[; <" LATC equ 0F8Bh ;# ">
"1218
[; ;D:\MPLAB\pic\include\pic18f4620.h: 1218: __asm("LATD equ 0F8Ch");
[; <" LATD equ 0F8Ch ;# ">
"1330
[; ;D:\MPLAB\pic\include\pic18f4620.h: 1330: __asm("LATE equ 0F8Dh");
[; <" LATE equ 0F8Dh ;# ">
"1382
[; ;D:\MPLAB\pic\include\pic18f4620.h: 1382: __asm("TRISA equ 0F92h");
[; <" TRISA equ 0F92h ;# ">
"1387
[; ;D:\MPLAB\pic\include\pic18f4620.h: 1387: __asm("DDRA equ 0F92h");
[; <" DDRA equ 0F92h ;# ">
"1604
[; ;D:\MPLAB\pic\include\pic18f4620.h: 1604: __asm("TRISB equ 0F93h");
[; <" TRISB equ 0F93h ;# ">
"1609
[; ;D:\MPLAB\pic\include\pic18f4620.h: 1609: __asm("DDRB equ 0F93h");
[; <" DDRB equ 0F93h ;# ">
"1826
[; ;D:\MPLAB\pic\include\pic18f4620.h: 1826: __asm("TRISC equ 0F94h");
[; <" TRISC equ 0F94h ;# ">
"1831
[; ;D:\MPLAB\pic\include\pic18f4620.h: 1831: __asm("DDRC equ 0F94h");
[; <" DDRC equ 0F94h ;# ">
"2048
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2048: __asm("TRISD equ 0F95h");
[; <" TRISD equ 0F95h ;# ">
"2053
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2053: __asm("DDRD equ 0F95h");
[; <" DDRD equ 0F95h ;# ">
"2270
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2270: __asm("TRISE equ 0F96h");
[; <" TRISE equ 0F96h ;# ">
"2275
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2275: __asm("DDRE equ 0F96h");
[; <" DDRE equ 0F96h ;# ">
"2434
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2434: __asm("OSCTUNE equ 0F9Bh");
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2499: __asm("PIE1 equ 0F9Dh");
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2576: __asm("PIR1 equ 0F9Eh");
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2653: __asm("IPR1 equ 0F9Fh");
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2730: __asm("PIE2 equ 0FA0h");
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2796: __asm("PIR2 equ 0FA1h");
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2862: __asm("IPR2 equ 0FA2h");
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2928: __asm("EECON1 equ 0FA6h");
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; ;D:\MPLAB\pic\include\pic18f4620.h: 2994: __asm("EECON2 equ 0FA7h");
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3001: __asm("EEDATA equ 0FA8h");
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3008: __asm("EEADR equ 0FA9h");
[; <" EEADR equ 0FA9h ;# ">
"3015
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3015: __asm("EEADRH equ 0FAAh");
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3022: __asm("RCSTA equ 0FABh");
[; <" RCSTA equ 0FABh ;# ">
"3027
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3027: __asm("RCSTA1 equ 0FABh");
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3232: __asm("TXSTA equ 0FACh");
[; <" TXSTA equ 0FACh ;# ">
"3237
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3237: __asm("TXSTA1 equ 0FACh");
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3488: __asm("TXREG equ 0FADh");
[; <" TXREG equ 0FADh ;# ">
"3493
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3493: __asm("TXREG1 equ 0FADh");
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3500: __asm("RCREG equ 0FAEh");
[; <" RCREG equ 0FAEh ;# ">
"3505
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3505: __asm("RCREG1 equ 0FAEh");
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3512: __asm("SPBRG equ 0FAFh");
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3517: __asm("SPBRG1 equ 0FAFh");
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3524: __asm("SPBRGH equ 0FB0h");
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3531: __asm("T3CON equ 0FB1h");
[; <" T3CON equ 0FB1h ;# ">
"3643
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3643: __asm("TMR3 equ 0FB2h");
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3650: __asm("TMR3L equ 0FB2h");
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3657: __asm("TMR3H equ 0FB3h");
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3664: __asm("CMCON equ 0FB4h");
[; <" CMCON equ 0FB4h ;# ">
"3754
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3754: __asm("CVRCON equ 0FB5h");
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3833: __asm("ECCP1AS equ 0FB6h");
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3915: __asm("PWM1CON equ 0FB7h");
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3985: __asm("BAUDCON equ 0FB8h");
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; ;D:\MPLAB\pic\include\pic18f4620.h: 3990: __asm("BAUDCTL equ 0FB8h");
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4157: __asm("CCP2CON equ 0FBAh");
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4236: __asm("CCPR2 equ 0FBBh");
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4243: __asm("CCPR2L equ 0FBBh");
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4250: __asm("CCPR2H equ 0FBCh");
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4257: __asm("CCP1CON equ 0FBDh");
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4354: __asm("CCPR1 equ 0FBEh");
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4361: __asm("CCPR1L equ 0FBEh");
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4368: __asm("CCPR1H equ 0FBFh");
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4375: __asm("ADCON2 equ 0FC0h");
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4446: __asm("ADCON1 equ 0FC1h");
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4531: __asm("ADCON0 equ 0FC2h");
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4650: __asm("ADRES equ 0FC3h");
[; <" ADRES equ 0FC3h ;# ">
"4657
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4657: __asm("ADRESL equ 0FC3h");
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4664: __asm("ADRESH equ 0FC4h");
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4671: __asm("SSPCON2 equ 0FC5h");
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4733: __asm("SSPCON1 equ 0FC6h");
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; ;D:\MPLAB\pic\include\pic18f4620.h: 4803: __asm("SSPSTAT equ 0FC7h");
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5024: __asm("SSPADD equ 0FC8h");
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5031: __asm("SSPBUF equ 0FC9h");
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5038: __asm("T2CON equ 0FCAh");
[; <" T2CON equ 0FCAh ;# ">
"5109
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5109: __asm("PR2 equ 0FCBh");
[; <" PR2 equ 0FCBh ;# ">
"5114
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5114: __asm("MEMCON equ 0FCBh");
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5219: __asm("TMR2 equ 0FCCh");
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5226: __asm("T1CON equ 0FCDh");
[; <" T1CON equ 0FCDh ;# ">
"5329
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5329: __asm("TMR1 equ 0FCEh");
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5336: __asm("TMR1L equ 0FCEh");
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5343: __asm("TMR1H equ 0FCFh");
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5350: __asm("RCON equ 0FD0h");
[; <" RCON equ 0FD0h ;# ">
"5483
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5483: __asm("WDTCON equ 0FD1h");
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5511: __asm("HLVDCON equ 0FD2h");
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5516: __asm("LVDCON equ 0FD2h");
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5781: __asm("OSCCON equ 0FD3h");
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5858: __asm("T0CON equ 0FD5h");
[; <" T0CON equ 0FD5h ;# ">
"5935
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5935: __asm("TMR0 equ 0FD6h");
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5942: __asm("TMR0L equ 0FD6h");
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5949: __asm("TMR0H equ 0FD7h");
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; ;D:\MPLAB\pic\include\pic18f4620.h: 5956: __asm("STATUS equ 0FD8h");
[; <" STATUS equ 0FD8h ;# ">
"6027
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6027: __asm("FSR2 equ 0FD9h");
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6034: __asm("FSR2L equ 0FD9h");
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6041: __asm("FSR2H equ 0FDAh");
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6048: __asm("PLUSW2 equ 0FDBh");
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6055: __asm("PREINC2 equ 0FDCh");
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6062: __asm("POSTDEC2 equ 0FDDh");
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6069: __asm("POSTINC2 equ 0FDEh");
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6076: __asm("INDF2 equ 0FDFh");
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6083: __asm("BSR equ 0FE0h");
[; <" BSR equ 0FE0h ;# ">
"6090
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6090: __asm("FSR1 equ 0FE1h");
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6097: __asm("FSR1L equ 0FE1h");
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6104: __asm("FSR1H equ 0FE2h");
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6111: __asm("PLUSW1 equ 0FE3h");
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6118: __asm("PREINC1 equ 0FE4h");
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6125: __asm("POSTDEC1 equ 0FE5h");
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6132: __asm("POSTINC1 equ 0FE6h");
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6139: __asm("INDF1 equ 0FE7h");
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6146: __asm("WREG equ 0FE8h");
[; <" WREG equ 0FE8h ;# ">
"6158
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6158: __asm("FSR0 equ 0FE9h");
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6165: __asm("FSR0L equ 0FE9h");
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6172: __asm("FSR0H equ 0FEAh");
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6179: __asm("PLUSW0 equ 0FEBh");
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6186: __asm("PREINC0 equ 0FECh");
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6193: __asm("POSTDEC0 equ 0FEDh");
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6200: __asm("POSTINC0 equ 0FEEh");
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6207: __asm("INDF0 equ 0FEFh");
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6214: __asm("INTCON3 equ 0FF0h");
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6306: __asm("INTCON2 equ 0FF1h");
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6376: __asm("INTCON equ 0FF2h");
[; <" INTCON equ 0FF2h ;# ">
"6493
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6493: __asm("PROD equ 0FF3h");
[; <" PROD equ 0FF3h ;# ">
"6500
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6500: __asm("PRODL equ 0FF3h");
[; <" PRODL equ 0FF3h ;# ">
"6507
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6507: __asm("PRODH equ 0FF4h");
[; <" PRODH equ 0FF4h ;# ">
"6514
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6514: __asm("TABLAT equ 0FF5h");
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6523: __asm("TBLPTR equ 0FF6h");
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6530: __asm("TBLPTRL equ 0FF6h");
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6537: __asm("TBLPTRH equ 0FF7h");
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6544: __asm("TBLPTRU equ 0FF8h");
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6553: __asm("PCLAT equ 0FF9h");
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6560: __asm("PC equ 0FF9h");
[; <" PC equ 0FF9h ;# ">
"6567
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6567: __asm("PCL equ 0FF9h");
[; <" PCL equ 0FF9h ;# ">
"6574
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6574: __asm("PCLATH equ 0FFAh");
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6581: __asm("PCLATU equ 0FFBh");
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6588: __asm("STKPTR equ 0FFCh");
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6694: __asm("TOS equ 0FFDh");
[; <" TOS equ 0FFDh ;# ">
"6701
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6701: __asm("TOSL equ 0FFDh");
[; <" TOSL equ 0FFDh ;# ">
"6708
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6708: __asm("TOSH equ 0FFEh");
[; <" TOSH equ 0FFEh ;# ">
"6715
[; ;D:\MPLAB\pic\include\pic18f4620.h: 6715: __asm("TOSU equ 0FFFh");
[; <" TOSU equ 0FFFh ;# ">
"53 ./lcd_x8.h
[; ;./lcd_x8.h: 53: } lcd __attribute__((address(0xF83)));
[v _lcd `S272 ~T0 @X0 1 e@3971 ]
"64 Cooker.c
[; ;Cooker.c: 64: int hours = 0;
[v _hours `i ~T0 @X0 1 e ]
[i _hours
-> 0 `i
]
"65
[; ;Cooker.c: 65: int min = 0;
[v _min `i ~T0 @X0 1 e ]
[i _min
-> 0 `i
]
"66
[; ;Cooker.c: 66: int sec = 0;
[v _sec `i ~T0 @X0 1 e ]
[i _sec
-> 0 `i
]
"67
[; ;Cooker.c: 67: float SP;
[v _SP `f ~T0 @X0 1 e ]
"68
[; ;Cooker.c: 68: float Temp;
[v _Temp `f ~T0 @X0 1 e ]
"69
[; ;Cooker.c: 69: int H = 1;
[v _H `i ~T0 @X0 1 e ]
[i _H
-> 1 `i
]
"70
[; ;Cooker.c: 70: int heater = 0;
[v _heater `i ~T0 @X0 1 e ]
[i _heater
-> 0 `i
]
"71
[; ;Cooker.c: 71: int cooker = 0;
[v _cooker `i ~T0 @X0 1 e ]
[i _cooker
-> 0 `i
]
"72
[; ;Cooker.c: 72: int mode = 0;
[v _mode `i ~T0 @X0 1 e ]
[i _mode
-> 0 `i
]
"74
[; ;Cooker.c: 74: void buzzerON(void) {
[v _buzzerON `(v ~T0 @X0 1 ef ]
{
[e :U _buzzerON ]
[f ]
"76
[; ;Cooker.c: 76:     for (int i = 0; i < 4; i++) {
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ < _i -> 4 `i 274  ]
[e $U 275  ]
[e :U 274 ]
{
"77
[; ;Cooker.c: 77:         PORTCbits.RC1 = 1;
[e = . . _PORTCbits 0 1 -> -> 1 `i `uc ]
"78
[; ;Cooker.c: 78:         delay_ms(1000);
[e ( _delay_ms (1 -> -> 1000 `i `ui ]
"79
[; ;Cooker.c: 79:         PORTCbits.RC1 = 0;
[e = . . _PORTCbits 0 1 -> -> 0 `i `uc ]
"80
[; ;Cooker.c: 80:         delay_ms(1000);
[e ( _delay_ms (1 -> -> 1000 `i `ui ]
"81
[; ;Cooker.c: 81:     }
}
[e ++ _i -> 1 `i ]
[e $ < _i -> 4 `i 274  ]
[e :U 275 ]
}
"82
[; ;Cooker.c: 82: }
[e :UE 273 ]
}
"84
[; ;Cooker.c: 84: void reloadTimer0(void) {
[v _reloadTimer0 `(v ~T0 @X0 1 ef ]
{
[e :U _reloadTimer0 ]
[f ]
"85
[; ;Cooker.c: 85:     TMR3H = (unsigned char) ((3036 >> 8) & 0x00FF);
[e = _TMR3H -> & >> -> 3036 `i -> 8 `i -> 255 `i `uc ]
"86
[; ;Cooker.c: 86:     TMR3L = (unsigned char) (3036 & 0x00FF);
[e = _TMR3L -> & -> 3036 `i -> 255 `i `uc ]
"87
[; ;Cooker.c: 87: }
[e :UE 277 ]
}
"89
[; ;Cooker.c: 89: void Timer0_isr(void) {
[v _Timer0_isr `(v ~T0 @X0 1 ef ]
{
[e :U _Timer0_isr ]
[f ]
"91
[; ;Cooker.c: 91:     INTCONbits.TMR0IF = 0;
[e = . . _INTCONbits 0 2 -> -> 0 `i `uc ]
"92
[; ;Cooker.c: 92:     if (sec > 0)
[e $ ! > _sec -> 0 `i 279  ]
"93
[; ;Cooker.c: 93:         sec--;
[e -- _sec -> 1 `i ]
[e $U 280  ]
"94
[; ;Cooker.c: 94:     else if (min > 0) {
[e :U 279 ]
[e $ ! > _min -> 0 `i 281  ]
{
"95
[; ;Cooker.c: 95:         sec = 59;
[e = _sec -> 59 `i ]
"96
[; ;Cooker.c: 96:         min--;
[e -- _min -> 1 `i ]
"97
[; ;Cooker.c: 97:     } else if (hours > 0) {
}
[e $U 282  ]
[e :U 281 ]
[e $ ! > _hours -> 0 `i 283  ]
{
"98
[; ;Cooker.c: 98:         hours--;
[e -- _hours -> 1 `i ]
"99
[; ;Cooker.c: 99:         min = 59;
[e = _min -> 59 `i ]
"100
[; ;Cooker.c: 100:         sec = 59;
[e = _sec -> 59 `i ]
"101
[; ;Cooker.c: 101:     } else {
}
[e $U 284  ]
[e :U 283 ]
{
"102
[; ;Cooker.c: 102:         hours = 0;
[e = _hours -> 0 `i ]
"103
[; ;Cooker.c: 103:         min = 0;
[e = _min -> 0 `i ]
"104
[; ;Cooker.c: 104:         sec = 0;
[e = _sec -> 0 `i ]
"105
[; ;Cooker.c: 105:         cooker = 0;
[e = _cooker -> 0 `i ]
"106
[; ;Cooker.c: 106:         heater = 0;
[e = _heater -> 0 `i ]
"107
[; ;Cooker.c: 107:         PORTCbits.RC5 = 0;
[e = . . _PORTCbits 0 5 -> -> 0 `i `uc ]
"108
[; ;Cooker.c: 108:         T0CONbits.TMR0ON = 0;
[e = . . _T0CONbits 0 5 -> -> 0 `i `uc ]
"109
[; ;Cooker.c: 109:         buzzerON();
[e ( _buzzerON ..  ]
"110
[; ;Cooker.c: 110:     }
}
[e :U 284 ]
[e :U 282 ]
[e :U 280 ]
"111
[; ;Cooker.c: 111:     reloadTimer0();
[e ( _reloadTimer0 ..  ]
"112
[; ;Cooker.c: 112: }
[e :UE 278 ]
}
"114
[; ;Cooker.c: 114: void EXT_Int0_isr(void) {
[v _EXT_Int0_isr `(v ~T0 @X0 1 ef ]
{
[e :U _EXT_Int0_isr ]
[f ]
"115
[; ;Cooker.c: 115:     INTCONbits.INT0IF = 0;
[e = . . _INTCONbits 0 1 -> -> 0 `i `uc ]
"116
[; ;Cooker.c: 116:     if (mode == 4) {
[e $ ! == _mode -> 4 `i 286  ]
{
"117
[; ;Cooker.c: 117:         mode = 0;
[e = _mode -> 0 `i ]
"118
[; ;Cooker.c: 118:     } else {
}
[e $U 287  ]
[e :U 286 ]
{
"119
[; ;Cooker.c: 119:         mode++;
[e ++ _mode -> 1 `i ]
"120
[; ;Cooker.c: 120:     }
}
[e :U 287 ]
"121
[; ;Cooker.c: 121: }
[e :UE 285 ]
}
"123
[; ;Cooker.c: 123: void EXT_Int1_isr(void) {
[v _EXT_Int1_isr `(v ~T0 @X0 1 ef ]
{
[e :U _EXT_Int1_isr ]
[f ]
"124
[; ;Cooker.c: 124:     INTCON3bits.INT1IF = 0;
[e = . . _INTCON3bits 0 0 -> -> 0 `i `uc ]
"125
[; ;Cooker.c: 125:     if((hours+min+sec)>0){
[e $ ! > + + _hours _min _sec -> 0 `i 289  ]
{
"126
[; ;Cooker.c: 126:         T0CONbits.TMR0ON = 1;
[e = . . _T0CONbits 0 5 -> -> 1 `i `uc ]
"127
[; ;Cooker.c: 127:         cooker = 1;
[e = _cooker -> 1 `i ]
"128
[; ;Cooker.c: 128:     }
}
[e :U 289 ]
"129
[; ;Cooker.c: 129: }
[e :UE 288 ]
}
"131
[; ;Cooker.c: 131: void EXT_Int2_isr(void) {
[v _EXT_Int2_isr `(v ~T0 @X0 1 ef ]
{
[e :U _EXT_Int2_isr ]
[f ]
"132
[; ;Cooker.c: 132:     INTCON3bits.INT2IF = 0;
[e = . . _INTCON3bits 0 1 -> -> 0 `i `uc ]
"133
[; ;Cooker.c: 133:     T0CONbits.TMR0ON = 0;
[e = . . _T0CONbits 0 5 -> -> 0 `i `uc ]
"134
[; ;Cooker.c: 134:     cooker = 0;
[e = _cooker -> 0 `i ]
"135
[; ;Cooker.c: 135:     heater = 0;
[e = _heater -> 0 `i ]
"136
[; ;Cooker.c: 136:     PORTCbits.RC5 = 0;
[e = . . _PORTCbits 0 5 -> -> 0 `i `uc ]
"137
[; ;Cooker.c: 137: }
[e :UE 290 ]
}
[v $root$_highIsr `(v ~T0 @X0 0 e ]
"139
[; ;Cooker.c: 139: void __attribute__((picinterrupt(("high_priority"))))highIsr(void) {
[v _highIsr `(v ~T39 @X0 1 ef ]
{
[e :U _highIsr ]
[f ]
"141
[; ;Cooker.c: 141:     if (INTCONbits.TMR0IF) Timer0_isr();
[e $ ! != -> . . _INTCONbits 0 2 `i -> 0 `i 292  ]
[e ( _Timer0_isr ..  ]
[e $U 293  ]
"142
[; ;Cooker.c: 142:     else if (INTCONbits.INT0IF)EXT_Int0_isr();
[e :U 292 ]
[e $ ! != -> . . _INTCONbits 0 1 `i -> 0 `i 294  ]
[e ( _EXT_Int0_isr ..  ]
[e $U 295  ]
"143
[; ;Cooker.c: 143:     else if (INTCON3bits.INT1IF)EXT_Int1_isr();
[e :U 294 ]
[e $ ! != -> . . _INTCON3bits 0 0 `i -> 0 `i 296  ]
[e ( _EXT_Int1_isr ..  ]
[e $U 297  ]
"144
[; ;Cooker.c: 144:     else if (INTCON3bits.INT2IF)EXT_Int2_isr();
[e :U 296 ]
[e $ ! != -> . . _INTCON3bits 0 1 `i -> 0 `i 298  ]
[e ( _EXT_Int2_isr ..  ]
[e :U 298 ]
[e :U 297 ]
[e :U 295 ]
[e :U 293 ]
"146
[; ;Cooker.c: 146: }
[e :UE 291 ]
}
"148
[; ;Cooker.c: 148: void delay_ms(unsigned int n) {
[v _delay_ms `(v ~T0 @X0 1 ef1`ui ]
{
[e :U _delay_ms ]
[v _n `ui ~T0 @X0 1 r1 ]
[f ]
"149
[; ;Cooker.c: 149:     int i;
[v _i `i ~T0 @X0 1 a ]
"150
[; ;Cooker.c: 150:     for (i = 0; i < n; i++) {
{
[e = _i -> 0 `i ]
[e $U 303  ]
[e :U 300 ]
{
"151
[; ;Cooker.c: 151:         _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
[e ( __delaywdt (1 -> * -> -> 1 `i `d / -> -> 4000000 `ul `d .4000.0 `ul ]
"152
[; ;Cooker.c: 152:     }
}
[e ++ _i -> 1 `i ]
[e :U 303 ]
[e $ < -> _i `ui _n 300  ]
[e :U 301 ]
}
"153
[; ;Cooker.c: 153: }
[e :UE 299 ]
}
"155
[; ;Cooker.c: 155: void setupPorts(void) {
[v _setupPorts `(v ~T0 @X0 1 ef ]
{
[e :U _setupPorts ]
[f ]
"156
[; ;Cooker.c: 156:     ADCON0 = 0;
[e = _ADCON0 -> -> 0 `i `uc ]
"157
[; ;Cooker.c: 157:     ADCON1 = 0b00001100;
[e = _ADCON1 -> -> 12 `i `uc ]
"158
[; ;Cooker.c: 158:     TRISB = 0xFF;
[e = _TRISB -> -> 255 `i `uc ]
"159
[; ;Cooker.c: 159:     TRISC = 0x00;
[e = _TRISC -> -> 0 `i `uc ]
"160
[; ;Cooker.c: 160:     PORTC = 0;
[e = _PORTC -> -> 0 `i `uc ]
"161
[; ;Cooker.c: 161:     TRISA = 0xFF;
[e = _TRISA -> -> 255 `i `uc ]
"162
[; ;Cooker.c: 162:     TRISD = 0x00;
[e = _TRISD -> -> 0 `i `uc ]
"163
[; ;Cooker.c: 163:     TRISE = 0x00;
[e = _TRISE -> -> 0 `i `uc ]
"164
[; ;Cooker.c: 164: }
[e :UE 304 ]
}
"166
[; ;Cooker.c: 166: void display(void) {
[v _display `(v ~T0 @X0 1 ef ]
{
[e :U _display ]
[f ]
"167
[; ;Cooker.c: 167:     char HT[6];
[v _HT `uc ~T0 @X0 -> 6 `i a ]
"168
[; ;Cooker.c: 168:     char CK[6];
[v _CK `uc ~T0 @X0 -> 6 `i a ]
"169
[; ;Cooker.c: 169:     char LCD[64];
[v _LCD `uc ~T0 @X0 -> 64 `i a ]
"170
[; ;Cooker.c: 170:     char LCDP[64];
[v _LCDP `uc ~T0 @X0 -> 64 `i a ]
"172
[; ;Cooker.c: 172:     switch (mode) {
[e $U 307  ]
{
"173
[; ;Cooker.c: 173:         case 0:
[e :U 308 ]
"174
[; ;Cooker.c: 174:             sprintf(LCDP, "Sec          ");
[e ( _sprintf (1 , &U _LCDP :s 1C ]
"175
[; ;Cooker.c: 175:             break;
[e $U 306  ]
"177
[; ;Cooker.c: 177:         case 1:
[e :U 309 ]
"178
[; ;Cooker.c: 178:             sprintf(LCDP, "10Sec          ");
[e ( _sprintf (1 , &U _LCDP :s 2C ]
"179
[; ;Cooker.c: 179:             break;
[e $U 306  ]
"180
[; ;Cooker.c: 180:         case 2:
[e :U 310 ]
"181
[; ;Cooker.c: 181:             sprintf(LCDP, "Min          ");
[e ( _sprintf (1 , &U _LCDP :s 3C ]
"182
[; ;Cooker.c: 182:             break;
[e $U 306  ]
"183
[; ;Cooker.c: 183:         case 3:
[e :U 311 ]
"184
[; ;Cooker.c: 184:             sprintf(LCDP, "10Min      ");
[e ( _sprintf (1 , &U _LCDP :s 4C ]
"185
[; ;Cooker.c: 185:             break;
[e $U 306  ]
"186
[; ;Cooker.c: 186:         case 4:
[e :U 312 ]
"187
[; ;Cooker.c: 187:             sprintf(LCDP, "HR        ");
[e ( _sprintf (1 , &U _LCDP :s 5C ]
"188
[; ;Cooker.c: 188:             break;
[e $U 306  ]
"189
[; ;Cooker.c: 189:     }
}
[e $U 306  ]
[e :U 307 ]
[e [\ _mode , $ -> 0 `i 308
 , $ -> 1 `i 309
 , $ -> 2 `i 310
 , $ -> 3 `i 311
 , $ -> 4 `i 312
 306 ]
[e :U 306 ]
"191
[; ;Cooker.c: 191:     if (heater) {
[e $ ! != _heater -> 0 `i 313  ]
{
"192
[; ;Cooker.c: 192:         sprintf(HT, "HT: ON");
[e ( _sprintf (1 , &U _HT :s 6C ]
"193
[; ;Cooker.c: 193:     } else {
}
[e $U 314  ]
[e :U 313 ]
{
"194
[; ;Cooker.c: 194:         sprintf(HT, "HT:OFF");
[e ( _sprintf (1 , &U _HT :s 7C ]
"195
[; ;Cooker.c: 195:     }
}
[e :U 314 ]
"197
[; ;Cooker.c: 197:     if (cooker) {
[e $ ! != _cooker -> 0 `i 315  ]
{
"198
[; ;Cooker.c: 198:         sprintf(CK, "CK: ON");
[e ( _sprintf (1 , &U _CK :s 8C ]
"199
[; ;Cooker.c: 199:     } else {
}
[e $U 316  ]
[e :U 315 ]
{
"200
[; ;Cooker.c: 200:         sprintf(CK, "CK:OFF");
[e ( _sprintf (1 , &U _CK :s 9C ]
"201
[; ;Cooker.c: 201:     }
}
[e :U 316 ]
"203
[; ;Cooker.c: 203:     lcd_gotoxy(1, 1);
[e ( _lcd_gotoxy (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"204
[; ;Cooker.c: 204:     sprintf(LCD, "Time: %.2d:%.2d:%.2d", hours, min, sec);
[e ( _sprintf (1 , , , (. , &U _LCD :s 10C _hours _min _sec ]
"205
[; ;Cooker.c: 205:     lcd_puts(LCD);
[e ( _lcd_puts (1 &U _LCD ]
"208
[; ;Cooker.c: 208:     lcd_gotoxy(1, 2);
[e ( _lcd_gotoxy (2 , -> -> 1 `i `uc -> -> 2 `i `uc ]
"209
[; ;Cooker.c: 209:     sprintf(LCD, "CT:%5.1fC  ", Temp);
[e ( _sprintf (1 , (. , &U _LCD :s 11C -> _Temp `d ]
"210
[; ;Cooker.c: 210:     lcd_puts(LCD);
[e ( _lcd_puts (1 &U _LCD ]
"212
[; ;Cooker.c: 212:     lcd_gotoxy(11, 2);
[e ( _lcd_gotoxy (2 , -> -> 11 `i `uc -> -> 2 `i `uc ]
"213
[; ;Cooker.c: 213:     lcd_puts(CK);
[e ( _lcd_puts (1 &U _CK ]
"215
[; ;Cooker.c: 215:     lcd_gotoxy(1, 3);
[e ( _lcd_gotoxy (2 , -> -> 1 `i `uc -> -> 3 `i `uc ]
"216
[; ;Cooker.c: 216:     sprintf(LCD, "SP:%5.1fC  ", SP);
[e ( _sprintf (1 , (. , &U _LCD :s 12C -> _SP `d ]
"217
[; ;Cooker.c: 217:     lcd_puts(LCD);
[e ( _lcd_puts (1 &U _LCD ]
"219
[; ;Cooker.c: 219:     lcd_gotoxy(11, 3);
[e ( _lcd_gotoxy (2 , -> -> 11 `i `uc -> -> 3 `i `uc ]
"220
[; ;Cooker.c: 220:     lcd_puts(HT);
[e ( _lcd_puts (1 &U _HT ]
"223
[; ;Cooker.c: 223:     lcd_gotoxy(1, 4);
[e ( _lcd_gotoxy (2 , -> -> 1 `i `uc -> -> 4 `i `uc ]
"224
[; ;Cooker.c: 224:     sprintf(LCD, "MD:");
[e ( _sprintf (1 , &U _LCD :s 13C ]
"225
[; ;Cooker.c: 225:     lcd_puts(LCD);
[e ( _lcd_puts (1 &U _LCD ]
"227
[; ;Cooker.c: 227:     lcd_gotoxy(4, 4);
[e ( _lcd_gotoxy (2 , -> -> 4 `i `uc -> -> 4 `i `uc ]
"228
[; ;Cooker.c: 228:     lcd_puts(LCDP);
[e ( _lcd_puts (1 &U _LCDP ]
"230
[; ;Cooker.c: 230: }
[e :UE 305 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"232
[; ;Cooker.c: 232: void main(void) {
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"233
[; ;Cooker.c: 233:     setupPorts();
[e ( _setupPorts ..  ]
"234
[; ;Cooker.c: 234:     init_adc_no_lib();
[e ( _init_adc_no_lib ..  ]
"237
[; ;Cooker.c: 237:     T0CON = 0;
[e = _T0CON -> -> 0 `i `uc ]
"238
[; ;Cooker.c: 238:     T0CONbits.TMR0ON = 0;
[e = . . _T0CONbits 0 5 -> -> 0 `i `uc ]
"239
[; ;Cooker.c: 239:     T0CONbits.T08BIT = 0;
[e = . . _T0CONbits 0 4 -> -> 0 `i `uc ]
"240
[; ;Cooker.c: 240:     T0CONbits.T0CS = 0;
[e = . . _T0CONbits 0 3 -> -> 0 `i `uc ]
"241
[; ;Cooker.c: 241:     T0CONbits.T0SE = 0;
[e = . . _T0CONbits 0 2 -> -> 0 `i `uc ]
"242
[; ;Cooker.c: 242:     T0CONbits.PSA = 0;
[e = . . _T0CONbits 0 1 -> -> 0 `i `uc ]
"243
[; ;Cooker.c: 243:     T0CONbits.T0PS2 = 0;
[e = . . _T0CONbits 1 2 -> -> 0 `i `uc ]
"244
[; ;Cooker.c: 244:     T0CONbits.T0PS1 = 1;
[e = . . _T0CONbits 1 1 -> -> 1 `i `uc ]
"245
[; ;Cooker.c: 245:     T0CONbits.T0PS0 = 1;
[e = . . _T0CONbits 1 0 -> -> 1 `i `uc ]
"249
[; ;Cooker.c: 249:     RCONbits.IPEN = 0;
[e = . . _RCONbits 5 7 -> -> 0 `i `uc ]
"251
[; ;Cooker.c: 251:     INTCON = 0;
[e = _INTCON -> -> 0 `i `uc ]
"252
[; ;Cooker.c: 252:     INTCONbits.INT0IE = 1;
[e = . . _INTCONbits 0 4 -> -> 1 `i `uc ]
"253
[; ;Cooker.c: 253:     INTCONbits.TMR0IE = 1;
[e = . . _INTCONbits 0 5 -> -> 1 `i `uc ]
"254
[; ;Cooker.c: 254:     INTCONbits.GIEH = 1;
[e = . . _INTCONbits 2 2 -> -> 1 `i `uc ]
"255
[; ;Cooker.c: 255:     INTCONbits.GIEL = 1;
[e = . . _INTCONbits 2 1 -> -> 1 `i `uc ]
"257
[; ;Cooker.c: 257:     INTCON2 = 0;
[e = _INTCON2 -> -> 0 `i `uc ]
"258
[; ;Cooker.c: 258:     INTCON2bits.INTEDG0 = 1;
[e = . . _INTCON2bits 1 6 -> -> 1 `i `uc ]
"259
[; ;Cooker.c: 259:     INTCON2bits.INTEDG1 = 1;
[e = . . _INTCON2bits 1 5 -> -> 1 `i `uc ]
"260
[; ;Cooker.c: 260:     INTCON2bits.INTEDG2 = 1;
[e = . . _INTCON2bits 1 4 -> -> 1 `i `uc ]
"262
[; ;Cooker.c: 262:     INTCON3 = 0;
[e = _INTCON3 -> -> 0 `i `uc ]
"263
[; ;Cooker.c: 263:     INTCON3bits.INT1IE = 1;
[e = . . _INTCON3bits 0 3 -> -> 1 `i `uc ]
"264
[; ;Cooker.c: 264:     INTCON3bits.INT2IE = 1;
[e = . . _INTCON3bits 0 4 -> -> 1 `i `uc ]
"267
[; ;Cooker.c: 267:     PIE1 = 0;
[e = _PIE1 -> -> 0 `i `uc ]
"268
[; ;Cooker.c: 268:     PIR1 = 0;
[e = _PIR1 -> -> 0 `i `uc ]
"269
[; ;Cooker.c: 269:     IPR1 = 0;
[e = _IPR1 -> -> 0 `i `uc ]
"270
[; ;Cooker.c: 270:     PIE2 = 0;
[e = _PIE2 -> -> 0 `i `uc ]
"271
[; ;Cooker.c: 271:     PIE2 = 0;
[e = _PIE2 -> -> 0 `i `uc ]
"272
[; ;Cooker.c: 272:     PIR2 = 0;
[e = _PIR2 -> -> 0 `i `uc ]
"273
[; ;Cooker.c: 273:     IPR2 = 0;
[e = _IPR2 -> -> 0 `i `uc ]
"274
[; ;Cooker.c: 274:     PORTB = 0;
[e = _PORTB -> -> 0 `i `uc ]
"279
[; ;Cooker.c: 279:     lcd_init();
[e ( _lcd_init ..  ]
"280
[; ;Cooker.c: 280:     lcd_send_byte(0, 1);
[e ( _lcd_send_byte (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
"281
[; ;Cooker.c: 281:     while (1) {
[e :U 319 ]
{
"283
[; ;Cooker.c: 283:         __asm(" clrwdt");
[; <"  clrwdt ;# ">
"284
[; ;Cooker.c: 284:         SP = (read_adc_voltage(0))*40.0;
[e = _SP -> * -> ( _read_adc_voltage (1 -> -> 0 `i `uc `d .40.0 `f ]
"287
[; ;Cooker.c: 287:         Temp = (read_adc_voltage(2))*200.0;
[e = _Temp -> * -> ( _read_adc_voltage (1 -> -> 2 `i `uc `d .200.0 `f ]
"290
[; ;Cooker.c: 290:         if (!PORTBbits.RB3) {
[e $ ! ! != -> . . _PORTBbits 0 3 `i -> 0 `i 321  ]
{
"291
[; ;Cooker.c: 291:             if (mode == 0 && hours < 5) {
[e $ ! && == _mode -> 0 `i < _hours -> 5 `i 322  ]
{
"292
[; ;Cooker.c: 292:                 if (sec <= 58)
[e $ ! <= _sec -> 58 `i 323  ]
"293
[; ;Cooker.c: 293:                     sec++;
[e ++ _sec -> 1 `i ]
[e $U 324  ]
"294
[; ;Cooker.c: 294:                 else {
[e :U 323 ]
{
"295
[; ;Cooker.c: 295:                     sec = 0;
[e = _sec -> 0 `i ]
"296
[; ;Cooker.c: 296:                     if (min <= 58)
[e $ ! <= _min -> 58 `i 325  ]
"297
[; ;Cooker.c: 297:                         min++;
[e ++ _min -> 1 `i ]
[e $U 326  ]
"298
[; ;Cooker.c: 298:                     else {
[e :U 325 ]
{
"299
[; ;Cooker.c: 299:                         min = 0;
[e = _min -> 0 `i ]
"300
[; ;Cooker.c: 300:                         hours++;
[e ++ _hours -> 1 `i ]
"301
[; ;Cooker.c: 301:                     }
}
[e :U 326 ]
"302
[; ;Cooker.c: 302:                 }
}
[e :U 324 ]
"303
[; ;Cooker.c: 303:             }
}
[e :U 322 ]
"304
[; ;Cooker.c: 304:             if (mode == 1 && hours < 5) {
[e $ ! && == _mode -> 1 `i < _hours -> 5 `i 327  ]
{
"305
[; ;Cooker.c: 305:                 if (sec <= 49)
[e $ ! <= _sec -> 49 `i 328  ]
"306
[; ;Cooker.c: 306:                     sec = sec + 10;
[e = _sec + _sec -> 10 `i ]
[e $U 329  ]
"307
[; ;Cooker.c: 307:                 else {
[e :U 328 ]
{
"308
[; ;Cooker.c: 308:                     sec = sec + 10 - 60;
[e = _sec - + _sec -> 10 `i -> 60 `i ]
"309
[; ;Cooker.c: 309:                     if (min <= 58) {
[e $ ! <= _min -> 58 `i 330  ]
{
"310
[; ;Cooker.c: 310:                         min++;
[e ++ _min -> 1 `i ]
"311
[; ;Cooker.c: 311:                     }
}
[e $U 331  ]
"312
[; ;Cooker.c: 312:                     else {
[e :U 330 ]
{
"313
[; ;Cooker.c: 313:                         min = 0;
[e = _min -> 0 `i ]
"314
[; ;Cooker.c: 314:                         hours++;
[e ++ _hours -> 1 `i ]
"315
[; ;Cooker.c: 315:                         if (hours == 5) {
[e $ ! == _hours -> 5 `i 332  ]
{
"316
[; ;Cooker.c: 316:                             min = 0;
[e = _min -> 0 `i ]
"317
[; ;Cooker.c: 317:                             sec = 0;
[e = _sec -> 0 `i ]
"318
[; ;Cooker.c: 318:                         }
}
[e :U 332 ]
"319
[; ;Cooker.c: 319:                     }
}
[e :U 331 ]
"320
[; ;Cooker.c: 320:                 }
}
[e :U 329 ]
"321
[; ;Cooker.c: 321:             }
}
[e :U 327 ]
"323
[; ;Cooker.c: 323:             if (mode == 2 && hours < 5) {
[e $ ! && == _mode -> 2 `i < _hours -> 5 `i 333  ]
{
"324
[; ;Cooker.c: 324:                 if (min <= 58) {
[e $ ! <= _min -> 58 `i 334  ]
{
"325
[; ;Cooker.c: 325:                     min++;
[e ++ _min -> 1 `i ]
"326
[; ;Cooker.c: 326:                 } else {
}
[e $U 335  ]
[e :U 334 ]
{
"327
[; ;Cooker.c: 327:                     min = 0;
[e = _min -> 0 `i ]
"328
[; ;Cooker.c: 328:                     hours++;
[e ++ _hours -> 1 `i ]
"329
[; ;Cooker.c: 329:                 }
}
[e :U 335 ]
"330
[; ;Cooker.c: 330:             }
}
[e :U 333 ]
"332
[; ;Cooker.c: 332:             if (mode == 3 && hours < 5) {
[e $ ! && == _mode -> 3 `i < _hours -> 5 `i 336  ]
{
"333
[; ;Cooker.c: 333:                 if (min <= 49)
[e $ ! <= _min -> 49 `i 337  ]
"334
[; ;Cooker.c: 334:                     min = min + 10;
[e = _min + _min -> 10 `i ]
[e $U 338  ]
"335
[; ;Cooker.c: 335:                 else {
[e :U 337 ]
{
"336
[; ;Cooker.c: 336:                     min = min + 10 - 60;
[e = _min - + _min -> 10 `i -> 60 `i ]
"337
[; ;Cooker.c: 337:                     if (hours < 5) {
[e $ ! < _hours -> 5 `i 339  ]
{
"338
[; ;Cooker.c: 338:                         hours++;
[e ++ _hours -> 1 `i ]
"339
[; ;Cooker.c: 339:                     }
}
[e :U 339 ]
"340
[; ;Cooker.c: 340:                     if (hours == 5) {
[e $ ! == _hours -> 5 `i 340  ]
{
"341
[; ;Cooker.c: 341:                         min = 0;
[e = _min -> 0 `i ]
"342
[; ;Cooker.c: 342:                         sec = 0;
[e = _sec -> 0 `i ]
"343
[; ;Cooker.c: 343:                     }
}
[e :U 340 ]
"344
[; ;Cooker.c: 344:                 }
}
[e :U 338 ]
"345
[; ;Cooker.c: 345:             }
}
[e $U 341  ]
"347
[; ;Cooker.c: 347:             else if (mode == 4 && hours < 5) {
[e :U 336 ]
[e $ ! && == _mode -> 4 `i < _hours -> 5 `i 342  ]
{
"348
[; ;Cooker.c: 348:                 if (hours < 5) {
[e $ ! < _hours -> 5 `i 343  ]
{
"349
[; ;Cooker.c: 349:                     hours++;
[e ++ _hours -> 1 `i ]
"350
[; ;Cooker.c: 350:                 }
}
[e :U 343 ]
"351
[; ;Cooker.c: 351:                 if (hours == 5) {
[e $ ! == _hours -> 5 `i 344  ]
{
"352
[; ;Cooker.c: 352:                     min = 0;
[e = _min -> 0 `i ]
"353
[; ;Cooker.c: 353:                     sec = 0;
[e = _sec -> 0 `i ]
"354
[; ;Cooker.c: 354:                 }
}
[e :U 344 ]
"355
[; ;Cooker.c: 355:             }
}
[e :U 342 ]
[e :U 341 ]
"356
[; ;Cooker.c: 356:             delay_ms(250);
[e ( _delay_ms (1 -> -> 250 `i `ui ]
"357
[; ;Cooker.c: 357:         }
}
[e $U 345  ]
"358
[; ;Cooker.c: 358:         else if (!PORTBbits.RB4) {
[e :U 321 ]
[e $ ! ! != -> . . _PORTBbits 0 4 `i -> 0 `i 346  ]
{
"359
[; ;Cooker.c: 359:             if (mode == 0) {
[e $ ! == _mode -> 0 `i 347  ]
{
"360
[; ;Cooker.c: 360:                 if (sec > 0)
[e $ ! > _sec -> 0 `i 348  ]
"361
[; ;Cooker.c: 361:                     sec--;
[e -- _sec -> 1 `i ]
[e $U 349  ]
"362
[; ;Cooker.c: 362:                 else if (min > 0) {
[e :U 348 ]
[e $ ! > _min -> 0 `i 350  ]
{
"363
[; ;Cooker.c: 363:                     sec = 59;
[e = _sec -> 59 `i ]
"364
[; ;Cooker.c: 364:                     min--;
[e -- _min -> 1 `i ]
"365
[; ;Cooker.c: 365:                 } else if (hours > 0) {
}
[e $U 351  ]
[e :U 350 ]
[e $ ! > _hours -> 0 `i 352  ]
{
"366
[; ;Cooker.c: 366:                     hours--;
[e -- _hours -> 1 `i ]
"367
[; ;Cooker.c: 367:                     min = 59;
[e = _min -> 59 `i ]
"368
[; ;Cooker.c: 368:                     sec = 59;
[e = _sec -> 59 `i ]
"369
[; ;Cooker.c: 369:                 } else {
}
[e $U 353  ]
[e :U 352 ]
{
"370
[; ;Cooker.c: 370:                     hours = 0;
[e = _hours -> 0 `i ]
"371
[; ;Cooker.c: 371:                     min = 0;
[e = _min -> 0 `i ]
"372
[; ;Cooker.c: 372:                     sec = 0;
[e = _sec -> 0 `i ]
"373
[; ;Cooker.c: 373:                 }
}
[e :U 353 ]
[e :U 351 ]
[e :U 349 ]
"374
[; ;Cooker.c: 374:             }
}
[e :U 347 ]
"376
[; ;Cooker.c: 376:             if (mode == 1) {
[e $ ! == _mode -> 1 `i 354  ]
{
"377
[; ;Cooker.c: 377:                 if (sec >= 10)
[e $ ! >= _sec -> 10 `i 355  ]
"378
[; ;Cooker.c: 378:                     sec = sec - 10;
[e = _sec - _sec -> 10 `i ]
[e $U 356  ]
"379
[; ;Cooker.c: 379:                 else if (min > 0) {
[e :U 355 ]
[e $ ! > _min -> 0 `i 357  ]
{
"380
[; ;Cooker.c: 380:                     sec = 60 + sec - 10;
[e = _sec - + -> 60 `i _sec -> 10 `i ]
"381
[; ;Cooker.c: 381:                     min--;
[e -- _min -> 1 `i ]
"382
[; ;Cooker.c: 382:                 } else if (hours > 0) {
}
[e $U 358  ]
[e :U 357 ]
[e $ ! > _hours -> 0 `i 359  ]
{
"383
[; ;Cooker.c: 383:                     hours--;
[e -- _hours -> 1 `i ]
"384
[; ;Cooker.c: 384:                     min = 59;
[e = _min -> 59 `i ]
"385
[; ;Cooker.c: 385:                     sec = 60 + sec - 10;
[e = _sec - + -> 60 `i _sec -> 10 `i ]
"386
[; ;Cooker.c: 386:                 } else {
}
[e $U 360  ]
[e :U 359 ]
{
"387
[; ;Cooker.c: 387:                     hours = 0;
[e = _hours -> 0 `i ]
"388
[; ;Cooker.c: 388:                     min = 0;
[e = _min -> 0 `i ]
"389
[; ;Cooker.c: 389:                     sec = 0;
[e = _sec -> 0 `i ]
"390
[; ;Cooker.c: 390:                 }
}
[e :U 360 ]
[e :U 358 ]
[e :U 356 ]
"391
[; ;Cooker.c: 391:             }
}
[e :U 354 ]
"393
[; ;Cooker.c: 393:             if (mode == 2) {
[e $ ! == _mode -> 2 `i 361  ]
{
"394
[; ;Cooker.c: 394:                 if (min > 0) {
[e $ ! > _min -> 0 `i 362  ]
{
"395
[; ;Cooker.c: 395:                     min--;
[e -- _min -> 1 `i ]
"396
[; ;Cooker.c: 396:                 } else if (hours > 0) {
}
[e $U 363  ]
[e :U 362 ]
[e $ ! > _hours -> 0 `i 364  ]
{
"397
[; ;Cooker.c: 397:                     hours--;
[e -- _hours -> 1 `i ]
"398
[; ;Cooker.c: 398:                     min = 59;
[e = _min -> 59 `i ]
"399
[; ;Cooker.c: 399:                 } else {
}
[e $U 365  ]
[e :U 364 ]
{
"400
[; ;Cooker.c: 400:                     hours = 0;
[e = _hours -> 0 `i ]
"401
[; ;Cooker.c: 401:                     min = 0;
[e = _min -> 0 `i ]
"402
[; ;Cooker.c: 402:                     sec = 0;
[e = _sec -> 0 `i ]
"403
[; ;Cooker.c: 403:                 }
}
[e :U 365 ]
[e :U 363 ]
"404
[; ;Cooker.c: 404:             }
}
[e :U 361 ]
"406
[; ;Cooker.c: 406:             if (mode == 3) {
[e $ ! == _mode -> 3 `i 366  ]
{
"407
[; ;Cooker.c: 407:                 if (min >= 10)
[e $ ! >= _min -> 10 `i 367  ]
"408
[; ;Cooker.c: 408:                     min = min - 10;
[e = _min - _min -> 10 `i ]
[e $U 368  ]
"409
[; ;Cooker.c: 409:                 else if (hours > 0) {
[e :U 367 ]
[e $ ! > _hours -> 0 `i 369  ]
{
"410
[; ;Cooker.c: 410:                     min = 60 + min - 10;
[e = _min - + -> 60 `i _min -> 10 `i ]
"411
[; ;Cooker.c: 411:                     hours--;
[e -- _hours -> 1 `i ]
"412
[; ;Cooker.c: 412:                 } else {
}
[e $U 370  ]
[e :U 369 ]
{
"413
[; ;Cooker.c: 413:                     hours = 0;
[e = _hours -> 0 `i ]
"414
[; ;Cooker.c: 414:                     min = 0;
[e = _min -> 0 `i ]
"415
[; ;Cooker.c: 415:                     sec = 0;
[e = _sec -> 0 `i ]
"416
[; ;Cooker.c: 416:                 }
}
[e :U 370 ]
[e :U 368 ]
"417
[; ;Cooker.c: 417:             }
}
[e :U 366 ]
"419
[; ;Cooker.c: 419:             if (mode == 4) {
[e $ ! == _mode -> 4 `i 371  ]
{
"420
[; ;Cooker.c: 420:                 if (hours > 0)
[e $ ! > _hours -> 0 `i 372  ]
"421
[; ;Cooker.c: 421:                     hours--;
[e -- _hours -> 1 `i ]
[e $U 373  ]
"422
[; ;Cooker.c: 422:                 else {
[e :U 372 ]
{
"423
[; ;Cooker.c: 423:                     hours = 0;
[e = _hours -> 0 `i ]
"424
[; ;Cooker.c: 424:                     min = 0;
[e = _min -> 0 `i ]
"425
[; ;Cooker.c: 425:                     sec = 0;
[e = _sec -> 0 `i ]
"426
[; ;Cooker.c: 426:                 }
}
[e :U 373 ]
"427
[; ;Cooker.c: 427:             }
}
[e :U 371 ]
"429
[; ;Cooker.c: 429:             delay_ms(250);
[e ( _delay_ms (1 -> -> 250 `i `ui ]
"430
[; ;Cooker.c: 430:         }
}
[e $U 374  ]
"431
[; ;Cooker.c: 431:         else if (!PORTBbits.RB5) {
[e :U 346 ]
[e $ ! ! != -> . . _PORTBbits 0 5 `i -> 0 `i 375  ]
{
"432
[; ;Cooker.c: 432:             hours = 0;
[e = _hours -> 0 `i ]
"433
[; ;Cooker.c: 433:             min = 0;
[e = _min -> 0 `i ]
"434
[; ;Cooker.c: 434:             sec = 0;
[e = _sec -> 0 `i ]
"435
[; ;Cooker.c: 435:             cooker = 0;
[e = _cooker -> 0 `i ]
"436
[; ;Cooker.c: 436:             heater = 0;
[e = _heater -> 0 `i ]
"437
[; ;Cooker.c: 437:             PORTCbits.RC5 = 0;
[e = . . _PORTCbits 0 5 -> -> 0 `i `uc ]
"438
[; ;Cooker.c: 438:             T0CONbits.TMR0ON = 0;
[e = . . _T0CONbits 0 5 -> -> 0 `i `uc ]
"439
[; ;Cooker.c: 439:         }
}
[e :U 375 ]
[e :U 374 ]
[e :U 345 ]
"441
[; ;Cooker.c: 441:         if (cooker) {
[e $ ! != _cooker -> 0 `i 376  ]
{
"442
[; ;Cooker.c: 442:             if (Temp < SP - H) {
[e $ ! < _Temp - _SP -> _H `f 377  ]
{
"443
[; ;Cooker.c: 443:                 PORTCbits.RC5 = 1;
[e = . . _PORTCbits 0 5 -> -> 1 `i `uc ]
"444
[; ;Cooker.c: 444:                 heater = 1;
[e = _heater -> 1 `i ]
"445
[; ;Cooker.c: 445:             } else if (Temp > SP + H) {
}
[e $U 378  ]
[e :U 377 ]
[e $ ! > _Temp + _SP -> _H `f 379  ]
{
"446
[; ;Cooker.c: 446:                 PORTCbits.RC5 = 0;
[e = . . _PORTCbits 0 5 -> -> 0 `i `uc ]
"447
[; ;Cooker.c: 447:                 heater = 0;
[e = _heater -> 0 `i ]
"448
[; ;Cooker.c: 448:             }
}
[e :U 379 ]
[e :U 378 ]
"449
[; ;Cooker.c: 449:         }
}
[e :U 376 ]
"450
[; ;Cooker.c: 450:         display();
[e ( _display ..  ]
"451
[; ;Cooker.c: 451:     }
}
[e :U 318 ]
[e $U 319  ]
[e :U 320 ]
"452
[; ;Cooker.c: 452:     return;
[e $UE 317  ]
"453
[; ;Cooker.c: 453: }
[e :UE 317 ]
}
[p f _sprintf 8495232 ]
[a 10C 84 105 109 101 58 32 37 46 50 100 58 37 46 50 100 58 37 46 50 100 0 ]
[a 6C 72 84 58 32 79 78 0 ]
[a 8C 67 75 58 32 79 78 0 ]
[a 7C 72 84 58 79 70 70 0 ]
[a 9C 67 75 58 79 70 70 0 ]
[a 13C 77 68 58 0 ]
[a 11C 67 84 58 37 53 46 49 102 67 32 32 0 ]
[a 12C 83 80 58 37 53 46 49 102 67 32 32 0 ]
[a 4C 49 48 77 105 110 32 32 32 32 32 32 0 ]
[a 5C 72 82 32 32 32 32 32 32 32 32 0 ]
[a 3C 77 105 110 32 32 32 32 32 32 32 32 32 32 0 ]
[a 2C 49 48 83 101 99 32 32 32 32 32 32 32 32 32 32 0 ]
[a 1C 83 101 99 32 32 32 32 32 32 32 32 32 32 0 ]
